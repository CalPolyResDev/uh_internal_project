# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#     * Rearrange models' order
#     * Make sure each model has one field with primary_key=True
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.

from django.db import models

class Recipientdetails(models.Model):
    ck_plan_type = models.CharField(max_length=10, blank=True)
    ck_rms_id = models.IntegerField()
    plan_person_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    room_person_move_in_date = models.DateField(null=True, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    pk_section_id = models.CharField(max_length=10, blank=True)
    floor_sections_name = models.CharField(max_length=50, blank=True)
    pk_floor_id = models.CharField(max_length=10, blank=True)
    floors_name = models.CharField(max_length=50, blank=True)
    pk_building_id = models.CharField(max_length=10, blank=True)
    buildings_name = models.CharField(max_length=30, blank=True)
    buildings_address_1 = models.CharField(max_length=50, blank=True)
    buildings_address_1b = models.CharField(max_length=50, blank=True)
    buildings_address_2 = models.CharField(max_length=50, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    room_type_description = models.CharField(max_length=30, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    term_dates_name = models.CharField(max_length=25, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    fk_room_order_id = models.IntegerField()
    class Meta:
        db_table = u'recipientdetails'

class LogTAutoalloc(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson, null=True, blank=True)
    log_date = models.DateField(null=True, blank=True)
    log_user = models.CharField(max_length=50, blank=True)
    detail = models.CharField(max_length=4000, blank=True)
    entry_type = models.CharField(max_length=15, blank=True)
    procedure_name = models.CharField(max_length=50, blank=True)
    line_number = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'log_t_autoalloc'

class TempTRoommates7To11(models.Model):
    recipient_rms_id = models.IntegerField(null=True, blank=True)
    location_phone_7 = models.CharField(max_length=25, blank=True)
    address_1_7 = models.CharField(max_length=50, blank=True)
    address_1b_7 = models.CharField(max_length=50, blank=True)
    address_2_7 = models.CharField(max_length=50, blank=True)
    postcode_7 = models.CharField(max_length=15, blank=True)
    address_3_7 = models.CharField(max_length=50, blank=True)
    fk_state_7 = models.CharField(max_length=8, blank=True)
    e_mail_7 = models.CharField(max_length=50, blank=True)
    pk_rms_id_7 = models.IntegerField(null=True, blank=True)
    fk_marital_status_7 = models.CharField(max_length=25, blank=True)
    sex_7 = models.CharField(max_length=1, blank=True)
    title_7 = models.CharField(max_length=5, blank=True)
    ix_last_name_7 = models.CharField(max_length=25, blank=True)
    ix_first_name_7 = models.CharField(max_length=25, blank=True)
    ix_middle_name_7 = models.CharField(max_length=25, blank=True)
    phone_work_7 = models.CharField(max_length=25, blank=True)
    phone_cell_7 = models.CharField(max_length=25, blank=True)
    fax_7 = models.CharField(max_length=25, blank=True)
    person_type_7 = models.CharField(max_length=4, blank=True)
    ix_national_id_7 = models.CharField(max_length=15, blank=True)
    birth_date_7 = models.DateField(null=True, blank=True)
    location_phone_8 = models.CharField(max_length=25, blank=True)
    address_1_8 = models.CharField(max_length=50, blank=True)
    address_1b_8 = models.CharField(max_length=50, blank=True)
    address_2_8 = models.CharField(max_length=50, blank=True)
    postcode_8 = models.CharField(max_length=15, blank=True)
    address_3_8 = models.CharField(max_length=50, blank=True)
    fk_state_8 = models.CharField(max_length=8, blank=True)
    e_mail_8 = models.CharField(max_length=50, blank=True)
    pk_rms_id_8 = models.IntegerField(null=True, blank=True)
    fk_marital_status_8 = models.CharField(max_length=25, blank=True)
    sex_8 = models.CharField(max_length=1, blank=True)
    title_8 = models.CharField(max_length=5, blank=True)
    ix_last_name_8 = models.CharField(max_length=25, blank=True)
    ix_first_name_8 = models.CharField(max_length=25, blank=True)
    ix_middle_name_8 = models.CharField(max_length=25, blank=True)
    phone_work_8 = models.CharField(max_length=25, blank=True)
    phone_cell_8 = models.CharField(max_length=25, blank=True)
    fax_8 = models.CharField(max_length=25, blank=True)
    person_type_8 = models.CharField(max_length=4, blank=True)
    ix_national_id_8 = models.CharField(max_length=15, blank=True)
    birth_date_8 = models.DateField(null=True, blank=True)
    location_phone_9 = models.CharField(max_length=25, blank=True)
    address_1_9 = models.CharField(max_length=50, blank=True)
    address_1b_9 = models.CharField(max_length=50, blank=True)
    address_2_9 = models.CharField(max_length=50, blank=True)
    postcode_9 = models.CharField(max_length=15, blank=True)
    address_3_9 = models.CharField(max_length=50, blank=True)
    fk_state_9 = models.CharField(max_length=8, blank=True)
    e_mail_9 = models.CharField(max_length=50, blank=True)
    pk_rms_id_9 = models.IntegerField(null=True, blank=True)
    fk_marital_status_9 = models.CharField(max_length=25, blank=True)
    sex_9 = models.CharField(max_length=1, blank=True)
    title_9 = models.CharField(max_length=5, blank=True)
    ix_last_name_9 = models.CharField(max_length=25, blank=True)
    ix_first_name_9 = models.CharField(max_length=25, blank=True)
    ix_middle_name_9 = models.CharField(max_length=25, blank=True)
    phone_work_9 = models.CharField(max_length=25, blank=True)
    phone_cell_9 = models.CharField(max_length=25, blank=True)
    fax_9 = models.CharField(max_length=25, blank=True)
    person_type_9 = models.CharField(max_length=4, blank=True)
    ix_national_id_9 = models.CharField(max_length=15, blank=True)
    birth_date_9 = models.DateField(null=True, blank=True)
    location_phone_10 = models.CharField(max_length=25, blank=True)
    address_1_10 = models.CharField(max_length=50, blank=True)
    address_1b_10 = models.CharField(max_length=50, blank=True)
    address_2_10 = models.CharField(max_length=50, blank=True)
    postcode_10 = models.CharField(max_length=15, blank=True)
    address_3_10 = models.CharField(max_length=50, blank=True)
    fk_state_10 = models.CharField(max_length=8, blank=True)
    e_mail_10 = models.CharField(max_length=50, blank=True)
    pk_rms_id_10 = models.IntegerField(null=True, blank=True)
    fk_marital_status_10 = models.CharField(max_length=25, blank=True)
    sex_10 = models.CharField(max_length=1, blank=True)
    title_10 = models.CharField(max_length=5, blank=True)
    ix_last_name_10 = models.CharField(max_length=25, blank=True)
    ix_first_name_10 = models.CharField(max_length=25, blank=True)
    ix_middle_name_10 = models.CharField(max_length=25, blank=True)
    phone_work_10 = models.CharField(max_length=25, blank=True)
    phone_cell_10 = models.CharField(max_length=25, blank=True)
    fax_10 = models.CharField(max_length=25, blank=True)
    person_type_10 = models.CharField(max_length=4, blank=True)
    ix_national_id_10 = models.CharField(max_length=15, blank=True)
    birth_date_10 = models.DateField(null=True, blank=True)
    location_phone_11 = models.CharField(max_length=25, blank=True)
    address_1_11 = models.CharField(max_length=50, blank=True)
    address_1b_11 = models.CharField(max_length=50, blank=True)
    address_2_11 = models.CharField(max_length=50, blank=True)
    postcode_11 = models.CharField(max_length=15, blank=True)
    address_3_11 = models.CharField(max_length=50, blank=True)
    fk_state_11 = models.CharField(max_length=8, blank=True)
    e_mail_11 = models.CharField(max_length=50, blank=True)
    pk_rms_id_11 = models.IntegerField(null=True, blank=True)
    fk_marital_status_11 = models.CharField(max_length=25, blank=True)
    sex_11 = models.CharField(max_length=1, blank=True)
    title_11 = models.CharField(max_length=5, blank=True)
    ix_last_name_11 = models.CharField(max_length=25, blank=True)
    ix_first_name_11 = models.CharField(max_length=25, blank=True)
    ix_middle_name_11 = models.CharField(max_length=25, blank=True)
    phone_work_11 = models.CharField(max_length=25, blank=True)
    phone_cell_11 = models.CharField(max_length=25, blank=True)
    fax_11 = models.CharField(max_length=25, blank=True)
    person_type_11 = models.CharField(max_length=4, blank=True)
    ix_national_id_11 = models.CharField(max_length=15, blank=True)
    birth_date_11 = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_roommates_7to11'

class AudPpleTAddress(models.Model):
    ck_rms_id = models.IntegerField()
    ck_address_type = models.CharField(max_length=15)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_pple_t_address'

class IntrTExFin(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    rms_id = models.IntegerField(null=True, blank=True)
    open_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    txid = models.CharField(max_length=20, blank=True)
    txtype = models.CharField(max_length=10, blank=True)
    taxtype1 = models.CharField(max_length=10, blank=True)
    taxtype2 = models.CharField(max_length=10, blank=True)
    taxtype3 = models.CharField(max_length=10, blank=True)
    taxtype4 = models.CharField(max_length=10, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    invoice_description = models.CharField(max_length=250, blank=True)
    entered_by = models.CharField(max_length=50, blank=True)
    invoice_no = models.CharField(max_length=10, blank=True)
    fiscal_year = models.CharField(max_length=4, blank=True)
    dr_account = models.CharField(max_length=12, blank=True)
    cr_account = models.CharField(max_length=12, blank=True)
    d_c = models.CharField(max_length=1, blank=True)
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tamount = models.CharField(max_length=15, blank=True)
    posting_id = models.IntegerField(null=True, blank=True)
    payment_no = models.IntegerField(null=True, blank=True)
    transaction_type_default = models.IntegerField(null=True, blank=True)
    charges = models.IntegerField(null=True, blank=True)
    tax_txtype1 = models.CharField(max_length=10, blank=True)
    tax_txtype2 = models.CharField(max_length=10, blank=True)
    tax_txtype3 = models.CharField(max_length=10, blank=True)
    tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    uploadable = models.IntegerField(null=True, blank=True)
    transaction_type_description = models.CharField(max_length=50, blank=True)
    secondary_code = models.CharField(max_length=50, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    debit_account = models.CharField(max_length=12, blank=True)
    credit_account = models.CharField(max_length=12, blank=True)
    min_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    max_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    account_name = models.CharField(max_length=50, blank=True)
    account_type = models.CharField(max_length=20, blank=True)
    alias_code = models.CharField(max_length=30, blank=True)
    ix_receivable = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    state = models.CharField(max_length=8, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    religion = models.CharField(max_length=20, blank=True)
    student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    school = models.CharField(max_length=30, blank=True)
    major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    school_category = models.CharField(max_length=10, blank=True)
    location = models.CharField(max_length=10, blank=True)
    institution = models.CharField(max_length=15, blank=True)
    catering = models.CharField(max_length=5, blank=True)
    ethnicity = models.CharField(max_length=25, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    junk11 = models.CharField(max_length=50, blank=True)
    posted = models.DateField(null=True, blank=True)
    fk_dr_cr = models.CharField(max_length=2, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_ex_fin'

class AudPpleTPerson(models.Model):
    ck_rms_id = models.IntegerField()
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    ix_last_name = models.CharField(max_length=25)
    title = models.CharField(max_length=5, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    fk_marital_status = models.CharField(max_length=25)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4)
    notes = models.TextField(blank=True)
    fk_call_account_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    fk_security_id = models.IntegerField(null=True, blank=True)
    stud_user_name = models.CharField(max_length=250, blank=True)
    parent_user_name = models.CharField(max_length=250, blank=True)
    stud_screen_name = models.CharField(max_length=250, blank=True)
    parent_screen_name = models.CharField(max_length=250, blank=True)
    stud_pinnumber = models.CharField(max_length=250, blank=True)
    parent_pinnumber = models.CharField(max_length=250, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'aud_pple_t_person'

class AudRmgtTRoomConfigs(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    ck_rooms_config_no = models.IntegerField()
    fk_rooms_type = models.CharField(max_length=15)
    fk_section_id = models.CharField(max_length=8)
    rooms_start_date = models.DateField()
    rooms_end_date = models.DateField()
    gender = models.CharField(max_length=1)
    phone_equip_no = models.CharField(max_length=4, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    operating_mode = models.CharField(max_length=1)
    rooms_capacity = models.IntegerField()
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    eligibility_criteria = models.CharField(max_length=250)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    status = models.IntegerField()
    desirability = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_rmgt_t_room_configs'

class AudPpleTStudentProfile(models.Model):
    ck_rms_id = models.IntegerField()
    fk_school_category = models.CharField(max_length=10)
    fk_location = models.CharField(max_length=10)
    fk_institution = models.CharField(max_length=15)
    fk_catering = models.CharField(max_length=5)
    fk_ethnicity = models.CharField(max_length=25)
    fk_school = models.CharField(max_length=30)
    fk_religion = models.CharField(max_length=20)
    fk_major = models.CharField(max_length=30)
    fk_nationality = models.CharField(max_length=25)
    fk_student_type = models.CharField(max_length=5)
    ix_student_number = models.CharField(max_length=20, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grade_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50)
    non_stud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_pple_t_student_profile'

class IntrTImMultiApps(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    ck_change_type = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    app_no1 = models.IntegerField(null=True, blank=True)
    app_no2 = models.IntegerField(null=True, blank=True)
    app_no3 = models.IntegerField(null=True, blank=True)
    app_no4 = models.IntegerField(null=True, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    bond_paid = models.CharField(max_length=1, blank=True)
    fee_paid = models.CharField(max_length=1, blank=True)
    application_form_complete = models.CharField(max_length=1, blank=True)
    financial_guarantee = models.CharField(max_length=1, blank=True)
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    fk_bed_space1 = models.CharField(max_length=10, blank=True)
    fk_room_type1 = models.CharField(max_length=15, blank=True)
    fk_section_id1 = models.CharField(max_length=8, blank=True)
    fk_floor_id1 = models.CharField(max_length=8, blank=True)
    fk_building_id1 = models.CharField(max_length=8, blank=True)
    fk_community1 = models.CharField(max_length=25, blank=True)
    fk_bed_space2 = models.CharField(max_length=10, blank=True)
    fk_room_type2 = models.CharField(max_length=15, blank=True)
    fk_section_id2 = models.CharField(max_length=8, blank=True)
    fk_floor_id2 = models.CharField(max_length=8, blank=True)
    fk_building_id2 = models.CharField(max_length=8, blank=True)
    fk_community2 = models.CharField(max_length=25, blank=True)
    fk_bed_space3 = models.CharField(max_length=10, blank=True)
    fk_room_type3 = models.CharField(max_length=15, blank=True)
    fk_section_id3 = models.CharField(max_length=8, blank=True)
    fk_floor_id3 = models.CharField(max_length=8, blank=True)
    fk_building_id3 = models.CharField(max_length=8, blank=True)
    fk_community3 = models.CharField(max_length=25, blank=True)
    fk_bed_space4 = models.CharField(max_length=10, blank=True)
    fk_room_type4 = models.CharField(max_length=15, blank=True)
    fk_section_id4 = models.CharField(max_length=8, blank=True)
    fk_floor_id4 = models.CharField(max_length=8, blank=True)
    fk_building_id4 = models.CharField(max_length=8, blank=True)
    fk_community4 = models.CharField(max_length=25, blank=True)
    fk_bed_space5 = models.CharField(max_length=10, blank=True)
    fk_room_type5 = models.CharField(max_length=15, blank=True)
    fk_section_id5 = models.CharField(max_length=8, blank=True)
    fk_floor_id5 = models.CharField(max_length=8, blank=True)
    fk_building_id5 = models.CharField(max_length=8, blank=True)
    fk_community5 = models.CharField(max_length=25, blank=True)
    fk_bed_space6 = models.CharField(max_length=10, blank=True)
    fk_room_type6 = models.CharField(max_length=15, blank=True)
    fk_section_id6 = models.CharField(max_length=8, blank=True)
    fk_floor_id6 = models.CharField(max_length=8, blank=True)
    fk_building_id6 = models.CharField(max_length=8, blank=True)
    fk_community6 = models.CharField(max_length=25, blank=True)
    fk_bed_space7 = models.CharField(max_length=10, blank=True)
    fk_room_type7 = models.CharField(max_length=15, blank=True)
    fk_section_id7 = models.CharField(max_length=8, blank=True)
    fk_floor_id7 = models.CharField(max_length=8, blank=True)
    fk_building_id7 = models.CharField(max_length=8, blank=True)
    fk_community7 = models.CharField(max_length=25, blank=True)
    financial_hold = models.CharField(max_length=3, blank=True)
    judicial_hold = models.CharField(max_length=3, blank=True)
    privacy_flag_1 = models.CharField(max_length=3, blank=True)
    privacy_flag_2 = models.CharField(max_length=3, blank=True)
    privacy_flag_3 = models.CharField(max_length=3, blank=True)
    incident_type_6 = models.CharField(max_length=3, blank=True)
    incident_type_7 = models.CharField(max_length=3, blank=True)
    incident_type_8 = models.CharField(max_length=8, blank=True)
    incident_type_9 = models.CharField(max_length=3, blank=True)
    incident_type_10 = models.CharField(max_length=3, blank=True)
    fk_bed_space8 = models.CharField(max_length=10, blank=True)
    fk_room_type8 = models.CharField(max_length=15, blank=True)
    fk_section_id8 = models.CharField(max_length=8, blank=True)
    fk_floor_id8 = models.CharField(max_length=8, blank=True)
    fk_building_id8 = models.CharField(max_length=8, blank=True)
    fk_community8 = models.CharField(max_length=25, blank=True)
    fk_bed_space9 = models.CharField(max_length=10, blank=True)
    fk_room_type9 = models.CharField(max_length=15, blank=True)
    fk_section_id9 = models.CharField(max_length=8, blank=True)
    fk_floor_id9 = models.CharField(max_length=8, blank=True)
    fk_building_id9 = models.CharField(max_length=8, blank=True)
    fk_community9 = models.CharField(max_length=25, blank=True)
    fk_bed_space10 = models.CharField(max_length=10, blank=True)
    fk_room_type10 = models.CharField(max_length=15, blank=True)
    fk_section_id10 = models.CharField(max_length=8, blank=True)
    fk_floor_id10 = models.CharField(max_length=8, blank=True)
    fk_building_id10 = models.CharField(max_length=8, blank=True)
    fk_community10 = models.CharField(max_length=25, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_defined_text1 = models.CharField(max_length=250, blank=True)
    user_defined_text2 = models.CharField(max_length=250, blank=True)
    user_defined_text3 = models.CharField(max_length=250, blank=True)
    user_defined_text4 = models.CharField(max_length=250, blank=True)
    user_defined_text5 = models.CharField(max_length=250, blank=True)
    user_defined_text6 = models.CharField(max_length=250, blank=True)
    user_defined_text7 = models.CharField(max_length=250, blank=True)
    user_defined_text8 = models.CharField(max_length=250, blank=True)
    user_defined_text9 = models.CharField(max_length=250, blank=True)
    user_defined_text10 = models.CharField(max_length=250, blank=True)
    user_defined_text11 = models.CharField(max_length=250, blank=True)
    user_defined_text12 = models.CharField(max_length=250, blank=True)
    user_defined_text13 = models.CharField(max_length=250, blank=True)
    user_defined_text14 = models.CharField(max_length=250, blank=True)
    user_defined_text15 = models.CharField(max_length=250, blank=True)
    user_defined_text16 = models.CharField(max_length=250, blank=True)
    user_defined_text17 = models.CharField(max_length=250, blank=True)
    user_defined_text18 = models.CharField(max_length=250, blank=True)
    user_defined_text19 = models.CharField(max_length=250, blank=True)
    user_defined_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.CharField(max_length=1, blank=True)
    user_def_yes_no2 = models.CharField(max_length=1, blank=True)
    user_def_yes_no3 = models.CharField(max_length=1, blank=True)
    user_def_yes_no4 = models.CharField(max_length=1, blank=True)
    user_def_yes_no5 = models.CharField(max_length=1, blank=True)
    user_def_yes_no6 = models.CharField(max_length=1, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    fk_application_type1 = models.CharField(max_length=50, blank=True)
    fk_application_type2 = models.CharField(max_length=50, blank=True)
    fk_application_type3 = models.CharField(max_length=50, blank=True)
    fk_application_type4 = models.CharField(max_length=50, blank=True)
    appl_priority_allocation = models.CharField(max_length=1, blank=True)
    application_registration_paid = models.CharField(max_length=1, blank=True)
    faith_payment = models.CharField(max_length=1, blank=True)
    reference_2_sent = models.CharField(max_length=1, blank=True)
    reference_sent = models.CharField(max_length=1, blank=True)
    student_association_paid = models.CharField(max_length=1, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    appl_user_def_text1 = models.CharField(max_length=50, blank=True)
    appl_user_def_text2 = models.CharField(max_length=50, blank=True)
    appl_user_def_text3 = models.CharField(max_length=50, blank=True)
    appl_user_def_text4 = models.CharField(max_length=50, blank=True)
    appl_user_def_text5 = models.CharField(max_length=50, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    fk_room_number1 = models.CharField(max_length=10, blank=True)
    fk_room_number2 = models.CharField(max_length=10, blank=True)
    fk_room_number3 = models.CharField(max_length=10, blank=True)
    fk_room_number4 = models.CharField(max_length=10, blank=True)
    fk_room_number5 = models.CharField(max_length=10, blank=True)
    fk_room_number6 = models.CharField(max_length=10, blank=True)
    fk_room_number7 = models.CharField(max_length=10, blank=True)
    fk_room_number8 = models.CharField(max_length=10, blank=True)
    fk_room_number9 = models.CharField(max_length=10, blank=True)
    fk_room_number10 = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'intr_t_im_multi_apps'

class AudRmgtTRoomPerson(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    ck_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    fk_order_id = models.IntegerField()
    fk_rooms_config_no = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_billing_type = models.CharField(max_length=50)
    sk_room_order_id = models.CharField(max_length=20)
    individual_billing = models.IntegerField()
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    fk_term_id = models.CharField(max_length=8, blank=True)
    fk_rms_gid = models.IntegerField(null=True, blank=True)
    ns_bkg_flag = models.IntegerField()
    ns_bkg_dtls = models.CharField(max_length=500, blank=True)
    booking_hold = models.IntegerField(null=True, blank=True)
    locking_system_sent = models.DateField(null=True, blank=True)
    locking_system_indicator = models.CharField(max_length=1, blank=True)
    swsa_details = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'aud_rmgt_t_room_person'

class TempTIntrSelPerson(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    sel_person_name = models.CharField(max_length=75, blank=True)
    sel_person_person_type = models.CharField(max_length=4, blank=True)
    sel_person_info1 = models.CharField(max_length=254, blank=True)
    sel_person_info2 = models.CharField(max_length=254, blank=True)
    sel_person_info3 = models.CharField(max_length=254, blank=True)
    sel_person_info4 = models.CharField(max_length=254, blank=True)
    sel_person_info5 = models.CharField(max_length=254, blank=True)
    sel_person_info6 = models.CharField(max_length=254, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_intr_sel_person'

class TempTRoommates1To6(models.Model):
    recipient_rms_id = models.IntegerField(null=True, blank=True)
    location_phone_1 = models.CharField(max_length=25, blank=True)
    address_1_1 = models.CharField(max_length=50, blank=True)
    address_1b_1 = models.CharField(max_length=50, blank=True)
    address_2_1 = models.CharField(max_length=50, blank=True)
    postcode_1 = models.CharField(max_length=15, blank=True)
    address_3_1 = models.CharField(max_length=50, blank=True)
    fk_state_1 = models.CharField(max_length=8, blank=True)
    e_mail_1 = models.CharField(max_length=50, blank=True)
    pk_rms_id_1 = models.IntegerField(null=True, blank=True)
    fk_marital_status_1 = models.CharField(max_length=25, blank=True)
    sex_1 = models.CharField(max_length=1, blank=True)
    title_1 = models.CharField(max_length=5, blank=True)
    ix_last_name_1 = models.CharField(max_length=25, blank=True)
    ix_first_name_1 = models.CharField(max_length=25, blank=True)
    ix_middle_name_1 = models.CharField(max_length=25, blank=True)
    phone_work_1 = models.CharField(max_length=25, blank=True)
    phone_cell_1 = models.CharField(max_length=25, blank=True)
    fax_1 = models.CharField(max_length=25, blank=True)
    person_type_1 = models.CharField(max_length=4, blank=True)
    ix_national_id_1 = models.CharField(max_length=15, blank=True)
    birth_date_1 = models.DateField(null=True, blank=True)
    location_phone_2 = models.CharField(max_length=25, blank=True)
    address_1_2 = models.CharField(max_length=50, blank=True)
    address_1b_2 = models.CharField(max_length=50, blank=True)
    address_2_2 = models.CharField(max_length=50, blank=True)
    postcode_2 = models.CharField(max_length=15, blank=True)
    address_3_2 = models.CharField(max_length=50, blank=True)
    fk_state_2 = models.CharField(max_length=8, blank=True)
    e_mail_2 = models.CharField(max_length=50, blank=True)
    pk_rms_id_2 = models.IntegerField(null=True, blank=True)
    fk_marital_status_2 = models.CharField(max_length=25, blank=True)
    sex_2 = models.CharField(max_length=1, blank=True)
    title_2 = models.CharField(max_length=5, blank=True)
    ix_last_name_2 = models.CharField(max_length=25, blank=True)
    ix_first_name_2 = models.CharField(max_length=25, blank=True)
    ix_middle_name_2 = models.CharField(max_length=25, blank=True)
    phone_work_2 = models.CharField(max_length=25, blank=True)
    phone_cell_2 = models.CharField(max_length=25, blank=True)
    fax_2 = models.CharField(max_length=25, blank=True)
    person_type_2 = models.CharField(max_length=4, blank=True)
    ix_national_id_2 = models.CharField(max_length=15, blank=True)
    birth_date_2 = models.DateField(null=True, blank=True)
    location_phone_3 = models.CharField(max_length=25, blank=True)
    address_1_3 = models.CharField(max_length=50, blank=True)
    address_1b_3 = models.CharField(max_length=50, blank=True)
    address_2_3 = models.CharField(max_length=50, blank=True)
    postcode_3 = models.CharField(max_length=15, blank=True)
    address_3_3 = models.CharField(max_length=50, blank=True)
    fk_state_3 = models.CharField(max_length=8, blank=True)
    e_mail_3 = models.CharField(max_length=50, blank=True)
    pk_rms_id_3 = models.IntegerField(null=True, blank=True)
    fk_marital_status_3 = models.CharField(max_length=25, blank=True)
    sex_3 = models.CharField(max_length=1, blank=True)
    title_3 = models.CharField(max_length=5, blank=True)
    ix_last_name_3 = models.CharField(max_length=25, blank=True)
    ix_first_name_3 = models.CharField(max_length=25, blank=True)
    ix_middle_name_3 = models.CharField(max_length=25, blank=True)
    phone_work_3 = models.CharField(max_length=25, blank=True)
    phone_cell_3 = models.CharField(max_length=25, blank=True)
    fax_3 = models.CharField(max_length=25, blank=True)
    person_type_3 = models.CharField(max_length=4, blank=True)
    ix_national_id_3 = models.CharField(max_length=15, blank=True)
    birth_date_3 = models.DateField(null=True, blank=True)
    location_phone_4 = models.CharField(max_length=25, blank=True)
    address_1_4 = models.CharField(max_length=50, blank=True)
    address_1b_4 = models.CharField(max_length=50, blank=True)
    address_2_4 = models.CharField(max_length=50, blank=True)
    postcode_4 = models.CharField(max_length=15, blank=True)
    address_3_4 = models.CharField(max_length=50, blank=True)
    fk_state_4 = models.CharField(max_length=8, blank=True)
    e_mail_4 = models.CharField(max_length=50, blank=True)
    pk_rms_id_4 = models.IntegerField(null=True, blank=True)
    fk_marital_status_4 = models.CharField(max_length=25, blank=True)
    sex_4 = models.CharField(max_length=1, blank=True)
    title_4 = models.CharField(max_length=5, blank=True)
    ix_last_name_4 = models.CharField(max_length=25, blank=True)
    ix_first_name_4 = models.CharField(max_length=25, blank=True)
    ix_middle_name_4 = models.CharField(max_length=25, blank=True)
    phone_work_4 = models.CharField(max_length=25, blank=True)
    phone_cell_4 = models.CharField(max_length=25, blank=True)
    fax_4 = models.CharField(max_length=25, blank=True)
    person_type_4 = models.CharField(max_length=4, blank=True)
    ix_national_id_4 = models.CharField(max_length=15, blank=True)
    birth_date_4 = models.DateField(null=True, blank=True)
    location_phone_5 = models.CharField(max_length=25, blank=True)
    address_1_5 = models.CharField(max_length=50, blank=True)
    address_1b_5 = models.CharField(max_length=50, blank=True)
    address_2_5 = models.CharField(max_length=50, blank=True)
    postcode_5 = models.CharField(max_length=15, blank=True)
    address_3_5 = models.CharField(max_length=50, blank=True)
    fk_state_5 = models.CharField(max_length=8, blank=True)
    e_mail_5 = models.CharField(max_length=50, blank=True)
    pk_rms_id_5 = models.IntegerField(null=True, blank=True)
    fk_marital_status_5 = models.CharField(max_length=25, blank=True)
    sex_5 = models.CharField(max_length=1, blank=True)
    title_5 = models.CharField(max_length=5, blank=True)
    ix_last_name_5 = models.CharField(max_length=25, blank=True)
    ix_first_name_5 = models.CharField(max_length=25, blank=True)
    ix_middle_name_5 = models.CharField(max_length=25, blank=True)
    phone_work_5 = models.CharField(max_length=25, blank=True)
    phone_cell_5 = models.CharField(max_length=25, blank=True)
    fax_5 = models.CharField(max_length=25, blank=True)
    person_type_5 = models.CharField(max_length=4, blank=True)
    ix_national_id_5 = models.CharField(max_length=15, blank=True)
    birth_date_5 = models.DateField(null=True, blank=True)
    location_phone_6 = models.CharField(max_length=25, blank=True)
    address_1_6 = models.CharField(max_length=50, blank=True)
    address_1b_6 = models.CharField(max_length=50, blank=True)
    address_2_6 = models.CharField(max_length=50, blank=True)
    postcode_6 = models.CharField(max_length=15, blank=True)
    address_3_6 = models.CharField(max_length=50, blank=True)
    fk_state_6 = models.CharField(max_length=8, blank=True)
    e_mail_6 = models.CharField(max_length=50, blank=True)
    pk_rms_id_6 = models.IntegerField(null=True, blank=True)
    fk_marital_status_6 = models.CharField(max_length=25, blank=True)
    sex_6 = models.CharField(max_length=1, blank=True)
    title_6 = models.CharField(max_length=5, blank=True)
    ix_last_name_6 = models.CharField(max_length=25, blank=True)
    ix_first_name_6 = models.CharField(max_length=25, blank=True)
    ix_middle_name_6 = models.CharField(max_length=25, blank=True)
    phone_work_6 = models.CharField(max_length=25, blank=True)
    phone_cell_6 = models.CharField(max_length=25, blank=True)
    fax_6 = models.CharField(max_length=25, blank=True)
    person_type_6 = models.CharField(max_length=4, blank=True)
    ix_national_id_6 = models.CharField(max_length=15, blank=True)
    birth_date_6 = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_roommates_1to6'

class AudPpleTApplication(models.Model):
    ck_application_no = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=4)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField()
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_pple_t_application'

class TempTRoommatesList(models.Model):
    recipient_rms_id = models.IntegerField()
    recipient_room_no = models.CharField(max_length=10, blank=True)
    recipient_bed_space = models.CharField(max_length=10, blank=True)
    recipient_term_id = models.CharField(max_length=8, blank=True)
    recipient_application_type = models.CharField(max_length=50, blank=True)
    roommate_rms_id = models.IntegerField(null=True, blank=True)
    roommate_bed_space = models.CharField(max_length=10, blank=True)
    roommates_from = models.DateField(null=True, blank=True)
    roommates_until = models.DateField(null=True, blank=True)
    roommates_order = models.CharField(max_length=32, unique=True)
    class Meta:
        db_table = u'temp_t_roommates_list'

class PlanTHBookings(models.Model):
    row_no = models.IntegerField(null=True, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_plan_type = models.CharField(max_length=10, blank=True)
    plan_type_description = models.CharField(max_length=30, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type = models.CharField(max_length=8, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'plan_t_h_bookings'

class Roomlist(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    allocation_gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    eligibility_criteria = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'roomlist'

class RoomTHBookings(models.Model):
    row_no = models.IntegerField(null=True, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.CharField(max_length=30, blank=True)
    fk_billing_type = models.CharField(max_length=8, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    roommates_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'room_t_h_bookings'

class TempHAssociate(models.Model):
    fktable_name = models.CharField(max_length=30, blank=True)
    fkcolumn_name = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_h_associate'

class TempTConfequipmentbooking(models.Model):
    bookingdate = models.DateField(null=True, blank=True)
    bookingend_date = models.DateField(null=True, blank=True)
    dayname = models.CharField(max_length=10, blank=True)
    starttime = models.CharField(max_length=10, blank=True)
    endtime = models.CharField(max_length=10, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_confequipmentbooking'

class TempTConffacilitybooking(models.Model):
    prev_end = models.DateField(null=True, blank=True)
    setup_time = models.DateField(null=True, blank=True)
    start_date = models.DateField(null=True, blank=True)
    end_date = models.DateField(null=True, blank=True)
    pull_down_time = models.DateField(null=True, blank=True)
    next_start = models.DateField(null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_conffacilitybooking'

class TempTHAccom(models.Model):
    pk_room_type = models.CharField(max_length=30, blank=True)
    pk_bed_space = models.CharField(max_length=20, blank=True)
    rates_split_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_accom'

class TempTHAccomdtls(models.Model):
    room_type = models.CharField(max_length=30, blank=True)
    bed_space_count = models.IntegerField(null=True, blank=True)
    default_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    quoted_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    move_in_date = models.DateField(null=True, blank=True)
    move_out_date = models.DateField(null=True, blank=True)
    nightly_cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    total_cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_accomdtls'

class TempTHAcctRmsids(models.Model):
    rmsid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_acct_rmsids'

class TempTHAcedemics(models.Model):
    subject_description = models.CharField(max_length=50, blank=True)
    ck_academic_results_year = models.IntegerField(null=True, blank=True)
    ck_subject_code = models.CharField(max_length=10, blank=True)
    ck_semester = models.CharField(max_length=50, blank=True)
    result = models.CharField(max_length=12, blank=True)
    ck_rms_id = models.CharField(max_length=12, blank=True)
    gpa_semester = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_acedemics'

class TempTHAdvpplesearch(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    title = models.CharField(max_length=5, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    occupants_first_name = models.CharField(max_length=25, blank=True)
    occupants_last_name = models.CharField(max_length=25, blank=True)
    fk_relationship = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_advpplesearch'

class TempTHAdvpplesearch2(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    pk_applnum = models.CharField(max_length=255, blank=True)
    fk_rmsid = models.CharField(max_length=255, blank=True)
    applicationtype = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_advpplesearch2'

class TempTHApplicant(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    person_name = models.CharField(max_length=75, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    firstpref = models.CharField(max_length=250, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    roommates_requested = models.IntegerField(null=True, blank=True)
    allocated = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_applicant'

class TempTHApplicant1(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_applicant1'

class TempTHApplicants(models.Model):
    pk_rms_id = models.IntegerField()
    ix_student_number = models.CharField(max_length=20, blank=True)
    person_name = models.CharField(max_length=100, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    pk_application_no = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    lottery_number = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    firstpref = models.CharField(max_length=500, blank=True)
    roommates_requested = models.IntegerField(null=True, blank=True)
    ck_preference_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_applicants'

class TempTHAssignGetproperty(models.Model):
    pk_rms_pid = models.IntegerField()
    property_id = models.CharField(max_length=50, blank=True)
    property_alias_id = models.CharField(max_length=50, blank=True)
    fk_property_type = models.CharField(max_length=10)
    totalnoofbeds = models.IntegerField(null=True, blank=True)
    group_preference_attribute1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute10 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_assign_getproperty'

class TempTHAvailbeds(models.Model):
    pk_bed_space = models.CharField(max_length=20)
    fk_room_no = models.CharField(max_length=20)
    class Meta:
        db_table = u'temp_t_h_availbeds'

class TempTHAvailBeds(models.Model):
    pk_bed_space = models.CharField(max_length=20)
    fk_room_no = models.CharField(max_length=20)
    fk_room_type = models.CharField(max_length=30)
    gender = models.CharField(max_length=2)
    class Meta:
        db_table = u'temp_t_h_avail_beds'

class TempTHAvailPlans(models.Model):
    pk_plan_option = models.CharField(max_length=20)
    plan_description = models.CharField(max_length=50)
    rmsid = models.IntegerField(null=True, blank=True)
    plan_type = models.CharField(max_length=20)
    plan_type_type = models.CharField(max_length=20)
    ix_first_name = models.CharField(max_length=50)
    ix_last_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'temp_t_h_avail_plans'

class TempTHBedspace1(models.Model):
    pk_bed_space = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_bedspace1'

class TempTHBedspace2(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_bedspace2'

class TempTHBedspace3(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_bedspace3'

class TempTHBedspaces(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_bedspaces'

class TempTHBedsToBook(models.Model):
    pk_term_id = models.CharField(max_length=20)
    start_date = models.DateField(null=True, blank=True)
    end_date = models.DateField(null=True, blank=True)
    pk_bed_space = models.CharField(max_length=20)
    fk_room_type = models.CharField(max_length=30)
    fk_rate_code = models.CharField(max_length=20)
    rate_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_type = models.CharField(max_length=50)
    rms_id = models.IntegerField(null=True, blank=True)
    app_period = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_beds_to_book'

class TempTHBedsToBook1(models.Model):
    pk_term_id = models.CharField(max_length=20)
    start_date = models.DateField(null=True, blank=True)
    end_date = models.DateField(null=True, blank=True)
    pk_bed_space = models.CharField(max_length=20)
    fk_room_type = models.CharField(max_length=30)
    fk_rate_code = models.CharField(max_length=20)
    rate_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_type = models.CharField(max_length=50)
    rms_id = models.IntegerField(null=True, blank=True)
    app_period = models.CharField(max_length=50, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_beds_to_book1'

class TempTHColumns(models.Model):
    column_name = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_columns'

class TempTHConfaccmBkdBeds(models.Model):
    ck_room_no = models.CharField(max_length=10, blank=True)
    pk_bed_space = models.CharField(max_length=10)
    gender = models.CharField(max_length=1, blank=True)
    room_type = models.CharField(max_length=20, blank=True)
    fk_section = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_confaccm_bkd_beds'

class TempTHConfaccmBkdRooms(models.Model):
    pk_room_no = models.CharField(max_length=10)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    room_type = models.CharField(max_length=20, blank=True)
    fk_section = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    beds_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_confaccm_bkd_rooms'

class TempTHConfaccmRoomBkg(models.Model):
    pk_room_no = models.CharField(max_length=10, blank=True)
    beds_count = models.IntegerField()
    booked_count = models.IntegerField(null=True, blank=True)
    available_count = models.IntegerField(null=True, blank=True)
    booked_by = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_confaccm_room_bkg'

class TempTHConferees(models.Model):
    rmsid = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    booking_type = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    conferee_name = models.CharField(max_length=100, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    bed_space = models.CharField(max_length=10, blank=True)
    room_no = models.CharField(max_length=10, blank=True)
    move_in_date = models.DateField(null=True, blank=True)
    move_out_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conferees'

class TempTHConflictingEqptbkgs(models.Model):
    ck_serial_no = models.CharField(max_length=20, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    fk_conference_id = models.IntegerField(null=True, blank=True)
    fk_event_id = models.IntegerField(null=True, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    sk_equipment_order_id = models.CharField(max_length=10, blank=True)
    equipment_person_move_out_date = models.DateField(null=True, blank=True)
    equipment_person_booked_by = models.CharField(max_length=12, blank=True)
    equipment_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    equipment_person_billed = models.IntegerField(null=True, blank=True)
    equipment_person_billing_type = models.CharField(max_length=50, blank=True)
    equipment_notes = models.CharField(max_length=250, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    equip_person_master_booking = models.IntegerField(null=True, blank=True)
    equipment_person_billed_up_to = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conflicting_eqptbkgs'

class TempTHConflTurnAroundTab(models.Model):
    bed_space = models.CharField(max_length=10, blank=True)
    rms_id = models.IntegerField(null=True, blank=True)
    move_in_date = models.DateField(null=True, blank=True)
    rate_code = models.CharField(max_length=10, blank=True)
    billing_type = models.CharField(max_length=50, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=12, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=20, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    con_bed_space = models.CharField(max_length=10, blank=True)
    con_rms_id = models.IntegerField(null=True, blank=True)
    con_move_in_date = models.DateField(null=True, blank=True)
    con_rate_code = models.CharField(max_length=10, blank=True)
    con_billing_type = models.CharField(max_length=50, blank=True)
    con_room_person_booking_type = models.CharField(max_length=5, blank=True)
    con_room_person_move_out_date = models.DateField(null=True, blank=True)
    con_room_person_booked_by = models.CharField(max_length=12, blank=True)
    con_check_in = models.DateField(null=True, blank=True)
    con_check_out = models.DateField(null=True, blank=True)
    con_room_person_rate = models.DecimalField(null=True, max_digits=20, decimal_places=5, blank=True)
    con_room_person_billed_up_to = models.DateField(null=True, blank=True)
    con_room_person_notes = models.CharField(max_length=250, blank=True)
    con_turn_around_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_confl_turn_around_tab'

class TempTHConfDates(models.Model):
    ck_move_in_date = models.DateField(null=True, blank=True)
    ck_move_out_date = models.DateField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conf_dates'

class TempTHConfEquipment(models.Model):
    pk_serial_no = models.CharField(max_length=20, blank=True)
    total_occupied = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conf_equipment'

class TempTHConfFacilities(models.Model):
    pk_facility_id = models.IntegerField(null=True, blank=True)
    total_occupied = models.IntegerField(null=True, blank=True)
    config_no = models.IntegerField(null=True, blank=True)
    setup_time = models.IntegerField(null=True, blank=True)
    total_reqstd = models.IntegerField(null=True, blank=True)
    pull_down_time = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conf_facilities'

class TempTHConfFaclDates(models.Model):
    ck_move_in_date = models.DateField(null=True, blank=True)
    ck_move_out_date = models.DateField(null=True, blank=True)
    setup_time = models.DateField(null=True, blank=True)
    pull_down_time = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_conf_facl_dates'

class TempTHCurrentAssigns(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    individual_billing = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_building_id = models.CharField(max_length=15, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    change = models.IntegerField(null=True, blank=True)
    status = models.CharField(max_length=10, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_current_assigns'

class TempTHCurrentPlan(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_plan_type = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_plan_order_id = models.IntegerField(null=True, blank=True)
    sk_plan_order_id = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    status = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_current_plan'

class TempTHCurrentUserdef(models.Model):
    pk_process_id = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_current_userdef'

class TempTHEquipmemtSchedule(models.Model):
    ck_start_date = models.DateField()
    ck_end_date = models.DateField()
    class Meta:
        db_table = u'temp_t_h_equipmemt_schedule'

class TempTHExportapps(models.Model):
    pk_rms_id = models.IntegerField()
    class Meta:
        db_table = u'temp_t_h_exportapps'

class TempTHExportassignments(models.Model):
    pk_rms_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    rooms_address_2 = models.CharField(max_length=50, blank=True)
    rooms_address_3 = models.CharField(max_length=50, blank=True)
    rooms_postcode = models.CharField(max_length=15, blank=True)
    fk_rooms_state = models.CharField(max_length=15, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    pk_building_id = models.CharField(max_length=8, blank=True)
    buildings_name = models.CharField(max_length=30, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    pk_community = models.CharField(max_length=25, blank=True)
    pk_section_id = models.CharField(max_length=8, blank=True)
    spouse_rms_id = models.IntegerField(null=True, blank=True)
    spouse_national_id = models.CharField(max_length=15, blank=True)
    spouse_student_number = models.CharField(max_length=20, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    rooms_address_2b = models.CharField(max_length=50, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    text1 = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_exportassignments'

class TempTHExportfinance(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    open_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    ck_txid = models.CharField(max_length=20, blank=True)
    fk_txtype = models.CharField(max_length=10, blank=True)
    fk_taxtype1 = models.CharField(max_length=10, blank=True)
    fk_taxtype2 = models.CharField(max_length=10, blank=True)
    fk_taxtype3 = models.CharField(max_length=10, blank=True)
    fk_taxtype4 = models.CharField(max_length=10, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    invoice_description = models.CharField(max_length=250, blank=True)
    entered_by = models.CharField(max_length=50, blank=True)
    ck_invoice_no = models.CharField(max_length=10, blank=True)
    fiscal_year = models.CharField(max_length=4, blank=True)
    fk_dr_account = models.CharField(max_length=12, blank=True)
    fk_cr_account = models.CharField(max_length=12, blank=True)
    basic_amount = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax1_amount = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax2_amount = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax3_amount = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax4_amount = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    ck_posting_id = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    posted = models.DateField(null=True, blank=True)
    transaction_type_default = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    charges = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    fk_tax_txtype1 = models.CharField(max_length=10, blank=True)
    fk_tax_txtype2 = models.CharField(max_length=10, blank=True)
    fk_tax_txtype3 = models.CharField(max_length=10, blank=True)
    fk_tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    uploadable = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    transaction_type_description = models.CharField(max_length=50, blank=True)
    secondary_code = models.CharField(max_length=50, blank=True)
    debit_account = models.CharField(max_length=12, blank=True)
    credit_account = models.CharField(max_length=12, blank=True)
    min_tx = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    max_tx = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    account_name = models.CharField(max_length=50, blank=True)
    account_type = models.CharField(max_length=20, blank=True)
    alias_code = models.CharField(max_length=30, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    fk_dr_cr = models.CharField(max_length=2, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    ck_payment_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    order_type = models.CharField(max_length=25, blank=True)
    refersto = models.CharField(max_length=50, blank=True)
    date_printed = models.DateField(null=True, blank=True)
    ix_receivable = models.IntegerField(null=True, blank=True)
    pk_order_id = models.IntegerField(null=True, blank=True)
    term_code = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_exportfinance'

class TempTHExportplans(models.Model):
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ck_plan_type = models.CharField(max_length=10)
    pk_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10)
    plan_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    plan_person_booking_type = models.CharField(max_length=5)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    plan_type_description = models.CharField(max_length=30, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_exportplans'

class TempTHExpExportassignments(models.Model):
    pk_rms_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    rooms_address_2 = models.CharField(max_length=50, blank=True)
    rooms_address_3 = models.CharField(max_length=50, blank=True)
    rooms_postcode = models.CharField(max_length=15, blank=True)
    fk_rooms_state = models.CharField(max_length=15, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    pk_building_id = models.CharField(max_length=8, blank=True)
    buildings_name = models.CharField(max_length=30, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    pk_community = models.CharField(max_length=25, blank=True)
    pk_section_id = models.CharField(max_length=8, blank=True)
    spouse_rms_id = models.IntegerField(null=True, blank=True)
    spouse_national_id = models.CharField(max_length=15, blank=True)
    spouse_student_number = models.CharField(max_length=20, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    buildings_address_1b = models.CharField(max_length=50, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_exp_exportassignments'

class TempTHExpExportplans(models.Model):
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ck_plan_type = models.CharField(max_length=10, blank=True)
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    plan_type_description = models.CharField(max_length=30, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_exp_exportplans'

class TempTHExpExportprofile(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_new_national_id = models.CharField(max_length=15, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    pk_contact_id = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    reference_text = models.CharField(max_length=100, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    ck_show_name = models.CharField(max_length=50, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'temp_t_h_exp_exportprofile'

class TempTHFacilitySchedule(models.Model):
    equipment_no = models.CharField(max_length=20, blank=True)
    facility_id = models.IntegerField(null=True, blank=True)
    ck_start_date = models.DateField(null=True, blank=True)
    ck_end_date = models.DateField(null=True, blank=True)
    occupied_mnts = models.IntegerField(null=True, blank=True)
    conference_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_facility_schedule'

class TempTHGetavailableBeds(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_getavailable_beds'

class TempTHGetavailBeds(models.Model):
    pk_term_id = models.CharField(max_length=50, blank=True)
    pk_bed_space = models.CharField(max_length=30)
    sex = models.CharField(max_length=2, blank=True)
    phone_extension = models.CharField(max_length=20, blank=True)
    fk_room_no = models.CharField(max_length=20)
    ck_move_in_date = models.DateField()
    room_person_move_out_date = models.DateField()
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=10)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_h_getavail_beds'

class TempTHGetavailBeds2(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_getavail_beds2'

class TempTHGetavailGroups(models.Model):
    pk_rms_gid = models.IntegerField(null=True, blank=True)
    group_id = models.CharField(max_length=20, blank=True)
    name = models.CharField(max_length=75, blank=True)
    fk_group_type = models.CharField(max_length=50, blank=True)
    group_app_status = models.CharField(max_length=10, blank=True)
    total = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    group_preference_attribute_1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_10 = models.CharField(max_length=50, blank=True)
    percentage = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_getavail_groups'

class TempTHGetavailProperty(models.Model):
    pk_rms_pid = models.IntegerField(null=True, blank=True)
    property_id = models.CharField(max_length=50, blank=True)
    property_alias_id = models.CharField(max_length=50, blank=True)
    fk_property_type = models.CharField(max_length=10, blank=True)
    totalnoofbeds = models.IntegerField(null=True, blank=True)
    group_preference_attribute1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute10 = models.CharField(max_length=50, blank=True)
    percentage = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_getavail_property'

class TempTHGetdetails(models.Model):
    effective_time = models.DateField(null=True, blank=True)
    expire_time = models.DateField(null=True, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    fk_function_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_getdetails'

class TempTHGetRoomInfo(models.Model):
    fk_term_id = models.CharField(max_length=8, blank=True)
    move_in_date = models.CharField(max_length=15, blank=True)
    room_person_move_out_date = models.CharField(max_length=15, blank=True)
    person_name = models.CharField(max_length=100, blank=True)
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    rate_code = models.CharField(max_length=10, blank=True)
    amount = models.CharField(max_length=20, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    timeremain = models.CharField(max_length=50, blank=True)
    nonsharable = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_get_room_info'

class TempTHGroups(models.Model):
    pk_rms_gid = models.IntegerField(null=True, blank=True)
    group_id = models.CharField(max_length=20, blank=True)
    group_alias = models.CharField(max_length=50, blank=True)
    group_name = models.CharField(max_length=50, blank=True)
    fk_group_type = models.CharField(max_length=50, blank=True)
    group_closed = models.CharField(max_length=10, blank=True)
    group_app_status = models.CharField(max_length=10, blank=True)
    group_app_status_date = models.DateField(null=True, blank=True)
    group_total = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    group_preference_attribute_1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_10 = models.CharField(max_length=50, blank=True)
    group_letter_sent1 = models.DateField(null=True, blank=True)
    group_letter_sent2 = models.DateField(null=True, blank=True)
    group_letter_sent3 = models.DateField(null=True, blank=True)
    group_letter_sent4 = models.DateField(null=True, blank=True)
    group_letter_sent5 = models.DateField(null=True, blank=True)
    group_letter_sent6 = models.DateField(null=True, blank=True)
    group_letter_sent7 = models.DateField(null=True, blank=True)
    group_letter_sent8 = models.DateField(null=True, blank=True)
    group_letter_sent9 = models.DateField(null=True, blank=True)
    group_letter_sent10 = models.DateField(null=True, blank=True)
    group_letter_received1 = models.DateField(null=True, blank=True)
    group_letter_received2 = models.DateField(null=True, blank=True)
    group_letter_received3 = models.DateField(null=True, blank=True)
    group_letter_received4 = models.DateField(null=True, blank=True)
    group_letter_received5 = models.DateField(null=True, blank=True)
    group_letter_received6 = models.DateField(null=True, blank=True)
    group_letter_received7 = models.DateField(null=True, blank=True)
    group_letter_received8 = models.DateField(null=True, blank=True)
    group_letter_received9 = models.DateField(null=True, blank=True)
    group_letter_received10 = models.DateField(null=True, blank=True)
    group_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'temp_t_h_groups'

class TempTHGrsGetRoomInfo(models.Model):
    fk_term_id = models.CharField(max_length=8, blank=True)
    move_in_date = models.CharField(max_length=15, blank=True)
    room_person_move_out_date = models.CharField(max_length=15, blank=True)
    person_name = models.CharField(max_length=100, blank=True)
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    rate_code = models.CharField(max_length=10, blank=True)
    amount = models.CharField(max_length=20, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    timeremain = models.CharField(max_length=50, blank=True)
    nonsharable = models.CharField(max_length=10, blank=True)
    existing_rmmt_gender = models.CharField(max_length=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_grs_get_room_info'

class TempTHInc(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    rms_id = models.IntegerField(null=True, blank=True)
    personname = models.CharField(max_length=255, blank=True)
    action_date = models.DateField(null=True, blank=True)
    action_note = models.CharField(max_length=255, blank=True)
    flag_code = models.CharField(max_length=20, blank=True)
    total = models.IntegerField(null=True, blank=True)
    action_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_inc'

class TempTHInctemp(models.Model):
    inclocation = models.CharField(max_length=50, blank=True)
    incnotes = models.TextField(blank=True)
    incdate = models.DateField(null=True, blank=True)
    incid = models.IntegerField(null=True, blank=True)
    incdesc = models.CharField(max_length=50, blank=True)
    incdelete = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_inctemp'

class TempTHIntrPpleTPerson(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'temp_t_h_intr_pple_t_person'

class TempTHJudTemptable2(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    point_value = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_jud_temptable2'

class TempTHLandlordRentCalc(models.Model):
    pk_rownum = models.IntegerField()
    pk_payment_id = models.IntegerField()
    ck_rms_pid = models.IntegerField()
    ck_application_type = models.CharField(max_length=50)
    ck_term_id = models.CharField(max_length=8)
    schedule_date = models.DateField(null=True, blank=True)
    payment_date = models.DateField(null=True, blank=True)
    fk_posting_id = models.IntegerField(null=True, blank=True)
    fk_ll_rms_id = models.IntegerField()
    fiscal_year = models.CharField(max_length=50, blank=True)
    amount1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_posting_id1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_posting_id2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_posting_id3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_posting_id4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_landlord_rent_calc'

class TempTHLastAppl(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    application_person_type = models.CharField(max_length=4, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    reference_sent = models.IntegerField(null=True, blank=True)
    reference_2_sent = models.IntegerField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    application_registration_paid = models.IntegerField(null=True, blank=True)
    financial_guarantee = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    appl_priority_allocation = models.IntegerField(null=True, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_last_appl'

class TempTHLastPerson(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_address_type = models.CharField(max_length=15, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField(null=True, blank=True)
    e_mailing_status = models.IntegerField(null=True, blank=True)
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_last_person'

class TempTHLastUserdef(models.Model):
    pk_process_id = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_last_userdef'

class TempTHLotnum(models.Model):
    idnum = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    myval = models.CharField(max_length=255, blank=True)
    class Meta:
        db_table = u'temp_t_h_lotnum'

class TempTHLottdetails(models.Model):
    start_time = models.DateField(null=True, blank=True)
    min_number = models.IntegerField(null=True, blank=True)
    max_number = models.IntegerField(null=True, blank=True)
    ck_category_id = models.IntegerField(null=True, blank=True)
    ck_function_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_lottdetails'

class TempTHMatchingCriteria(models.Model):
    pk_priority_number = models.IntegerField(null=True, blank=True)
    matching_criteria_description = models.CharField(max_length=50, blank=True)
    display_order = models.IntegerField(null=True, blank=True)
    preference = models.CharField(max_length=10, blank=True)
    critical = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_matching_criteria'

class TempTHMenumanage(models.Model):
    pk_count = models.BigIntegerField(null=True, blank=True)
    columnvalue = models.CharField(max_length=600, blank=True)
    fk_event_id = models.IntegerField(null=True, blank=True)
    fk_menu_id = models.IntegerField(null=True, blank=True)
    menu_person_billing_type = models.CharField(max_length=50, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    menu_person_servings = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_menumanage'

class TempTHMoveConferee1(models.Model):
    conferee_names = models.CharField(max_length=2000, blank=True)
    room_no = models.CharField(max_length=10, blank=True)
    conferees_count = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    beds_list = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'temp_t_h_move_conferee1'

class TempTHMoveRoomFrom(models.Model):
    roomno = models.CharField(max_length=10)
    nomember = models.IntegerField()
    leftmember = models.IntegerField()
    class Meta:
        db_table = u'temp_t_h_move_room_from'

class TempTHMoveRoomTo(models.Model):
    roomno = models.CharField(max_length=10)
    noroom = models.IntegerField()
    currentoccupied = models.IntegerField()
    class Meta:
        db_table = u'temp_t_h_move_room_to'

class TempTHOccupiedPeople(models.Model):
    ck_rms_id = models.IntegerField(null=True, blank=True)
    other_attributes = models.CharField(max_length=255, blank=True)
    critical = models.CharField(max_length=255, blank=True)
    class Meta:
        db_table = u'temp_t_h_occupied_people'

class TempTHOccupiedRooms(models.Model):
    ck_bed_space = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'temp_t_h_occupied_rooms'

class TempTHPdaRostersearch(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_pda_rostersearch'

class TempTHPendingRequests(models.Model):
    fk_pagename = models.CharField(max_length=50)
    fk_stage = models.IntegerField()
    pk_flow_id = models.IntegerField()
    rejected = models.IntegerField(null=True, blank=True)
    date_created = models.DateField(null=True, blank=True)
    username = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_pending_requests'

class TempTHPeople(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    colname = models.CharField(max_length=255, blank=True)
    myval = models.CharField(max_length=255, blank=True)
    class Meta:
        db_table = u'temp_t_h_people'

class TempTHPersonIncidents(models.Model):
    ck_im_ex_field = models.CharField(max_length=20, blank=True)
    fk_inc_type_code = models.CharField(max_length=8, blank=True)
    fk_flag_code = models.CharField(max_length=5, blank=True)
    pk_incident_id = models.IntegerField(null=True, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_person_incidents'

class TempTHPlans(models.Model):
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_plan_type = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    move_out_date = models.DateField(null=True, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    billing_type = models.CharField(max_length=50, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    plan_alias = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_plans'

class TempTHPlansFilter(models.Model):
    rms_id = models.IntegerField(null=True, blank=True)
    bed_space = models.CharField(max_length=50)
    room_type = models.CharField(max_length=50)
    building_id = models.CharField(max_length=50)
    community = models.CharField(max_length=50)
    class Meta:
        db_table = u'temp_t_h_plans_filter'

class TempTHPlanBookings(models.Model):
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_plan_type = models.CharField(max_length=10, blank=True)
    plan_type_description = models.CharField(max_length=30, blank=True)
    ck_move_in_date = models.CharField(max_length=10, blank=True)
    plan_person_move_out_date = models.CharField(max_length=10, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type = models.CharField(max_length=8, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_plan_bookings'

class TempTHPlanPerson(models.Model):
    ck_plan_type = models.CharField(max_length=10, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=250, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    sk_plan_order_id = models.CharField(max_length=20, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'temp_t_h_plan_person'

class TempTHPropsummary(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    pk_rms_pid = models.IntegerField(null=True, blank=True)
    property_id = models.CharField(max_length=50, blank=True)
    fk_property_type = models.CharField(max_length=255, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    pk_rms_gid = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    bedcount = models.IntegerField(null=True, blank=True)
    status = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_propsummary'

class TempTHQuickpplesearch(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'temp_t_h_quickpplesearch'

class TempTHRates(models.Model):
    ck_rate_code = models.CharField(max_length=10, blank=True)
    rates_description = models.CharField(max_length=50, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    ck_rate_config_no = models.IntegerField(null=True, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    rates_type = models.CharField(max_length=1, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_rates'

class TempTHRecipients(models.Model):
    rmsid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_recipients'

class TempTHReqRoommates(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    sel_person_info1 = models.CharField(max_length=10, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_req_roommates'

class TempTHRmsid(models.Model):
    pk_application_no = models.IntegerField(null=True, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_rmsid'

class TempTHRoom(models.Model):
    fk_room_no = models.CharField(max_length=20, blank=True)
    pk_bed_space = models.CharField(max_length=10, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    floors_name = models.CharField(max_length=50, blank=True)
    locking_system_roomid = models.CharField(max_length=30, blank=True)
    status = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_room'

class TempTHRoomalloc(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    colname = models.CharField(max_length=255, blank=True)
    myval = models.CharField(max_length=255, blank=True)
    ttype = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomalloc'

class TempTHRoomlist(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    schedule_name = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomlist'

class TempTHRoomlist1(models.Model):
    tmp_bed_space = models.CharField(max_length=10, blank=True)
    tmp_roomtype = models.CharField(max_length=15, blank=True)
    tmp_sectionid = models.CharField(max_length=8, blank=True)
    tmp_gender = models.CharField(max_length=1, blank=True)
    tmp_phoneequipno = models.CharField(max_length=4, blank=True)
    tmp_phoneext = models.CharField(max_length=16, blank=True)
    tmp_keyid = models.CharField(max_length=20, blank=True)
    tmp_operatingmode = models.CharField(max_length=1, blank=True)
    tmp_roomno = models.CharField(max_length=10, blank=True)
    tmp_floorid = models.CharField(max_length=8, blank=True)
    tmp_buildingid = models.CharField(max_length=8, blank=True)
    tmp_community = models.CharField(max_length=25, blank=True)
    tmp_roomscapacity = models.IntegerField(null=True, blank=True)
    tmp_use1 = models.CharField(max_length=20, blank=True)
    tmp_use2 = models.CharField(max_length=20, blank=True)
    tmp_address1 = models.CharField(max_length=50, blank=True)
    tmp_alternateno = models.CharField(max_length=10, blank=True)
    tmp_roomconfigno = models.IntegerField(null=True, blank=True)
    tmp_roomstartdate = models.DateField(null=True, blank=True)
    tmp_roomenddate = models.DateField(null=True, blank=True)
    tmp_rateconfigno = models.IntegerField(null=True, blank=True)
    tmp_ratecode = models.CharField(max_length=10, blank=True)
    tmp_ratestartdate = models.DateField(null=True, blank=True)
    tmp_rateenddate = models.DateField(null=True, blank=True)
    tmp_billingtype = models.CharField(max_length=50, blank=True)
    tmp_roomsdirty = models.CharField(max_length=1, blank=True)
    tmp_roomsserviced = models.DateField(null=True, blank=True)
    tmp_roomslinen = models.DateField(null=True, blank=True)
    temp_freedate = models.DateField(null=True, blank=True)
    tmp_desirability = models.IntegerField(null=True, blank=True)
    tmp_eligibility_criteria = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomlist1'

class TempTHRoommates(models.Model):
    roommate = models.CharField(max_length=150, blank=True)
    class Meta:
        db_table = u'temp_t_h_roommates'

class TempTHRoommatesids(models.Model):
    row_id = models.IntegerField(null=True, blank=True)
    rmsid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_roommatesids'

class TempTHRooms(models.Model):
    pk_bed_space = models.CharField(max_length=10)
    fk_room_no = models.CharField(max_length=10, blank=True)
    rooms_dirty = models.CharField(max_length=1, blank=True)
    rooms_serviced = models.DateField(null=True, blank=True)
    rooms_linen = models.DateField(null=True, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=50)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rooms_config_no = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_rooms'

class TempTHRooms1(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    rate_totals_billing_type = models.CharField(max_length=50, blank=True)
    rate_totals_amt = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms1'

class TempTHRoomss(models.Model):
    pk_term_id = models.CharField(max_length=30, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    status = models.CharField(max_length=30, blank=True)
    pk_bed_space = models.CharField(max_length=20, blank=True)
    fk_room_no = models.CharField(max_length=20, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    rate_code = models.CharField(max_length=30, blank=True)
    rateamount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_type_description = models.CharField(max_length=30, blank=True)
    fk_billing_type = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomss'

class TempTHRoomsworkflowrequests(models.Model):
    pk_flow_id = models.IntegerField(null=True, blank=True)
    fk_pagename = models.CharField(max_length=50, blank=True)
    date_created = models.DateField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fullname = models.CharField(max_length=60, blank=True)
    group_description = models.CharField(max_length=50, blank=True)
    flow_comments = models.CharField(max_length=250, blank=True)
    flow_current = models.IntegerField(null=True, blank=True)
    rejected = models.IntegerField(null=True, blank=True)
    opened_by = models.CharField(max_length=60, blank=True)
    fk_stage = models.CharField(max_length=60, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomsworkflowrequests'

class TempTHRoomsAvailibility(models.Model):
    pk_term_id = models.CharField(max_length=30, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    status = models.CharField(max_length=30, blank=True)
    pk_bed_space = models.CharField(max_length=20, blank=True)
    fk_room_no = models.CharField(max_length=20, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    rate_code = models.CharField(max_length=30, blank=True)
    rateamount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_type_description = models.CharField(max_length=30, blank=True)
    fk_billing_type = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_availibility'

class TempTHRoomsBooked(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_booked'

class TempTHRoomsBookedBtwDts(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_booked_btw_dts'

class TempTHRoomsForAlloc(models.Model):
    fk_room_no = models.CharField(max_length=20, blank=True)
    ck_bed_space = models.CharField(max_length=20, blank=True)
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    floors_name = models.CharField(max_length=50, blank=True)
    locking_system_roomid = models.CharField(max_length=30, blank=True)
    status = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_for_alloc'

class TempTHRoomsForAllocation(models.Model):
    fk_community = models.CharField(max_length=25, blank=True)
    room_type_alias_name = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_use_1 = models.CharField(max_length=25, blank=True)
    fk_use_2 = models.CharField(max_length=25, blank=True)
    desirability = models.IntegerField(null=True, blank=True)
    eligibility_criteria = models.CharField(max_length=250, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_for_allocation'

class TempTHRoomsForAllocation1(models.Model):
    pk_term_id = models.CharField(max_length=30, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    status = models.CharField(max_length=30, blank=True)
    ck_bed_space = models.CharField(max_length=20, blank=True)
    fk_room_no = models.CharField(max_length=20, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    rate_code = models.CharField(max_length=30, blank=True)
    rateamount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_type_description = models.CharField(max_length=30, blank=True)
    fk_billing_type = models.CharField(max_length=30, blank=True)
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_rooms_for_allocation1'

class TempTHRoomtypes(models.Model):
    fk_room_type = models.CharField(max_length=15, blank=True)
    room_type_description = models.CharField(max_length=30, blank=True)
    ck_rate_code = models.CharField(max_length=10, blank=True)
    ck_rate_config_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    amt = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomtypes'

class TempTHRoomvieworkflowreqst(models.Model):
    fk_pagename = models.CharField(max_length=50, blank=True)
    flow_current = models.IntegerField(null=True, blank=True)
    pk_flow_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fullname = models.CharField(max_length=60, blank=True)
    rejected = models.IntegerField(null=True, blank=True)
    date_created = models.DateField(null=True, blank=True)
    username = models.CharField(max_length=50, blank=True)
    flow_comments = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'temp_t_h_roomvieworkflowreqst'

class TempTHRoomBookings(models.Model):
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    ck_move_in_date = models.CharField(max_length=10, blank=True)
    room_person_move_out_date = models.CharField(max_length=10, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type = models.CharField(max_length=8, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    roommates_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_bookings'

class TempTHRoomForAllocation(models.Model):
    fk_room_no = models.CharField(max_length=10, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_for_allocation'

class TempTHRoomInventory(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_inventory'

class TempTHRoomOcctCntDet(models.Model):
    pk_building_id = models.CharField(max_length=8)
    buildings_name = models.CharField(max_length=30)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    pk_community = models.CharField(max_length=25)
    existing_rooms = models.IntegerField()
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_occt_cnt_det'

class TempTHRoomOcctCntSumm(models.Model):
    pk_building_id = models.CharField(max_length=8)
    buildings_name = models.CharField(max_length=30)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    existing_rooms = models.IntegerField()
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_occt_cnt_summ'

class TempTHRoomPerson(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    individual_billing = models.IntegerField(null=True, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    fk_rms_gid = models.IntegerField(null=True, blank=True)
    booking_hold = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_person'

class TempTHRoomType(models.Model):
    fk_room_type = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'temp_t_h_room_type'

class TempTHRoomVacancyCnt1(models.Model):
    pk_community = models.CharField(max_length=25)
    rooms_start_date = models.DateField()
    rooms_end_date = models.DateField()
    ck_bed_space = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_room_vacancy_cnt1'

class TempTHRoomVacancyCnt2(models.Model):
    existing_rooms = models.IntegerField(null=True, blank=True)
    pk_community = models.CharField(max_length=25)
    class Meta:
        db_table = u'temp_t_h_room_vacancy_cnt2'

class TempTHRBookedParentroom(models.Model):
    pk_bed_space = models.CharField(max_length=10)
    fk_room_no = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_r_booked_parentroom'

class TempTHSaveasgnpropgroup(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    ck_rate_code = models.CharField(max_length=10, blank=True)
    ck_rate_config_no = models.CharField(max_length=10, blank=True)
    fk_billing_type = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_saveasgnpropgroup'

class TempTHSaveresbypropgroup(models.Model):
    intfieldnum = models.IntegerField(null=True, blank=True)
    pk_bed_space = models.CharField(max_length=10, blank=True)
    ck_rate_code = models.CharField(max_length=10, blank=True)
    ck_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    pk_rms_id = models.CharField(max_length=10, blank=True)
    turn_around_time = models.IntegerField(null=True, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'temp_t_h_saveresbypropgroup'

class TempTHSearchPeopleFlags(models.Model):
    rms_id = models.IntegerField(null=True, blank=True)
    flag_descrption = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'temp_t_h_search_people_flags'

class TempTHSelPlans(models.Model):
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_plan_value = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_sel_plans'

class TempTHSessiondata(models.Model):
    workstationid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_sessiondata'

class TempTHSingleroomallocP3(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    class Meta:
        db_table = u'temp_t_h_singleroomalloc_p3'

class TempTHTemprooms(models.Model):
    fk_room_no = models.CharField(max_length=10, blank=True)
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_h_temprooms'

class TempTHTemproomsdtls(models.Model):
    fieldnum = models.IntegerField(null=True, blank=True)
    room_number = models.CharField(max_length=10, blank=True)
    bed_space = models.CharField(max_length=10, blank=True)
    turn_around_time = models.IntegerField(null=True, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    rate_code = models.CharField(max_length=10, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_temproomsdtls'

class TempTHTemptable1(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    pk_application_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    title = models.CharField(max_length=5, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    occupants_first_name = models.CharField(max_length=25, blank=True)
    occupants_last_name = models.CharField(max_length=25, blank=True)
    fk_relationship = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_temptable1'

class TempTHTemptable2(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    pk_application_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    title = models.CharField(max_length=5, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    occupants_first_name = models.CharField(max_length=25, blank=True)
    occupants_last_name = models.CharField(max_length=25, blank=True)
    fk_relationship = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_temptable2'

class TempTHTempTDay(models.Model):
    pk_day = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_temp_t_day'

class TempTHTerms(models.Model):
    pk_term_id = models.CharField(max_length=50)
    term_dates_name = models.CharField(max_length=50)
    term_dates_start_date = models.DateField()
    term_dates_end_date = models.DateField()
    class Meta:
        db_table = u'temp_t_h_terms'

class TempTHTermss(models.Model):
    pk_term_id = models.CharField(max_length=50, blank=True)
    term_dates_name = models.CharField(max_length=50, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_termss'

class TempTHTmp(models.Model):
    pk_term_id = models.CharField(max_length=8, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_tmp'

class TempTHVacationdetails(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    expr1 = models.CharField(max_length=1, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_h_vacationdetails'

class TempTHWlstAppnumaddOrder(models.Model):
    intposition = models.IntegerField(null=True, blank=True)
    intapplnum = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_wlst_appnumadd_order'

class TempTHWm(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    colname = models.CharField(max_length=255, blank=True)
    myval = models.CharField(max_length=255, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm'

class TempTHWm1(models.Model):
    idnum = models.IntegerField(null=True, blank=True)
    colname = models.CharField(max_length=255, blank=True)
    myval = models.CharField(max_length=255, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm1'

class TempTHWmDisplayOrder(models.Model):
    slno = models.IntegerField(null=True, blank=True)
    display = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm_display_order'

class TempTHWmDisplayOrder1(models.Model):
    priority = models.IntegerField(null=True, blank=True)
    display = models.IntegerField(null=True, blank=True)
    value = models.IntegerField(null=True, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm_display_order1'

class TempTHWmSingleroomallocP1(models.Model):
    gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rooms_config_no = models.IntegerField()
    ck_bed_space = models.CharField(max_length=10)
    fk_rate_code = models.CharField(max_length=10)
    ck_rate_config_no = models.IntegerField()
    fk_billing_type = models.CharField(max_length=50)
    rates_split_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm_singleroomalloc_p1'

class TempTHWmSingleroomallocP2(models.Model):
    pk_bed_space = models.CharField(max_length=10)
    fk_room_no = models.CharField(max_length=10, blank=True)
    rooms_dirty = models.CharField(max_length=1, blank=True)
    rooms_serviced = models.DateField(null=True, blank=True)
    rooms_linen = models.DateField(null=True, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_rooms_config_no = models.IntegerField()
    ck_bed_space = models.CharField(max_length=10)
    fk_rate_code = models.CharField(max_length=10)
    ck_rate_config_no = models.IntegerField()
    fk_billing_type = models.CharField(max_length=50)
    rates_split_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'temp_t_h_wm_singleroomalloc_p2'

class TempTHWorkorders(models.Model):
    pk_request_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    item = models.CharField(max_length=20, blank=True)
    requested_by = models.CharField(max_length=30, blank=True)
    requested = models.DateField(null=True, blank=True)
    work_started = models.DateField(null=True, blank=True)
    processed = models.DateField(null=True, blank=True)
    cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    requestcomment = models.CharField(max_length=250, blank=True)
    workcomment = models.CharField(max_length=250, blank=True)
    responsetime = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    worktime = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    reftoname = models.CharField(max_length=50, blank=True)
    itemcode = models.CharField(max_length=6, blank=True)
    referredtoid = models.CharField(max_length=6, blank=True)
    class Meta:
        db_table = u'temp_t_h_workorders'

class TempTHWorkorders1(models.Model):
    pk_request_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    item = models.CharField(max_length=20, blank=True)
    requested_by = models.CharField(max_length=30, blank=True)
    requested = models.DateField(null=True, blank=True)
    work_started = models.DateField(null=True, blank=True)
    processed = models.DateField(null=True, blank=True)
    fk_maint_code = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_h_workorders1'

class Tmpgetdetails(models.Model):
    effective_time = models.DateField(null=True, blank=True)
    expire_time = models.DateField(null=True, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    fk_function_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmpgetdetails'

class Tmplottdetails(models.Model):
    start_time = models.DateField(null=True, blank=True)
    min_number = models.IntegerField(null=True, blank=True)
    max_number = models.IntegerField(null=True, blank=True)
    ck_category_id = models.IntegerField(null=True, blank=True)
    ck_function_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmplottdetails'

class TmpTHConfaccmBkg(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    ck_config_no = models.IntegerField()
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    capacity = models.IntegerField(null=True, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    moveout_clash = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_confaccm_bkg'

class TmpTHConfaccmBkg2(models.Model):
    ck_bed_space = models.CharField(max_length=10)
    ck_config_no = models.IntegerField()
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    capacity = models.IntegerField(null=True, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    moveout_clash = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_confaccm_bkg2'

class TmpTHConfaccmRooms(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_config_no = models.IntegerField(null=True, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    capacity = models.IntegerField(null=True, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    moveout_clash = models.IntegerField(null=True, blank=True)
    beds_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_confaccm_rooms'

class TmpTHConfaccmRoomBkg(models.Model):
    pk_room_no = models.CharField(max_length=10)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_config_no = models.IntegerField(null=True, blank=True)
    beds_count = models.IntegerField()
    available_count = models.IntegerField(null=True, blank=True)
    booked_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_confaccm_room_bkg'

class TmpTHConfaccmRoomBkg2(models.Model):
    pk_room_no = models.CharField(max_length=10, blank=True)
    beds_count = models.IntegerField(null=True, blank=True)
    booked_count = models.IntegerField(null=True, blank=True)
    available_count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_confaccm_room_bkg2'

class TmpTHLettergenerateddates(models.Model):
    application_sent = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    ud_letter_1_sent = models.DateField(null=True, blank=True)
    ud_letter_2_sent = models.DateField(null=True, blank=True)
    ud_letter_3_sent = models.DateField(null=True, blank=True)
    ud_letter_4_sent = models.DateField(null=True, blank=True)
    ud_letter_5_sent = models.DateField(null=True, blank=True)
    ud_letter_6_sent = models.DateField(null=True, blank=True)
    ud_letter_7_sent = models.DateField(null=True, blank=True)
    ud_letter_8_sent = models.DateField(null=True, blank=True)
    ud_letter_9_sent = models.DateField(null=True, blank=True)
    ud_letter_10_sent = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_t_h_lettergenerateddates'

class TmpTHTerms(models.Model):
    pk_term_id = models.CharField(max_length=50)
    term_dates_name = models.CharField(max_length=50)
    term_dates_start_date = models.DateField()
    term_dates_end_date = models.DateField()
    class Meta:
        db_table = u'tmp_t_h_terms'

class TempTPaymentsitems(models.Model):
    option_code = models.IntegerField(null=True, blank=True)
    option_description = models.CharField(max_length=50, blank=True)
    fk_txtype = models.CharField(max_length=20, blank=True)
    default_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    application_period = models.CharField(max_length=50, blank=True)
    action_type = models.CharField(max_length=50, blank=True)
    payment_value = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    rmsid = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    class Meta:
        db_table = u'temp_t_paymentsitems'

class AudApplTWaitlist(models.Model):
    ck_waitlist_id = models.IntegerField()
    ck_application_no = models.IntegerField()
    position = models.IntegerField()
    notes = models.CharField(max_length=4000, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_waitlist'

class AudApplTUdYesNoVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    value = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_yes_no_vals'

class AudApplTUdTxtVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    value = models.CharField(max_length=4000)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_txt_vals'

class AudApplTUdListVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    ck_list_item_id = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_list_vals'

class AudApplTUdIntVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    value = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_int_vals'

class AudApplTUdDblVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    value = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_dbl_vals'

class AudApplTUdDateVals(models.Model):
    ck_field_id = models.IntegerField()
    ck_appl_no = models.IntegerField()
    value = models.DateField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_ud_date_vals'

class ApplTUdYesNoVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    value = models.IntegerField()
    class Meta:
        db_table = u'appl_t_ud_yes_no_vals'

class ApplTUdDateVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    value = models.DateField()
    class Meta:
        db_table = u'appl_t_ud_date_vals'

class ApplTUdTxtVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    value = models.CharField(max_length=4000)
    class Meta:
        db_table = u'appl_t_ud_txt_vals'

class ApplTUdDblVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    value = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'appl_t_ud_dbl_vals'

class ApplTUdIntVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    value = models.IntegerField()
    class Meta:
        db_table = u'appl_t_ud_int_vals'

class ApplTUdListVals(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_appl_no = models.ForeignKey(PpleTApplication, unique=True, db_column='fk_appl_no')
    fk_list_item = models.ForeignKey(ApplTUdListItems)
    class Meta:
        db_table = u'appl_t_ud_list_vals'

class ApplTUdListItems(models.Model):
    pk_list_item_id = models.IntegerField(unique=True)
    fk_field = models.ForeignKey(ApplTUdFieldInfo)
    active = models.IntegerField()
    code = models.CharField(max_length=10, blank=True)
    value = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'appl_t_ud_list_items'

class ApplTUdFieldByAppType(models.Model):
    fk_field = models.ForeignKey(ApplTUdFieldInfo, unique=True)
    fk_period = models.ForeignKey(ApplTPeriods, unique=True)
    display_order = models.IntegerField()
    class Meta:
        db_table = u'appl_t_ud_field_by_app_type'

class ApplTUdFieldInfo(models.Model):
    pk_field_id = models.IntegerField(unique=True)
    fk_group = models.ForeignKey(ApplTUdDisplayGroups)
    fk_data_type = models.ForeignKey(ApplTUdDataTypes)
    active = models.IntegerField()
    sw_required = models.IntegerField()
    sw_visible = models.IntegerField()
    description = models.CharField(max_length=4000)
    adv_selection_alias = models.CharField(max_length=50)
    class Meta:
        db_table = u'appl_t_ud_field_info'

class ApplTUdDataTypes(models.Model):
    pk_data_type_id = models.IntegerField(unique=True)
    description = models.CharField(max_length=25, unique=True, blank=True)
    class Meta:
        db_table = u'appl_t_ud_data_types'

class ApplTUdDisplayGroups(models.Model):
    pk_group_id = models.IntegerField(unique=True)
    description = models.CharField(max_length=25, blank=True)
    display_order = models.IntegerField()
    class Meta:
        db_table = u'appl_t_ud_display_groups'

class ApplTPeriods(models.Model):
    pk_period_id = models.IntegerField(unique=True)
    code = models.CharField(max_length=50, blank=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'appl_t_periods'

class SwCatWebOtherPayment(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    fk_function = models.ForeignKey(SwFunction, unique=True)
    ck_option_code = models.ForeignKey(LUTWebOtherPayments, unique=True, db_column='ck_option_code')
    ck_transaction_type = models.CharField(max_length=10, blank=True)
    ck_description = models.CharField(max_length=50, blank=True)
    editable = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cat_web_other_payment'

class LogTSwsispolling(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    log_user = models.CharField(max_length=50, blank=True)
    log_date = models.DateField()
    detail = models.CharField(max_length=250, blank=True)
    entry_type = models.CharField(max_length=15, blank=True)
    procedure_name = models.CharField(max_length=50, blank=True)
    line_number = models.IntegerField()
    rms_id = models.IntegerField()
    class Meta:
        db_table = u'log_t_swsispolling'

class TmpTSpecialrmsid(models.Model):
    rmsid = models.IntegerField()
    class Meta:
        db_table = u'tmp_t_specialrmsid'

class TmpTLUTColor(models.Model):
    pk_color_id = models.IntegerField()
    color_name = models.CharField(max_length=30)
    rgb_code = models.CharField(max_length=20)
    active = models.IntegerField()
    username = models.CharField(max_length=50)
    class Meta:
        db_table = u'tmp_t_l_u_t_color'

class TmpTCopyConfig(models.Model):
    col1 = models.CharField(max_length=500, blank=True)
    col2 = models.CharField(max_length=1000, blank=True)
    col3 = models.CharField(max_length=1000, blank=True)
    col4 = models.CharField(max_length=4000, blank=True)
    username = models.CharField(max_length=50, blank=True)
    tablename = models.CharField(max_length=50, blank=True)
    col5 = models.CharField(max_length=4000, blank=True)
    col6 = models.CharField(max_length=4000, blank=True)
    col7 = models.CharField(max_length=4000, blank=True)
    col8 = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'tmp_t_copy_config'

class TmpSwCatPersonQualifi(models.Model):
    ck_category_id = models.IntegerField()
    ck_q_rule_id = models.IntegerField()
    table_name = models.CharField(max_length=100)
    column_name = models.CharField(max_length=50)
    operator = models.CharField(max_length=10)
    value = models.CharField(max_length=50, blank=True)
    value_type = models.CharField(max_length=10)
    gain_point = models.IntegerField()
    description = models.CharField(max_length=250)
    application_period = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=50)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    rms_point = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_sw_cat_person_qualifi'

class TmpIntrTExFin(models.Model):
    pk_data_id = models.IntegerField()
    rms_id = models.IntegerField()
    open_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    txid = models.CharField(max_length=10, blank=True)
    txtype = models.CharField(max_length=10, blank=True)
    taxtype1 = models.CharField(max_length=10, blank=True)
    taxtype2 = models.CharField(max_length=10, blank=True)
    taxtype3 = models.CharField(max_length=10, blank=True)
    taxtype4 = models.CharField(max_length=10, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    invoice_description = models.CharField(max_length=250, blank=True)
    entered_by = models.CharField(max_length=50, blank=True)
    invoice_no = models.CharField(max_length=10, blank=True)
    fiscal_year = models.CharField(max_length=4, blank=True)
    dr_account = models.CharField(max_length=12, blank=True)
    cr_account = models.CharField(max_length=12, blank=True)
    d_c = models.CharField(max_length=1, blank=True)
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tamount = models.CharField(max_length=15, blank=True)
    posting_id = models.IntegerField(null=True, blank=True)
    payment_no = models.IntegerField(null=True, blank=True)
    transaction_type_default = models.IntegerField(null=True, blank=True)
    charges = models.IntegerField(null=True, blank=True)
    tax_txtype1 = models.CharField(max_length=10, blank=True)
    tax_txtype2 = models.CharField(max_length=10, blank=True)
    tax_txtype3 = models.CharField(max_length=10, blank=True)
    tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    uploadable = models.IntegerField(null=True, blank=True)
    transaction_type_description = models.CharField(max_length=50, blank=True)
    secondary_code = models.CharField(max_length=50, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    debit_account = models.CharField(max_length=12, blank=True)
    credit_account = models.CharField(max_length=12, blank=True)
    min_tx = models.BigIntegerField(null=True, blank=True)
    max_tx = models.BigIntegerField(null=True, blank=True)
    account_name = models.CharField(max_length=50, blank=True)
    account_type = models.CharField(max_length=20, blank=True)
    alias_code = models.CharField(max_length=30, blank=True)
    ix_receivable = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    state = models.CharField(max_length=8, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    religion = models.CharField(max_length=20, blank=True)
    student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    school = models.CharField(max_length=30, blank=True)
    major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.CharField(max_length=25, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    school_category = models.CharField(max_length=10, blank=True)
    location = models.CharField(max_length=10, blank=True)
    institution = models.CharField(max_length=15, blank=True)
    catering = models.CharField(max_length=5, blank=True)
    ethnicity = models.CharField(max_length=25, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    user_def_text6 = models.CharField(max_length=50, blank=True)
    user_def_text7 = models.CharField(max_length=50, blank=True)
    user_def_text8 = models.CharField(max_length=50, blank=True)
    user_def_text9 = models.CharField(max_length=50, blank=True)
    user_def_text10 = models.CharField(max_length=50, blank=True)
    user_def_text11 = models.CharField(max_length=50, blank=True)
    user_def_text12 = models.CharField(max_length=50, blank=True)
    user_def_text13 = models.CharField(max_length=50, blank=True)
    user_def_text14 = models.CharField(max_length=50, blank=True)
    user_def_text15 = models.CharField(max_length=50, blank=True)
    user_def_text16 = models.CharField(max_length=50, blank=True)
    user_def_text17 = models.CharField(max_length=50, blank=True)
    user_def_text18 = models.CharField(max_length=50, blank=True)
    user_def_text19 = models.CharField(max_length=50, blank=True)
    user_def_text20 = models.CharField(max_length=50, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    junk11 = models.CharField(max_length=50, blank=True)
    posted = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_intr_t_ex_fin'

class TmpGlobalConflictingBkgs(models.Model):
    ck_facility_id = models.CharField(max_length=25, blank=True)
    struserid = models.CharField(max_length=50, blank=True)
    funcn_id = models.IntegerField(null=True, blank=True)
    error_descr = models.CharField(max_length=250, blank=True)
    ck_rms_id = models.IntegerField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    ck_facility_config_no = models.IntegerField(null=True, blank=True)
    fk_conference_id = models.IntegerField(null=True, blank=True)
    fk_event_id = models.IntegerField(null=True, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    sk_facility_order_id = models.CharField(max_length=20, blank=True)
    fac_person_move_out_date = models.DateField(null=True, blank=True)
    facilities_person_booked_by = models.CharField(max_length=12, blank=True)
    facilities_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    facilities_person_billed = models.IntegerField()
    facilities_person_billing_type = models.CharField(max_length=50, blank=True)
    facilities_notes = models.CharField(max_length=250, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    fac_person_master_booking = models.IntegerField(null=True, blank=True)
    facilities_person_billed_up_to = models.DateField(null=True, blank=True)
    setup_time = models.DateField(null=True, blank=True)
    pull_down_time = models.DateField(null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'tmp_global_conflicting_bkgs'

class TempTTransactionsToExport(models.Model):
    rms_id = models.IntegerField()
    open_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    txid = models.CharField(max_length=20, blank=True)
    txtype = models.CharField(max_length=10, blank=True)
    taxtype1 = models.CharField(max_length=10, blank=True)
    taxtype2 = models.CharField(max_length=10, blank=True)
    taxtype3 = models.CharField(max_length=10, blank=True)
    taxtype4 = models.CharField(max_length=10, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    invoice_description = models.CharField(max_length=250, blank=True)
    entered_by = models.CharField(max_length=50, blank=True)
    invoice_no = models.CharField(max_length=10, blank=True)
    fiscal_year = models.CharField(max_length=4, blank=True)
    dr_account = models.CharField(max_length=12, blank=True)
    cr_account = models.CharField(max_length=12, blank=True)
    basic_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax1_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    posting_id = models.IntegerField(null=True, blank=True)
    posted = models.CharField(max_length=50, blank=True)
    payment_no = models.IntegerField(null=True, blank=True)
    transaction_type_default = models.IntegerField(null=True, blank=True)
    charges = models.IntegerField(null=True, blank=True)
    tax_txtype1 = models.CharField(max_length=10, blank=True)
    tax_txtype2 = models.CharField(max_length=10, blank=True)
    tax_txtype3 = models.CharField(max_length=10, blank=True)
    tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    uploadable = models.IntegerField(null=True, blank=True)
    transaction_type_description = models.CharField(max_length=50, blank=True)
    secondary_code = models.CharField(max_length=50, blank=True)
    debit_account = models.CharField(max_length=12, blank=True)
    credit_account = models.CharField(max_length=12, blank=True)
    min_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    max_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    account_name = models.CharField(max_length=50, blank=True)
    account_type = models.CharField(max_length=20, blank=True)
    alias_code = models.CharField(max_length=30, blank=True)
    ix_receivable = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    state = models.CharField(max_length=8, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    religion = models.CharField(max_length=20, blank=True)
    student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    school = models.CharField(max_length=30, blank=True)
    major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    school_category = models.CharField(max_length=10, blank=True)
    location = models.CharField(max_length=10, blank=True)
    institution = models.CharField(max_length=15, blank=True)
    catering = models.CharField(max_length=5, blank=True)
    ethnicity = models.CharField(max_length=25, blank=True)
    fk_dr_cr = models.CharField(max_length=2, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_transactions_to_export'

class TempTTermDates(models.Model):
    fk_term_id = models.CharField(max_length=8)
    term_dates_name = models.CharField(max_length=25, blank=True)
    term_dates_start_date = models.DateField(null=True, blank=True)
    term_dates_end_date = models.DateField(null=True, blank=True)
    term_dates_nominated = models.IntegerField(null=True, blank=True)
    term_dates_upload = models.IntegerField(null=True, blank=True)
    percentage_to_bill = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    upsize_ts = models.IntegerField(null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_term_dates'

class TempTSwCatSubmenu(models.Model):
    username = models.CharField(max_length=50)
    ck_category_id = models.IntegerField(null=True, blank=True)
    ck_submenu_id = models.IntegerField(null=True, blank=True)
    ud_label = models.CharField(max_length=50, blank=True)
    ud_visible = models.IntegerField(null=True, blank=True)
    fk_ud_css_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_sw_cat_submenu'

class TempTSwCatMenu(models.Model):
    username = models.CharField(max_length=50)
    ck_category_id = models.IntegerField(null=True, blank=True)
    ck_menu_id = models.IntegerField(null=True, blank=True)
    ud_label = models.CharField(max_length=50, blank=True)
    ud_visible = models.IntegerField(null=True, blank=True)
    fk_ud_css_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_sw_cat_menu'

class TempTSwsaRoommates(models.Model):
    ck_rms_id = models.IntegerField()
    ck_roommate_rmsid = models.IntegerField()
    bed_space = models.CharField(max_length=50, blank=True)
    page_name = models.CharField(max_length=20, blank=True)
    plans = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'temp_t_swsa_roommates'

class TempTSwsaRoomcheck(models.Model):
    room_no = models.CharField(max_length=20)
    pk_bed_space = models.CharField(max_length=20, unique=True)
    start_date = models.DateField(unique=True)
    end_date = models.DateField()
    class Meta:
        db_table = u'temp_t_swsa_roomcheck'

class TempTSharableByroomConfere(models.Model):
    ck_bed_space = models.CharField(max_length=10, unique=True)
    ck_rms_id = models.IntegerField(unique=True)
    ck_move_in_date = models.DateField(unique=True)
    room_person_move_out_date = models.DateField()
    isselected = models.IntegerField(null=True, blank=True)
    room_no = models.CharField(max_length=10)
    dest_bed_space = models.CharField(max_length=10, blank=True)
    userid = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_t_sharable_byroom_confere'

class TempTSharableByroom(models.Model):
    pk_room_no = models.CharField(max_length=10, unique=True)
    beds_count = models.IntegerField(null=True, blank=True)
    booked_count = models.IntegerField(null=True, blank=True)
    source_room = models.CharField(max_length=10, blank=True)
    move_count = models.IntegerField(null=True, blank=True)
    userid = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_t_sharable_byroom'

class TempTSelPerson(models.Model):
    pk_rms_id = models.IntegerField(primary_key=True)
    sel_person_name = models.CharField(max_length=75, blank=True)
    sel_person_person_type = models.CharField(max_length=4, blank=True)
    sel_person_info1 = models.CharField(max_length=254, blank=True)
    sel_person_info2 = models.CharField(max_length=254, blank=True)
    sel_person_info3 = models.CharField(max_length=254, blank=True)
    sel_person_info4 = models.CharField(max_length=254, blank=True)
    sel_person_info5 = models.CharField(max_length=254, blank=True)
    sel_person_info6 = models.CharField(max_length=254, blank=True)
    allocated = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, primary_key=True)
    sel_person_info7 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_sel_person'

class TempTSelBookingsPlan(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    name = models.CharField(max_length=255, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ck_plan_type = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    sel_bookings_move_out_date = models.DateField(null=True, blank=True)
    sel_bookings_booked_by = models.CharField(max_length=30, blank=True)
    sel_bookings_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    sel_bookings_billed_up_to = models.DateField(null=True, blank=True)
    sel_bookings_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    sel_bookings_original_rate = models.IntegerField(null=True, blank=True)
    selected = models.IntegerField()
    sel_bookings_new_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_new_rate_code = models.CharField(max_length=10, blank=True)
    fk_new_billing_type = models.CharField(max_length=50, blank=True)
    sel_bookings_rate_config_no = models.IntegerField(null=True, blank=True)
    sel_booking_new_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_sel_bookings_plan'

class TempTSelBookings(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    person_name = models.CharField(max_length=100, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    sel_bookings_move_out_date = models.DateField(null=True, blank=True)
    sel_bookings_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    sel_bookings_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    sel_bookings_billed_up_to = models.DateField(null=True, blank=True)
    sel_bookings_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    sel_bookings_turn_around_date = models.DateField(null=True, blank=True)
    selected = models.CharField(max_length=1, blank=True)
    sel_bookings_new_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_new_rate_code = models.CharField(max_length=10, blank=True)
    fk_new_billing_type = models.CharField(max_length=50, blank=True)
    sel_bookings_rate_config_no = models.IntegerField(null=True, blank=True)
    sel_booking_new_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_sel_bookings'

class TempTSelApplicationType(models.Model):
    pk_application_type = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_sel_application_type'

class TempTRoomType(models.Model):
    fk_room_type = models.CharField(max_length=15)
    fk_rate_code = models.CharField(max_length=10)
    room_type_description = models.CharField(max_length=30, blank=True)
    room_type_nominated = models.IntegerField(null=True, blank=True)
    turn_around_time = models.IntegerField(null=True, blank=True)
    turn_around_type = models.CharField(max_length=15, blank=True)
    room_type_alias_name = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_room_type'

class TempTRoomList(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    allocation_gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    eligibility_criteria = models.CharField(max_length=250, blank=True)
    fk_userid = models.CharField(max_length=50, blank=True)
    operating_mode = models.CharField(max_length=1, blank=True)
    class Meta:
        db_table = u'temp_t_room_list'

class TempTRoomDetails(models.Model):
    ck_community = models.CharField(max_length=25, blank=True)
    ck_building_id = models.CharField(max_length=8, blank=True)
    ck_floor_id = models.CharField(max_length=8, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    room_type_alias_name = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    rooms_start_date = models.DateField(null=True, blank=True)
    rooms_end_date = models.DateField(null=True, blank=True)
    operating_mode = models.CharField(max_length=1, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    eligibility_criteria = models.CharField(max_length=250, blank=True)
    fk_userid = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_room_details'

class TempTRoomAllocBedspCount(models.Model):
    fk_room_no = models.CharField(max_length=10, blank=True)
    roommates = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_room_alloc_bedsp_count'

class TempTRoomsToClose(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    close_move_in_date = models.DateField(null=True, blank=True)
    close_move_out_date = models.DateField(null=True, blank=True)
    close_booking_type = models.CharField(max_length=5, blank=True)
    close_booked_by = models.CharField(max_length=12, blank=True)
    close_check_in = models.DateField(null=True, blank=True)
    close_check_out = models.DateField(null=True, blank=True)
    close_rate = models.BigIntegerField(null=True, blank=True)
    close_notes = models.CharField(max_length=50, blank=True)
    close_billed_up_to = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_rooms_to_close'

class TempTRoomsForManualalloc(models.Model):
    ck_community = models.CharField(max_length=25, blank=True)
    ck_building_id = models.CharField(max_length=8, blank=True)
    ck_floor_id = models.CharField(max_length=8, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no1 = models.IntegerField(null=True, blank=True)
    rooms_start_date1 = models.DateField(null=True, blank=True)
    rooms_end_date1 = models.DateField(null=True, blank=True)
    allocation_gender = models.CharField(max_length=1, blank=True)
    allocation_operating_mode = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no1 = models.IntegerField(null=True, blank=True)
    rate_start_date1 = models.DateField(null=True, blank=True)
    rate_end_date1 = models.DateField(null=True, blank=True)
    allocation_rate1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    allocation_requested = models.IntegerField()
    allocation_booking_type = models.CharField(max_length=5, blank=True)
    allocation_early_arrival = models.DateField(null=True, blank=True)
    fk_billing_type1 = models.CharField(max_length=50, blank=True)
    rsig = models.CharField(max_length=250, blank=True)
    rmtsig = models.CharField(max_length=250, blank=True)
    roommates_wanted = models.IntegerField(null=True, blank=True)
    original_capacity = models.IntegerField(null=True, blank=True)
    roommate_gender = models.CharField(max_length=1, blank=True)
    ck_rooms_config_no2 = models.IntegerField(null=True, blank=True)
    rooms_start_date2 = models.DateField(null=True, blank=True)
    rooms_end_date2 = models.DateField(null=True, blank=True)
    fk_rate_config_no2 = models.IntegerField(null=True, blank=True)
    rate_start_date2 = models.DateField(null=True, blank=True)
    rate_end_date2 = models.DateField(null=True, blank=True)
    allocation_rate2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type2 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no3 = models.IntegerField(null=True, blank=True)
    rooms_start_date3 = models.DateField(null=True, blank=True)
    rooms_end_date3 = models.DateField(null=True, blank=True)
    fk_rate_config_no3 = models.IntegerField(null=True, blank=True)
    rate_start_date3 = models.DateField(null=True, blank=True)
    rate_end_date3 = models.DateField(null=True, blank=True)
    allocation_rate3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type3 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no4 = models.IntegerField(null=True, blank=True)
    rooms_start_date4 = models.DateField(null=True, blank=True)
    rooms_end_date4 = models.DateField(null=True, blank=True)
    fk_rate_config_no4 = models.IntegerField(null=True, blank=True)
    rate_start_date4 = models.DateField(null=True, blank=True)
    rate_end_date4 = models.DateField(null=True, blank=True)
    allocation_rate4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type4 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no5 = models.IntegerField(null=True, blank=True)
    rooms_start_date5 = models.DateField(null=True, blank=True)
    rooms_end_date5 = models.DateField(null=True, blank=True)
    fk_rate_config_no5 = models.IntegerField(null=True, blank=True)
    rate_start_date5 = models.DateField(null=True, blank=True)
    rate_end_date5 = models.DateField(null=True, blank=True)
    allocation_rate5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type5 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no6 = models.IntegerField(null=True, blank=True)
    rooms_start_date6 = models.DateField(null=True, blank=True)
    rooms_end_date6 = models.DateField(null=True, blank=True)
    fk_rate_config_no6 = models.IntegerField(null=True, blank=True)
    rate_start_date6 = models.DateField(null=True, blank=True)
    rate_end_date6 = models.DateField(null=True, blank=True)
    allocation_rate6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type6 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no7 = models.IntegerField(null=True, blank=True)
    rooms_start_date7 = models.DateField(null=True, blank=True)
    rooms_end_date7 = models.DateField(null=True, blank=True)
    fk_rate_config_no7 = models.IntegerField(null=True, blank=True)
    rate_start_date7 = models.DateField(null=True, blank=True)
    rate_end_date7 = models.DateField(null=True, blank=True)
    allocation_rate7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type7 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no8 = models.IntegerField(null=True, blank=True)
    rooms_start_date8 = models.DateField(null=True, blank=True)
    rooms_end_date8 = models.DateField(null=True, blank=True)
    fk_rate_config_no8 = models.IntegerField(null=True, blank=True)
    rate_start_date8 = models.DateField(null=True, blank=True)
    rate_end_date8 = models.DateField(null=True, blank=True)
    allocation_rate8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type8 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no9 = models.IntegerField(null=True, blank=True)
    rooms_start_date9 = models.DateField(null=True, blank=True)
    rooms_end_date9 = models.DateField(null=True, blank=True)
    fk_rate_config_no9 = models.IntegerField(null=True, blank=True)
    rate_start_date9 = models.DateField(null=True, blank=True)
    rate_end_date9 = models.DateField(null=True, blank=True)
    allocation_rate9 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type9 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no10 = models.IntegerField(null=True, blank=True)
    rooms_start_date10 = models.DateField(null=True, blank=True)
    rooms_end_date10 = models.DateField(null=True, blank=True)
    fk_rate_config_no10 = models.IntegerField(null=True, blank=True)
    rate_start_date10 = models.DateField(null=True, blank=True)
    rate_end_date10 = models.DateField(null=True, blank=True)
    allocation_rate10 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type10 = models.CharField(max_length=50, blank=True)
    desirability_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_rooms_for_manualalloc'

class TempTRoomsForAllocTemp(models.Model):
    ck_bed_space = models.CharField(max_length=10, blank=True)
    desirability = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_rooms_for_alloc_temp'

class TempTRoomsForAllocation(models.Model):
    ck_community = models.CharField(max_length=25, blank=True)
    ck_building_id = models.CharField(max_length=8, blank=True)
    ck_floor_id = models.CharField(max_length=8, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no1 = models.IntegerField(null=True, blank=True)
    rooms_start_date1 = models.DateField(null=True, blank=True)
    rooms_end_date1 = models.DateField(null=True, blank=True)
    allocation_gender = models.CharField(max_length=1, blank=True)
    allocation_operating_mode = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_rate_config_no1 = models.IntegerField(null=True, blank=True)
    rate_start_date1 = models.DateField(null=True, blank=True)
    rate_end_date1 = models.DateField(null=True, blank=True)
    allocation_rate1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    allocation_requested = models.IntegerField(null=True, blank=True)
    allocation_booking_type = models.CharField(max_length=5, blank=True)
    allocation_early_arrival = models.DateField(null=True, blank=True)
    fk_billing_type1 = models.CharField(max_length=50, blank=True)
    rsig = models.CharField(max_length=250, blank=True)
    rmtsig = models.CharField(max_length=250, blank=True)
    roommates_wanted = models.IntegerField(null=True, blank=True)
    original_capacity = models.IntegerField(null=True, blank=True)
    roommate_gender = models.CharField(max_length=1, blank=True)
    ck_rooms_config_no2 = models.IntegerField(null=True, blank=True)
    rooms_start_date2 = models.DateField(null=True, blank=True)
    rooms_end_date2 = models.DateField(null=True, blank=True)
    fk_rate_config_no2 = models.IntegerField(null=True, blank=True)
    rate_start_date2 = models.DateField(null=True, blank=True)
    rate_end_date2 = models.DateField(null=True, blank=True)
    allocation_rate2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type2 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no3 = models.IntegerField(null=True, blank=True)
    rooms_start_date3 = models.DateField(null=True, blank=True)
    rooms_end_date3 = models.DateField(null=True, blank=True)
    fk_rate_config_no3 = models.IntegerField(null=True, blank=True)
    rate_start_date3 = models.DateField(null=True, blank=True)
    rate_end_date3 = models.DateField(null=True, blank=True)
    allocation_rate3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type3 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no4 = models.IntegerField(null=True, blank=True)
    rooms_start_date4 = models.DateField(null=True, blank=True)
    rooms_end_date4 = models.DateField(null=True, blank=True)
    fk_rate_config_no4 = models.IntegerField(null=True, blank=True)
    rate_start_date4 = models.DateField(null=True, blank=True)
    rate_end_date4 = models.DateField(null=True, blank=True)
    allocation_rate4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type4 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no5 = models.IntegerField(null=True, blank=True)
    rooms_start_date5 = models.DateField(null=True, blank=True)
    rooms_end_date5 = models.DateField(null=True, blank=True)
    fk_rate_config_no5 = models.IntegerField(null=True, blank=True)
    rate_start_date5 = models.DateField(null=True, blank=True)
    rate_end_date5 = models.DateField(null=True, blank=True)
    allocation_rate5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type5 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no6 = models.IntegerField(null=True, blank=True)
    rooms_start_date6 = models.DateField(null=True, blank=True)
    rooms_end_date6 = models.DateField(null=True, blank=True)
    fk_rate_config_no6 = models.IntegerField(null=True, blank=True)
    rate_start_date6 = models.DateField(null=True, blank=True)
    rate_end_date6 = models.DateField(null=True, blank=True)
    allocation_rate6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type6 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no7 = models.IntegerField(null=True, blank=True)
    rooms_start_date7 = models.DateField(null=True, blank=True)
    rooms_end_date7 = models.DateField(null=True, blank=True)
    fk_rate_config_no7 = models.IntegerField(null=True, blank=True)
    rate_start_date7 = models.DateField(null=True, blank=True)
    rate_end_date7 = models.DateField(null=True, blank=True)
    allocation_rate7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type7 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no8 = models.IntegerField(null=True, blank=True)
    rooms_start_date8 = models.DateField(null=True, blank=True)
    rooms_end_date8 = models.DateField(null=True, blank=True)
    fk_rate_config_no8 = models.IntegerField(null=True, blank=True)
    rate_start_date8 = models.DateField(null=True, blank=True)
    rate_end_date8 = models.DateField(null=True, blank=True)
    allocation_rate8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type8 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no9 = models.IntegerField(null=True, blank=True)
    rooms_start_date9 = models.DateField(null=True, blank=True)
    rooms_end_date9 = models.DateField(null=True, blank=True)
    fk_rate_config_no9 = models.IntegerField(null=True, blank=True)
    rate_start_date9 = models.DateField(null=True, blank=True)
    rate_end_date9 = models.DateField(null=True, blank=True)
    allocation_rate9 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type9 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no10 = models.IntegerField(null=True, blank=True)
    rooms_start_date10 = models.DateField(null=True, blank=True)
    rooms_end_date10 = models.DateField(null=True, blank=True)
    fk_rate_config_no10 = models.IntegerField(null=True, blank=True)
    rate_start_date10 = models.DateField(null=True, blank=True)
    rate_end_date10 = models.DateField(null=True, blank=True)
    allocation_rate10 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type10 = models.CharField(max_length=50, blank=True)
    desirability = models.IntegerField(null=True, blank=True)
    rmtcritical = models.CharField(max_length=250, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    room_type_alias_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_rooms_for_allocation'

class TempTRooms(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    phone_equip_no = models.CharField(max_length=4, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    operating_mode = models.CharField(max_length=50, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    eligibility_criteria = models.CharField(max_length=250, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    fk_use_1 = models.CharField(max_length=20, blank=True)
    fk_use_2 = models.CharField(max_length=20, blank=True)
    rooms_dirty = models.IntegerField()
    rooms_serviced = models.DateField(null=True, blank=True)
    rooms_linen = models.DateField(null=True, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_rooms'

class TempTRoommatesids(models.Model):
    pk_row_id = models.IntegerField(null=True, blank=True)
    rmsid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_roommatesids'

class TempTRateTotals(models.Model):
    ck_rate_code = models.CharField(max_length=10, blank=True)
    ck_config_no = models.IntegerField(null=True, blank=True)
    rate_totals_amt = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rate_totals_billing_type = models.CharField(max_length=50, blank=True)
    rate_totals_start_date = models.DateField(null=True, blank=True)
    rate_totals_end_date = models.DateField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_rate_totals'

class TempTRateForTerm(models.Model):
    pk_rate_code = models.CharField(max_length=50, blank=True)
    rate_description = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_rate_for_term'

class TempTPlansForAllocation(models.Model):
    fk_rms_id = models.IntegerField(null=True, blank=True)
    assigned_requested = models.IntegerField(null=True, blank=True)
    assigned_early_arrival = models.DateField(null=True, blank=True)
    fk_pref_meal_plan_1 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    fk_plan_billing_type_1_term1 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2_term1 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3_term1 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4_term1 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5_term1 = models.CharField(max_length=50, blank=True)
    fk_plan_rate_config_no_1_term1 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2_term1 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3_term1 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4_term1 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5_term1 = models.IntegerField(null=True, blank=True)
    assigned_plan_rate_code_1 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_2 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_3 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_4 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_5 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_1_term1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2_term1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3_term1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4_term1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5_term1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_plan_billing_type_1_term2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_1_term3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_1_term4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_1_term5 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2_term2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2_term3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2_term4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2_term5 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3_term2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3_term3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3_term4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3_term5 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4_term2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4_term3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4_term4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4_term5 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5_term2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5_term3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5_term4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5_term5 = models.CharField(max_length=50, blank=True)
    fk_plan_rate_config_no_1_term2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_1_term3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_1_term4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_1_term5 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2_term2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2_term3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2_term4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2_term5 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3_term2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3_term3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3_term4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3_term5 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4_term2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4_term3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4_term4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4_term5 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5_term2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5_term3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5_term4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5_term5 = models.IntegerField(null=True, blank=True)
    assigned_plan_rate_1_term2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_1_term3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_1_term4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_1_term5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2_term2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2_term3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2_term4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2_term5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3_term2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3_term3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3_term4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3_term5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4_term2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4_term3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4_term4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4_term5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5_term2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5_term3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5_term4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5_term5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_plans_for_allocation'

class TempTNewApplicantToImport(models.Model):
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ck_change_type = models.CharField(max_length=50, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_home = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=50, blank=True)
    fax = models.CharField(max_length=50, blank=True)
    person_type = models.CharField(max_length=50, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.CharField(max_length=50, blank=True)
    title = models.CharField(max_length=50, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    ck_national_id = models.CharField(max_length=50, blank=True)
    ix_new_national_id = models.CharField(max_length=50, blank=True)
    fk_marital_status = models.CharField(max_length=50, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=50, blank=True)
    fk_student_type = models.CharField(max_length=50, blank=True)
    ck_student_number = models.CharField(max_length=50, blank=True)
    fk_school = models.CharField(max_length=50, blank=True)
    fk_major = models.CharField(max_length=50, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=50, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=50, blank=True)
    gpa = models.CharField(max_length=50, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=50, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.CharField(max_length=50, blank=True)
    fk_school_category = models.CharField(max_length=50, blank=True)
    fk_location = models.CharField(max_length=50, blank=True)
    fk_institution = models.CharField(max_length=50, blank=True)
    fk_catering = models.CharField(max_length=50, blank=True)
    fk_ethnicity = models.CharField(max_length=50, blank=True)
    user_defined_1 = models.CharField(max_length=50, blank=True)
    user_defined_2 = models.CharField(max_length=50, blank=True)
    user_defined_3 = models.CharField(max_length=50, blank=True)
    user_defined_4 = models.CharField(max_length=50, blank=True)
    fk_bed_space = models.CharField(max_length=50, blank=True)
    fk_move_in_date = models.CharField(max_length=50, blank=True)
    room_person_move_out_date = models.CharField(max_length=50, blank=True)
    room_person_booking_type = models.CharField(max_length=50, blank=True)
    room_person_booked_by = models.CharField(max_length=50, blank=True)
    check_in = models.CharField(max_length=50, blank=True)
    check_out = models.CharField(max_length=50, blank=True)
    fk_rate_code = models.CharField(max_length=50, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    room_person_original_rate = models.IntegerField(null=True, blank=True)
    fk_contact_id = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=50, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    vac_address_1 = models.CharField(max_length=50, blank=True)
    vac_address_1b = models.CharField(max_length=50, blank=True)
    vac_address_2 = models.CharField(max_length=50, blank=True)
    vac_postcode = models.CharField(max_length=50, blank=True)
    fk_vac_state = models.CharField(max_length=50, blank=True)
    vac_address_3 = models.CharField(max_length=50, blank=True)
    vac_phone = models.CharField(max_length=50, blank=True)
    vac_fax = models.CharField(max_length=50, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    financial_hold = models.CharField(max_length=50, blank=True)
    judicial_hold = models.CharField(max_length=50, blank=True)
    privacy_flag_1 = models.CharField(max_length=50, blank=True)
    privacy_flag_2 = models.CharField(max_length=50, blank=True)
    privacy_flag_3 = models.CharField(max_length=50, blank=True)
    incident_type_6 = models.CharField(max_length=50, blank=True)
    incident_type_7 = models.CharField(max_length=50, blank=True)
    incident_type_8 = models.CharField(max_length=50, blank=True)
    incident_type_9 = models.CharField(max_length=50, blank=True)
    incident_type_10 = models.CharField(max_length=50, blank=True)
    building_id = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.CharField(max_length=50, blank=True)
    user_def_int2 = models.CharField(max_length=50, blank=True)
    user_def_int3 = models.CharField(max_length=50, blank=True)
    user_def_int4 = models.CharField(max_length=50, blank=True)
    user_def_int5 = models.CharField(max_length=50, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.CharField(max_length=50, blank=True)
    user_def_yes_no2 = models.CharField(max_length=50, blank=True)
    user_def_yes_no3 = models.CharField(max_length=50, blank=True)
    user_def_yes_no4 = models.CharField(max_length=50, blank=True)
    user_def_yes_no5 = models.CharField(max_length=50, blank=True)
    fk_contact_rms_id = models.CharField(max_length=50, blank=True)
    contact_sex = models.CharField(max_length=50, blank=True)
    ix_contact_last_name = models.CharField(max_length=50, blank=True)
    ix_contact_first_name = models.CharField(max_length=50, blank=True)
    ix_contact_middle_name = models.CharField(max_length=50, blank=True)
    contact_address_1 = models.CharField(max_length=50, blank=True)
    contact_address_1b = models.CharField(max_length=50, blank=True)
    contact_address_2 = models.CharField(max_length=50, blank=True)
    contact_postcode = models.CharField(max_length=50, blank=True)
    fk_contact_state = models.CharField(max_length=50, blank=True)
    contact_address_3 = models.CharField(max_length=50, blank=True)
    contact_phone_home = models.CharField(max_length=50, blank=True)
    contact_phone_work = models.CharField(max_length=50, blank=True)
    contact_fax = models.CharField(max_length=50, blank=True)
    contact_person_type = models.CharField(max_length=50, blank=True)
    contact_notes = models.CharField(max_length=50, blank=True)
    fk_contact_call_accounting_id = models.IntegerField(null=True, blank=True)
    contact_title = models.CharField(max_length=50, blank=True)
    contact_e_mail = models.CharField(max_length=50, blank=True)
    ix_contact_national_id = models.CharField(max_length=50, blank=True)
    fk_contact_marital_status = models.CharField(max_length=50, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    bond_paid = models.CharField(max_length=50, blank=True)
    fee_paid = models.CharField(max_length=50, blank=True)
    application_form_complete = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=50, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=50, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'temp_t_new_applicant_to_import'

class TempTMaintenancePerson(models.Model):
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_national_id = models.CharField(max_length=15, blank=True)
    fk_student_number = models.CharField(max_length=20, blank=True)
    person_name = models.CharField(max_length=80, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_maintenance_person'

class TempTLongParamsConf(models.Model):
    function_id = models.IntegerField()
    param_value = models.CharField(max_length=4000, blank=True)
    userid = models.CharField(max_length=50)
    class Meta:
        db_table = u'temp_t_long_params_conf'

class TempTLandlordRentCalc(models.Model):
    ck_payment_id = models.IntegerField()
    ck_rms_pid = models.IntegerField()
    ck_application_type = models.CharField(max_length=50)
    ck_term_id = models.CharField(max_length=8)
    schedule_date = models.DateField(null=True, blank=True)
    payment_date = models.DateField(null=True, blank=True)
    fk_posting_id = models.IntegerField(null=True, blank=True)
    fk_ll_rms_id = models.IntegerField()
    fiscal_year = models.CharField(max_length=50, blank=True)
    amount1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_userid = models.CharField(max_length=50)
    class Meta:
        db_table = u'temp_t_landlord_rent_calc'

class TempTInvalidLogins(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    login_id = models.CharField(max_length=50, blank=True)
    logintype = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    problem_info = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_invalid_logins'

class TempTHUpdpertype(models.Model):
    rmsid = models.IntegerField()
    username = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_h_updpertype'

class TempTHousekeepingStatus(models.Model):
    pk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    rooms_dirty = models.CharField(max_length=1, blank=True)
    rooms_serviced = models.DateField(null=True, blank=True)
    rooms_linen = models.DateField(null=True, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    tbs = models.CharField(max_length=10, blank=True)
    lcr = models.CharField(max_length=10, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    ck_move_in_date = models.DateField(null=True, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    gender = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no = models.IntegerField(null=True, blank=True)
    rates_service_type = models.CharField(max_length=15, blank=True)
    rates_service_time = models.IntegerField(null=True, blank=True)
    rates_linen_time = models.IntegerField(null=True, blank=True)
    rates_linen_type = models.CharField(max_length=15, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_housekeeping_status'

class TempTDay(models.Model):
    pk_day = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_day'

class TempTDateString(models.Model):
    date_text = models.CharField(max_length=4000, blank=True)
    userid = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_date_string'

class TempTConfRoomsToBook(models.Model):
    pk_bed_space = models.CharField(max_length=10)
    rooms_to_book_room_config_no = models.IntegerField()
    rooms_to_book_turn_around_date = models.DateField(null=True, blank=True)
    rooms_to_book_move_in_date = models.DateField(null=True, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_conf_rooms_to_book'

class TempTConflictFacPerson(models.Model):
    ck_facility_id = models.CharField(max_length=10)
    ck_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    fac_person_move_out_date = models.DateField()
    facilities_person_booked_by = models.CharField(max_length=20, blank=True)
    facilities_person_rate = models.BigIntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10)
    facilities_person_billing_type = models.CharField(max_length=50, blank=True)
    fac_person_master_booking = models.IntegerField(null=True, blank=True)
    facilities_capacity = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_conflict_fac_person'

class TempTConfiglogin(models.Model):
    rmsid = models.IntegerField()
    username = models.CharField(max_length=50)
    class Meta:
        db_table = u'temp_t_configlogin'

class TempTBookingSchedule(models.Model):
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    schedule_move_in_date = models.DateField(null=True, blank=True)
    schedule_move_out_date = models.DateField(null=True, blank=True)
    schedule_last_name = models.CharField(max_length=25, blank=True)
    firstday = models.IntegerField(null=True, blank=True)
    lastday = models.IntegerField(null=True, blank=True)
    turnday = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_booking_schedule'

class TempTBillingPlanAmounts(models.Model):
    fk_plan_type = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    billing_subject = models.IntegerField(null=True, blank=True)
    billing_move_in_date = models.DateField(null=True, blank=True)
    billing_move_out_date = models.DateField(null=True, blank=True)
    billing_billing_to = models.DateField(null=True, blank=True)
    billing_billed_up_to = models.DateField(null=True, blank=True)
    billing_unpaid_units = models.IntegerField(null=True, blank=True)
    billing_rate_code = models.CharField(max_length=10, blank=True)
    billing_rate_config_no = models.IntegerField(null=True, blank=True)
    billing_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_line_detail = models.CharField(max_length=255, blank=True)
    billing_billing_type = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_billing_plan_amounts'

class TempTBillingAmounts(models.Model):
    pk_billingid = models.IntegerField()
    itemtype = models.CharField(max_length=50, blank=True)
    fk_rms = models.ForeignKey(PpleTPerson, null=True, blank=True)
    billing_subject = models.IntegerField(null=True, blank=True)
    billing_move_in_date = models.DateField(null=True, blank=True)
    billing_move_out_date = models.DateField(null=True, blank=True)
    billing_billing_to = models.DateField(null=True, blank=True)
    billing_billed_up_to = models.DateField(null=True, blank=True)
    billing_unpaid_units = models.IntegerField(null=True, blank=True)
    billing_rate_code = models.CharField(max_length=50, blank=True)
    billing_rate_config_no = models.IntegerField(null=True, blank=True)
    billing_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    billing_line_detail = models.CharField(max_length=255, blank=True)
    billing_billing_type = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30)
    class Meta:
        db_table = u'temp_t_billing_amounts'

class TempTBbbatchOperations2(models.Model):
    pk_data_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    pk_operation_number = models.IntegerField(null=True, blank=True)
    instruction_type = models.CharField(max_length=1, blank=True)
    privilege_operation = models.CharField(max_length=50, blank=True)
    privilege = models.CharField(max_length=30, blank=True)
    privilege_plan_number = models.CharField(max_length=30, blank=True)
    account_number = models.CharField(max_length=50, blank=True)
    account_plan_number = models.CharField(max_length=15, blank=True)
    operation_details = models.CharField(max_length=100, blank=True)
    record_number = models.IntegerField(null=True, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount_text = models.CharField(max_length=6, blank=True)
    privilege_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_bbbatch_operations2'

class TempTBbbatchOperations(models.Model):
    pk_data_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    pk_operation_number = models.IntegerField(null=True, blank=True)
    instruction_type = models.CharField(max_length=1, blank=True)
    op_type = models.CharField(max_length=1, blank=True)
    privilege_operation = models.CharField(max_length=50, blank=True)
    privilege = models.CharField(max_length=30, blank=True)
    privilege_plan_number = models.CharField(max_length=30, blank=True)
    account_number = models.CharField(max_length=50, blank=True)
    account_plan_number = models.CharField(max_length=15, blank=True)
    operation_details = models.CharField(max_length=100, blank=True)
    record_number = models.IntegerField(null=True, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount_text = models.CharField(max_length=6, blank=True)
    privilege_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_t_bbbatch_operations'

class TempTAutoemailChrgcrdt(models.Model):
    fname = models.CharField(max_length=25, blank=True)
    lname = models.CharField(max_length=25, blank=True)
    firstname = models.CharField(max_length=25, blank=True)
    middlename = models.CharField(max_length=25, blank=True)
    lastname = models.CharField(max_length=25, blank=True)
    rmsid = models.IntegerField(null=True, blank=True)
    universityid = models.CharField(max_length=20, blank=True)
    item = models.CharField(max_length=10, blank=True)
    amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    invoiceid = models.CharField(max_length=20, blank=True)
    entrydate = models.DateField(null=True, blank=True)
    itemdetails = models.CharField(max_length=250, blank=True)
    enteredby = models.CharField(max_length=50, blank=True)
    term = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'temp_t_autoemail_chrgcrdt'

class TempTAssignedForAllocation(models.Model):
    ck_community = models.CharField(max_length=25, blank=True)
    ck_building_id = models.CharField(max_length=8, blank=True)
    ck_floor_id = models.CharField(max_length=8, blank=True)
    ck_section_id = models.CharField(max_length=8, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_rooms_config_no1 = models.IntegerField(null=True, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    assigned_gender = models.CharField(max_length=1, blank=True)
    assigned_operating_mode = models.CharField(max_length=1, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    assigned_rate1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    assigned_requested = models.IntegerField()
    assigned_booking_type = models.CharField(max_length=5, blank=True)
    assigned_early_arrival = models.DateField(null=True, blank=True)
    fk_billing_type1 = models.CharField(max_length=50, blank=True)
    roompersonbookmark = models.CharField(max_length=100, blank=True)
    fk_rate_config_no1 = models.IntegerField(null=True, blank=True)
    fk_pref_meal_plan_1 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    fk_plan_billing_type_1 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_2 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_3 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_4 = models.CharField(max_length=50, blank=True)
    fk_plan_billing_type_5 = models.CharField(max_length=50, blank=True)
    fk_plan_rate_config_no_1 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_2 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_3 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_4 = models.IntegerField(null=True, blank=True)
    fk_plan_rate_config_no_5 = models.IntegerField(null=True, blank=True)
    assigned_plan_rate_code_1 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_2 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_3 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_4 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_code_5 = models.CharField(max_length=10, blank=True)
    assigned_plan_rate_1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assigned_plan_rate_5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    ck_rooms_config_no2 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no2 = models.IntegerField(null=True, blank=True)
    assigned_rate2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type2 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no3 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no3 = models.IntegerField(null=True, blank=True)
    assigned_rate3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type3 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no4 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no4 = models.IntegerField(null=True, blank=True)
    assigned_rate4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type4 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no5 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no5 = models.IntegerField(null=True, blank=True)
    assigned_rate5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type5 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no6 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no6 = models.IntegerField(null=True, blank=True)
    assigned_rate6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type6 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no7 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no7 = models.IntegerField(null=True, blank=True)
    assigned_rate7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type7 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no8 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no8 = models.IntegerField(null=True, blank=True)
    assigned_rate8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type8 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no9 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no9 = models.IntegerField(null=True, blank=True)
    assigned_rate9 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type9 = models.CharField(max_length=50, blank=True)
    ck_rooms_config_no10 = models.IntegerField(null=True, blank=True)
    fk_rate_config_no10 = models.IntegerField(null=True, blank=True)
    assigned_rate10 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_billing_type10 = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'temp_t_assigned_for_allocation'

class TempTApplicantsForAlloc(models.Model):
    row_no = models.IntegerField(unique=True)
    pk_rms_id = models.IntegerField()
    application_arrival_date = models.DateField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    asig = models.CharField(max_length=255, blank=True)
    other_attributes = models.CharField(max_length=255, blank=True)
    spcritical = models.CharField(max_length=255, blank=True)
    original_sort = models.CharField(max_length=508, blank=True)
    ck_preference_no = models.IntegerField(null=True, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    valid_roommates = models.IntegerField(null=True, blank=True)
    final_sort = models.CharField(max_length=508, blank=True)
    roommates_requested = models.CharField(max_length=508, blank=True)
    new_eligibility = models.CharField(max_length=508, blank=True)
    new_compatibility = models.CharField(max_length=508, blank=True)
    new_critical = models.CharField(max_length=508, blank=True)
    sel_person_name = models.CharField(max_length=150, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    sel_person_info7 = models.IntegerField(null=True, blank=True)
    fk_userid = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_t_applicants_for_alloc'

class TempSwCatCuiTableProp(models.Model):
    ck_cui_control_id = models.IntegerField(unique=True)
    ck_category_id = models.IntegerField(unique=True)
    ud_table_align = models.CharField(max_length=10, blank=True)
    ud_table_height = models.IntegerField(null=True, blank=True)
    ud_table_width = models.IntegerField(null=True, blank=True)
    ud_cell_padding = models.IntegerField(null=True, blank=True)
    ud_cell_spacing = models.IntegerField(null=True, blank=True)
    ud_border_color = models.CharField(max_length=30, blank=True)
    ud_border_size = models.IntegerField(null=True, blank=True)
    ud_rh_valign = models.CharField(max_length=10, blank=True)
    ud_rh_height = models.IntegerField(null=True, blank=True)
    fk_ud_rh_class = models.CharField(max_length=50, blank=True)
    ud_rh_visible = models.IntegerField(null=True, blank=True)
    ud_r_valign = models.CharField(max_length=10, blank=True)
    ud_r_height = models.IntegerField(null=True, blank=True)
    fk_ud_r_class = models.CharField(max_length=50, blank=True)
    username = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_sw_cat_cui_table_prop'

class TempSwCatCuiTableCols(models.Model):
    ck_category_id = models.IntegerField(unique=True)
    ck_cui_table_col_id = models.IntegerField(unique=True)
    ud_label = models.CharField(max_length=1000, blank=True)
    ud_col_width = models.IntegerField(null=True, blank=True)
    ud_col_align = models.CharField(max_length=10, blank=True)
    fk_ud_col_class = models.CharField(max_length=50, blank=True)
    ud_col_visible = models.IntegerField(null=True, blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    col_order = models.IntegerField(null=True, blank=True)
    username = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_sw_cat_cui_table_cols'

class TempSwCatCuiControls(models.Model):
    ck_cui_control_id = models.IntegerField(unique=True)
    ck_category_id = models.IntegerField(unique=True)
    ud_visible = models.IntegerField(null=True, blank=True)
    ud_required = models.IntegerField(null=True, blank=True)
    ud_label = models.CharField(max_length=1000, blank=True)
    ud_position_top = models.IntegerField(null=True, blank=True)
    ud_position_left = models.IntegerField(null=True, blank=True)
    ud_max_length = models.IntegerField(null=True, blank=True)
    ud_width = models.IntegerField(null=True, blank=True)
    ud_cols = models.IntegerField(null=True, blank=True)
    ud_rows = models.IntegerField(null=True, blank=True)
    ud_default_value = models.CharField(max_length=50, blank=True)
    ud_disabled = models.IntegerField(null=True, blank=True)
    ud_image_top = models.IntegerField(null=True, blank=True)
    ud_image_left = models.IntegerField(null=True, blank=True)
    ud_image_visible = models.IntegerField(null=True, blank=True)
    ud_url = models.CharField(max_length=250, blank=True)
    fk_ud_class = models.CharField(max_length=50, blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    username = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_sw_cat_cui_controls'

class TempSwCatCui(models.Model):
    ck_category_id = models.IntegerField(primary_key=True)
    ck_page_id = models.IntegerField(unique=True)
    ck_user_type = models.CharField(max_length=7, unique=True)
    ud_body_background = models.CharField(max_length=30, blank=True)
    ud_body_font_family = models.CharField(max_length=25, blank=True)
    fk_function_id = models.IntegerField(null=True, blank=True)
    username = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_sw_cat_cui'

class TempPpleTApplication(models.Model):
    pk_application_no = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=4)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField()
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'temp_pple_t_application'

class TempMmgeTLetterPerson(models.Model):
    pk_rms_id = models.IntegerField(null=True, blank=True)
    pdf_name = models.CharField(max_length=100, blank=True)
    user_id = models.CharField(max_length=50, blank=True)
    generation_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'temp_mmge_t_letter_person'

class TempBedspaceBetweendates1(models.Model):
    bedspace = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'temp_bedspace_betweendates_1'

class TempAllotedRoom(models.Model):
    fromroomno = models.CharField(max_length=10, unique=True)
    toroomno = models.CharField(max_length=10, unique=True)
    nomember = models.IntegerField(unique=True)
    userid = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'temp_alloted_room'

class SwSystemMessage(models.Model):
    pk_message_id = models.IntegerField(unique=True)
    fk_function = models.ForeignKey(SwFunction)
    base_caption = models.CharField(max_length=250, blank=True)
    base_message = models.CharField(max_length=1000, blank=True)
    ud_caption = models.CharField(max_length=250, blank=True)
    ud_message = models.CharField(max_length=1000, blank=True)
    class Meta:
        db_table = u'sw_system_message'

class SwSubmenu(models.Model):
    pk_submenu_id = models.IntegerField(unique=True)
    fk_menu = models.ForeignKey(SwMenu, unique=True)
    rmsbase_label = models.CharField(max_length=50, unique=True)
    rmsbase_visible = models.IntegerField()
    fk_rmsbase_css_name = models.ForeignKey(SwCss, db_column='fk_rmsbase_css_name')
    udbase_label = models.CharField(max_length=50)
    udbase_visible = models.IntegerField()
    fk_udbase_css_name = models.ForeignKey(SwCss, db_column='fk_udbase_css_name')
    display_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_submenu'

class SwRules(models.Model):
    pk_rule_id = models.IntegerField(unique=True)
    rule_name = models.CharField(max_length=35)
    rule_description = models.CharField(max_length=250)
    fk_function = models.ForeignKey(SwFunction)
    rmsrequired = models.IntegerField()
    dynamic_msg = models.CharField(max_length=1000, blank=True)
    order = models.IntegerField()
    class Meta:
        db_table = u'sw_rules'

class SwRoomLocked(models.Model):
    pk_bed_space = models.ForeignKey(RmgtTRooms, unique=True, db_column='pk_bed_space')
    fk_room_no = models.CharField(max_length=10)
    lock_starttime = models.DateField()
    lock_by = models.IntegerField()
    class Meta:
        db_table = u'sw_room_locked'

class SwRoomretentionLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField()
    entrytime = models.DateField()
    fk_category = models.ForeignKey(SwCategory, null=True, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    entry_status = models.CharField(max_length=50, blank=True)
    description = models.CharField(max_length=4000, blank=True)
    log_type = models.CharField(max_length=10, blank=True)
    fk_plan_type = models.CharField(max_length=2000, blank=True)
    class Meta:
        db_table = u'sw_roomretention_log'

class SwRmmtpullinLog(models.Model):
    pk_entry_no = models.IntegerField()
    fk_pullby_rmsid = models.IntegerField()
    fk_pullin_rmsid = models.IntegerField(null=True, blank=True)
    entrytime = models.DateField(null=True, blank=True)
    fk_category = models.ForeignKey(SwCategory)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_pullby_bed_space = models.CharField(max_length=10, blank=True)
    fk_pullin_bed_space = models.CharField(max_length=10, blank=True)
    entry_status = models.CharField(max_length=20, blank=True)
    description = models.CharField(max_length=4000, blank=True)
    log_type = models.CharField(max_length=10, blank=True)
    fk_pullby_plan_type = models.CharField(max_length=2000, blank=True)
    fk_pullin_plan_type = models.CharField(max_length=2000, blank=True)
    class Meta:
        db_table = u'sw_rmmtpullin_log'

class SwPrefRoomno(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_roomno = models.CharField(max_length=8, unique=True)
    class Meta:
        db_table = u'sw_pref_roomno'

class SwPrefFloorSections(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_section = models.ForeignKey(RmgtTFloorSections, unique=True)
    class Meta:
        db_table = u'sw_pref_floor_sections'

class SwPrefFloor(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_floor = models.ForeignKey(RmgtTFloors, unique=True)
    class Meta:
        db_table = u'sw_pref_floor'

class SwPrefBuilding(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_building = models.ForeignKey(RmgtTBuildings, unique=True)
    class Meta:
        db_table = u'sw_pref_building'

class SwPlanTermMap(models.Model):
    ck_term = models.ForeignKey(RmgtTTermDates, unique=True)
    ck_plan_type = models.ForeignKey(RmgtTPlanType, unique=True, db_column='ck_plan_type')
    class Meta:
        db_table = u'sw_plan_term_map'

class SwPlanRoomtypeMap(models.Model):
    ck_room_type = models.ForeignKey(RmgtTRoomType, unique=True, db_column='ck_room_type')
    ck_plan_type = models.ForeignKey(RmgtTPlanType, unique=True, db_column='ck_plan_type')
    class Meta:
        db_table = u'sw_plan_roomtype_map'

class SwPlanCommunityMap(models.Model):
    ck_community = models.ForeignKey(RmgtTCommunity, unique=True, db_column='ck_community')
    ck_plan_type = models.ForeignKey(RmgtTPlanType, unique=True, db_column='ck_plan_type')
    class Meta:
        db_table = u'sw_plan_community_map'

class SwPlanBuildingMap(models.Model):
    ck_building = models.ForeignKey(RmgtTBuildings)
    ck_plan_type = models.ForeignKey(RmgtTPlanType, db_column='ck_plan_type')
    class Meta:
        db_table = u'sw_plan_building_map'

class SwPlanaliasBuildingMap(models.Model):
    ck_building = models.ForeignKey(RmgtTPlanaliasBuilding, unique=True)
    ck_plan_alias = models.ForeignKey(RmgtTPlanaliasBuilding, unique=True, db_column='ck_plan_alias')
    class Meta:
        db_table = u'sw_planalias_building_map'

class SwParentChildRel(models.Model):
    parent_tab_name = models.CharField(max_length=50, blank=True)
    child_tab_name = models.CharField(max_length=50, blank=True)
    parent_col = models.CharField(max_length=50, blank=True)
    child_col = models.CharField(max_length=50, blank=True)
    type = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'sw_parent_child_rel'

class SwPages(models.Model):
    pk_page_id = models.IntegerField(unique=True)
    rms_page_name = models.CharField(max_length=50)
    page_description = models.CharField(max_length=250)
    fk_function = models.ForeignKey(SwFunction)
    rmsrequired = models.IntegerField()
    order = models.IntegerField()
    class Meta:
        db_table = u'sw_pages'

class SwMessageboard(models.Model):
    pk_page_id = models.IntegerField(unique=True)
    rmsbase_message = models.CharField(max_length=4000)
    udbase_message = models.CharField(max_length=4000)
    class Meta:
        db_table = u'sw_messageboard'

class SwMenu(models.Model):
    pk_menu_id = models.IntegerField(unique=True)
    menu_type = models.CharField(max_length=10, unique=True)
    rmsbase_label = models.CharField(max_length=50, unique=True)
    rmsbase_visible = models.IntegerField()
    fk_rmsbase_css_name = models.ForeignKey(SwCss, db_column='fk_rmsbase_css_name')
    udbase_label = models.CharField(max_length=50)
    udbase_visible = models.IntegerField()
    fk_udbase_css_name = models.ForeignKey(SwCss, db_column='fk_udbase_css_name')
    class Meta:
        db_table = u'sw_menu'

class SwMandatoryCols(models.Model):
    table_name = models.CharField(max_length=50, blank=True)
    column_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'sw_mandatory_cols'

class SwLoginLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    entrytime = models.DateField()
    operatingsystem = models.CharField(max_length=100)
    browser = models.CharField(max_length=250)
    log_type = models.CharField(max_length=10)
    class Meta:
        db_table = u'sw_login_log'

class SwGrsLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    entrytime = models.DateField(null=True, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    entry_status = models.CharField(max_length=20, blank=True)
    description = models.CharField(max_length=4000, blank=True)
    log_type = models.CharField(max_length=10, blank=True)
    fk_plan_type = models.CharField(max_length=2000, blank=True)
    class Meta:
        db_table = u'sw_grs_log'

class SwGpsLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    entrytime = models.DateField()
    fk_category = models.ForeignKey(SwCategory)
    pk_function = models.ForeignKey(SwFunction)
    entry_status = models.CharField(max_length=20)
    description = models.CharField(max_length=100)
    log_type = models.CharField(max_length=10)
    fk_plan_type = models.ForeignKey(RmgtTPlanType, db_column='fk_plan_type')
    class Meta:
        db_table = u'sw_gps_log'

class SwGloTermDisplay(models.Model):
    pk_term = models.ForeignKey(RmgtTTermDates, unique=True)
    class Meta:
        db_table = u'sw_glo_term_display'

class SwGloRoomtypeDisplay(models.Model):
    pk_room_type = models.ForeignKey(RmgtTRoomType, unique=True, db_column='pk_room_type')
    class Meta:
        db_table = u'sw_glo_roomtype_display'

class SwGloPlantypeDisplay(models.Model):
    pk_plan_option = models.CharField(max_length=10, unique=True)
    description = models.CharField(max_length=500, blank=True)
    class Meta:
        db_table = u'sw_glo_plantype_display'

class SwGloPagesTranslator(models.Model):
    pk_page = models.ForeignKey(SwPages, unique=True)
    ud_page_info = models.CharField(max_length=250)
    class Meta:
        db_table = u'sw_glo_pages_translator'

class SwGloCatDisplay(models.Model):
    pk_category = models.ForeignKey(SwCategory, unique=True)
    class Meta:
        db_table = u'sw_glo_cat_display'

class SwGloBuildingDisplay(models.Model):
    pk_building = models.ForeignKey(RmgtTBuildings, unique=True)
    class Meta:
        db_table = u'sw_glo_building_display'

class SwFunctionDropdown(models.Model):
    ck_function = models.ForeignKey(SwFunction, unique=True)
    ck_screen_id = models.IntegerField(unique=True)
    screen_name = models.CharField(max_length=100)
    class Meta:
        db_table = u'sw_function_dropdown'

class SwFunction(models.Model):
    pk_function_id = models.IntegerField(unique=True)
    function_name = models.CharField(max_length=30, unique=True)
    function_description = models.CharField(max_length=100)
    class Meta:
        db_table = u'sw_function'

class SwDocuments(models.Model):
    pk_docid = models.IntegerField(unique=True)
    document_name = models.CharField(max_length=100)
    document_description = models.CharField(max_length=250)
    download_location = models.CharField(max_length=250)
    submit_location = models.CharField(max_length=250)
    ts_format = models.CharField(max_length=30)
    status = models.IntegerField()
    class Meta:
        db_table = u'sw_documents'

class SwCuiTableProp(models.Model):
    pk_cui_control = models.ForeignKey(SwCuiControls, unique=True)
    rmsbase_table_align = models.CharField(max_length=10, blank=True)
    rmsbase_table_height = models.IntegerField(null=True, blank=True)
    rmsbase_table_width = models.IntegerField(null=True, blank=True)
    rmsbase_cell_padding = models.IntegerField(null=True, blank=True)
    rmsbase_cell_spacing = models.IntegerField(null=True, blank=True)
    rmsbase_border_color = models.CharField(max_length=30, blank=True)
    rmsbase_border_size = models.IntegerField(null=True, blank=True)
    rmsbase_rh_valign = models.CharField(max_length=10, blank=True)
    rmsbase_rh_height = models.IntegerField(null=True, blank=True)
    fk_rmsbase_rh_class = models.ForeignKey(SwCss, null=True, db_column='fk_rmsbase_rh_class', blank=True)
    rmsbase_rh_visible = models.IntegerField(null=True, blank=True)
    rmsbase_r_valign = models.CharField(max_length=10, blank=True)
    rmsbase_r_height = models.IntegerField(null=True, blank=True)
    fk_rmsbase_r_class = models.ForeignKey(SwCss, null=True, db_column='fk_rmsbase_r_class', blank=True)
    udbase_table_align = models.CharField(max_length=10, blank=True)
    udbase_table_height = models.IntegerField(null=True, blank=True)
    udbase_table_width = models.IntegerField(null=True, blank=True)
    udbase_cell_padding = models.IntegerField(null=True, blank=True)
    udbase_cell_spacing = models.IntegerField(null=True, blank=True)
    udbase_border_color = models.CharField(max_length=30, blank=True)
    udbase_border_size = models.IntegerField(null=True, blank=True)
    udbase_rh_valign = models.CharField(max_length=10, blank=True)
    udbase_rh_height = models.IntegerField(null=True, blank=True)
    fk_udbase_rh_class = models.ForeignKey(SwCss, null=True, db_column='fk_udbase_rh_class', blank=True)
    udbase_rh_visible = models.IntegerField(null=True, blank=True)
    udbase_r_valign = models.CharField(max_length=10, blank=True)
    udbase_r_height = models.IntegerField(null=True, blank=True)
    fk_udbase_r_class = models.ForeignKey(SwCss, null=True, db_column='fk_udbase_r_class', blank=True)
    class Meta:
        db_table = u'sw_cui_table_prop'

class SwCuiTableCols(models.Model):
    pk_cui_table_col_id = models.IntegerField(unique=True)
    fk_cui_control = models.ForeignKey(SwCuiControls)
    rmsbase_label = models.CharField(max_length=1000, blank=True)
    rmsbase_col_width = models.IntegerField(null=True, blank=True)
    rmsbase_col_align = models.CharField(max_length=10, blank=True)
    fk_rmsbase_col_class = models.ForeignKey(SwCss, null=True, db_column='fk_rmsbase_col_class', blank=True)
    rmsbase_col_visible = models.IntegerField(null=True, blank=True)
    udbase_label = models.CharField(max_length=1000, blank=True)
    udbase_col_width = models.IntegerField(null=True, blank=True)
    udbase_col_align = models.CharField(max_length=10, blank=True)
    fk_udbase_col_class = models.ForeignKey(SwCss, null=True, db_column='fk_udbase_col_class', blank=True)
    udbase_col_visible = models.IntegerField(null=True, blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    col_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cui_table_cols'

class SwCuiPreviewMap(models.Model):
    pk_page_id = models.IntegerField(unique=True)
    top_left_nav = models.CharField(max_length=500)
    bottom_left_nav = models.CharField(max_length=500)
    top_main_frame = models.CharField(max_length=500)
    center_main_frame = models.CharField(max_length=500)
    bottom_main_frame = models.CharField(max_length=500)
    fk_function_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cui_preview_map'

class SwCuiControls(models.Model):
    pk_cui_control_id = models.IntegerField(unique=True)
    fk_page = models.ForeignKey(SwCui, unique=True)
    fk_user_type = models.ForeignKey(SwCui, unique=True, db_column='fk_user_type')
    control_id = models.CharField(max_length=100, unique=True)
    control_name = models.CharField(max_length=1000)
    control_type = models.CharField(max_length=15)
    control_description = models.CharField(max_length=250, blank=True)
    rmsbase_visible = models.IntegerField(null=True, blank=True)
    rmsbase_required = models.IntegerField(null=True, blank=True)
    rmsbase_label = models.CharField(max_length=1000, blank=True)
    rmsbase_position_top = models.IntegerField(null=True, blank=True)
    rmsbase_position_left = models.IntegerField(null=True, blank=True)
    rmsbase_max_length = models.IntegerField(null=True, blank=True)
    rmsbase_width = models.IntegerField(null=True, blank=True)
    rmsbase_cols = models.IntegerField(null=True, blank=True)
    rmsbase_rows = models.IntegerField(null=True, blank=True)
    rmsbase_default_value = models.CharField(max_length=50, blank=True)
    rmsbase_disabled = models.IntegerField(null=True, blank=True)
    rmsbase_image_top = models.IntegerField(null=True, blank=True)
    rmsbase_image_left = models.IntegerField(null=True, blank=True)
    rmsbase_image_visible = models.IntegerField(null=True, blank=True)
    rmsbase_ud_url = models.CharField(max_length=250, blank=True)
    fk_rmsbase_class = models.ForeignKey(SwCss, null=True, db_column='fk_rmsbase_class', blank=True)
    udbase_visible = models.IntegerField(null=True, blank=True)
    udbase_required = models.IntegerField(null=True, blank=True)
    udbase_label = models.CharField(max_length=1000, blank=True)
    udbase_position_top = models.IntegerField(null=True, blank=True)
    udbase_position_left = models.IntegerField(null=True, blank=True)
    udbase_max_length = models.IntegerField(null=True, blank=True)
    udbase_width = models.IntegerField(null=True, blank=True)
    udbase_cols = models.IntegerField(null=True, blank=True)
    udbase_rows = models.IntegerField(null=True, blank=True)
    udbase_default_value = models.CharField(max_length=50, blank=True)
    udbase_disabled = models.IntegerField(null=True, blank=True)
    udbase_image_top = models.IntegerField(null=True, blank=True)
    udbase_image_left = models.IntegerField(null=True, blank=True)
    udbase_image_visible = models.IntegerField(null=True, blank=True)
    udbase_url = models.CharField(max_length=250, blank=True)
    fk_udbase_class = models.ForeignKey(SwCss, null=True, db_column='fk_udbase_class', blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cui_controls'

class SwCui(models.Model):
    ck_page = models.ForeignKey(SwPages, unique=True)
    ck_user_type = models.CharField(max_length=7, unique=True)
    rmsbase_page_identifier = models.CharField(max_length=50)
    rmsbase_body_background = models.CharField(max_length=30, blank=True)
    rmsbase_body_font_family = models.CharField(max_length=25, blank=True)
    udbase_body_background = models.CharField(max_length=30, blank=True)
    udbase_body_font_family = models.CharField(max_length=25, blank=True)
    configxmlname = models.CharField(max_length=100, blank=True)
    class Meta:
        db_table = u'sw_cui'

class SwCssProperty(models.Model):
    property_name = models.CharField(max_length=50, unique=True)
    property_control_type = models.CharField(max_length=50)
    property_values = models.CharField(max_length=2000, blank=True)
    class Meta:
        db_table = u'sw_css_property'

class SwCssElements(models.Model):
    fk_css_name = models.ForeignKey(SwCss, unique=True, db_column='fk_css_name')
    fk_property_name = models.ForeignKey(SwCssProperty, unique=True, db_column='fk_property_name')
    property_value = models.CharField(max_length=100, blank=True)
    class Meta:
        db_table = u'sw_css_elements'

class SwCss(models.Model):
    pk_css_name = models.CharField(max_length=50, unique=True)
    css_properties = models.CharField(max_length=4000)
    rmsbase = models.IntegerField()
    class Meta:
        db_table = u'sw_css'

class SwCopyConfigurationLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    entrytime = models.DateField(null=True, blank=True)
    username = models.CharField(max_length=50, blank=True)
    source_db = models.CharField(max_length=50, blank=True)
    destination_db = models.CharField(max_length=50, blank=True)
    function_name = models.CharField(max_length=100, blank=True)
    source_category = models.IntegerField(null=True, blank=True)
    destination_category = models.CharField(max_length=4000, blank=True)
    entry_type = models.CharField(max_length=50, blank=True)
    comments = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'sw_copy_configuration_log'

class SwColumnValues(models.Model):
    table_name = models.CharField(max_length=50, blank=True)
    column_name = models.CharField(max_length=50, blank=True)
    column_value = models.CharField(max_length=4000, blank=True)
    default_value = models.CharField(max_length=4000, blank=True)
    is_active = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_column_values'

class SwCatTermDisplay(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_function = models.ForeignKey(SwFunction, unique=True)
    ck_term = models.ForeignKey(RmgtTTermDates, unique=True)
    class Meta:
        db_table = u'sw_cat_term_display'

class SwCatSubmenu(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_submenu = models.ForeignKey(SwSubmenu, unique=True)
    ud_label = models.CharField(max_length=50)
    ud_visible = models.IntegerField()
    fk_ud_css_name = models.ForeignKey(SwCss, db_column='fk_ud_css_name')
    class Meta:
        db_table = u'sw_cat_submenu'

class SwCatRules(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_rule_id = models.IntegerField(unique=True)
    order_no = models.IntegerField(unique=True)
    dynamic_msg = models.CharField(max_length=1000)
    table = models.CharField(max_length=100, blank=True)
    column = models.CharField(max_length=50, blank=True)
    operator = models.CharField(max_length=11, blank=True)
    value = models.CharField(max_length=50, blank=True)
    set_for = models.CharField(max_length=50, blank=True)
    value_type = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'sw_cat_rules'

class SwCatRoomSql(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_function = models.ForeignKey(SwFunction, unique=True)
    sqlstatement = models.TextField()
    class Meta:
        db_table = u'sw_cat_room_sql'

class SwCatRoomDisplay(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_function = models.ForeignKey(SwFunction, unique=True)
    fk_room_no = models.CharField(max_length=10)
    ck_bed_space = models.ForeignKey(RmgtTRooms, unique=True, db_column='ck_bed_space')
    class Meta:
        db_table = u'sw_cat_room_display'

class SwCatPrefRoomType(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_room_type = models.ForeignKey(RmgtTRoomType, unique=True, db_column='ck_room_type')
    class Meta:
        db_table = u'sw_cat_pref_room_type'

class SwCatPrefPlanoption(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    planoption = models.CharField(max_length=10, unique=True)
    description = models.CharField(max_length=30)
    class Meta:
        db_table = u'sw_cat_pref_planoption'

class SwCatPrefOptions(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    community = models.IntegerField()
    building = models.IntegerField()
    floor = models.IntegerField()
    floorsection = models.IntegerField()
    roomnoorbed = models.IntegerField()
    class Meta:
        db_table = u'sw_cat_pref_options'

class SwCatPrefCommunity(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_community = models.ForeignKey(RmgtTCommunity, unique=True, db_column='ck_community')
    class Meta:
        db_table = u'sw_cat_pref_community'

class SwCatPrefBedspace(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    pk_function = models.ForeignKey(SwFunction, unique=True)
    ck_bed_space = models.ForeignKey(RmgtTRooms, unique=True, db_column='ck_bed_space')
    class Meta:
        db_table = u'sw_cat_pref_bedspace'

class SwCatPlanList(models.Model):
    ck_function = models.ForeignKey(SwFunction, unique=True)
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_plan_option = models.CharField(max_length=10, unique=True)
    class Meta:
        db_table = u'sw_cat_plan_list'

class SwCatPersonSql(models.Model):
    pk_sql_id = models.IntegerField(primary_key=True)
    execution_order = models.IntegerField()
    fk_category = models.ForeignKey(SwCategory)
    sql_statement = models.TextField()
    class Meta:
        db_table = u'sw_cat_person_sql'

class SwCatPersonQualification(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_q_rule_id = models.IntegerField(unique=True)
    table_name = models.CharField(max_length=100)
    column_name = models.CharField(max_length=50)
    operator = models.CharField(max_length=10)
    value = models.CharField(max_length=50, blank=True)
    gain_point = models.IntegerField()
    description = models.CharField(max_length=250)
    application_period = models.CharField(max_length=50, blank=True)
    value_type = models.CharField(max_length=10)
    class Meta:
        db_table = u'sw_cat_person_qualification'

class SwCatPagesTranslator(models.Model):
    pk_cpf = models.ForeignKey(SwCatPagesFlow, unique=True)
    ud_page_info = models.CharField(max_length=250)
    class Meta:
        db_table = u'sw_cat_pages_translator'

class SwCatPagesFlow(models.Model):
    pk_cpf_id = models.IntegerField(unique=True)
    fk_category = models.ForeignKey(SwCategory)
    fk_page_id = models.IntegerField()
    order_no = models.IntegerField()
    ud_caption = models.CharField(max_length=20)
    class Meta:
        db_table = u'sw_cat_pages_flow'

class SwCatMessageboard(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_page = models.ForeignKey(SwMessageboard, unique=True)
    ud_message = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'sw_cat_messageboard'

class SwCatMenu(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_menu = models.ForeignKey(SwMenu, unique=True)
    ud_label = models.CharField(max_length=50)
    ud_visible = models.IntegerField()
    fk_ud_css_name = models.ForeignKey(SwCss, db_column='fk_ud_css_name')
    class Meta:
        db_table = u'sw_cat_menu'

class SwCatLotterySchedule(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    start_time = models.DateField(unique=True)
    ck_function = models.ForeignKey(SwFunction, unique=True)
    min_number = models.IntegerField()
    max_number = models.IntegerField()
    class Meta:
        db_table = u'sw_cat_lottery_schedule'

class SwCatGroupQualification(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    table = models.CharField(max_length=100)
    column = models.CharField(max_length=50)
    description = models.CharField(max_length=250)
    application_period = models.CharField(max_length=50)
    class Meta:
        db_table = u'sw_cat_group_qualification'

class SwCatCuiTableProp(models.Model):
    ck_cui_control = models.ForeignKey(SwCuiTableProp, unique=True)
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ud_table_align = models.CharField(max_length=10, blank=True)
    ud_table_height = models.IntegerField(null=True, blank=True)
    ud_table_width = models.IntegerField(null=True, blank=True)
    ud_cell_padding = models.IntegerField(null=True, blank=True)
    ud_cell_spacing = models.IntegerField(null=True, blank=True)
    ud_border_color = models.CharField(max_length=30, blank=True)
    ud_border_size = models.IntegerField(null=True, blank=True)
    ud_rh_valign = models.CharField(max_length=10, blank=True)
    ud_rh_height = models.IntegerField(null=True, blank=True)
    fk_ud_rh_class = models.ForeignKey(SwCss, null=True, db_column='fk_ud_rh_class', blank=True)
    ud_rh_visible = models.IntegerField(null=True, blank=True)
    ud_r_valign = models.CharField(max_length=10, blank=True)
    ud_r_height = models.IntegerField(null=True, blank=True)
    fk_ud_r_class = models.ForeignKey(SwCss, null=True, db_column='fk_ud_r_class', blank=True)
    class Meta:
        db_table = u'sw_cat_cui_table_prop'

class SwCatCuiTableCols(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_cui_table_col = models.ForeignKey(SwCuiTableCols, unique=True)
    ud_label = models.CharField(max_length=1000, blank=True)
    ud_col_width = models.IntegerField(null=True, blank=True)
    ud_col_align = models.CharField(max_length=10, blank=True)
    fk_ud_col_class = models.ForeignKey(SwCss, null=True, db_column='fk_ud_col_class', blank=True)
    ud_col_visible = models.IntegerField(null=True, blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    col_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cat_cui_table_cols'

class SwCatCuiControls(models.Model):
    ck_cui_control = models.ForeignKey(SwCuiControls, unique=True)
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ud_visible = models.IntegerField(null=True, blank=True)
    ud_required = models.IntegerField(null=True, blank=True)
    ud_label = models.CharField(max_length=1000, blank=True)
    ud_position_top = models.IntegerField(null=True, blank=True)
    ud_position_left = models.IntegerField(null=True, blank=True)
    ud_max_length = models.IntegerField(null=True, blank=True)
    ud_width = models.IntegerField(null=True, blank=True)
    ud_cols = models.IntegerField(null=True, blank=True)
    ud_rows = models.IntegerField(null=True, blank=True)
    ud_default_value = models.CharField(max_length=50, blank=True)
    ud_disabled = models.IntegerField(null=True, blank=True)
    ud_image_top = models.IntegerField(null=True, blank=True)
    ud_image_left = models.IntegerField(null=True, blank=True)
    ud_image_visible = models.IntegerField(null=True, blank=True)
    ud_url = models.CharField(max_length=250, blank=True)
    fk_ud_class = models.ForeignKey(SwCss, null=True, db_column='fk_ud_class', blank=True)
    system_label = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'sw_cat_cui_controls'

class SwCatCui(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_page = models.ForeignKey(SwCui, unique=True)
    ck_user_type = models.ForeignKey(SwCui, unique=True, db_column='ck_user_type')
    rmsbase_page_identifier = models.CharField(max_length=50)
    ud_body_background = models.CharField(max_length=30, blank=True)
    ud_body_font_family = models.CharField(max_length=25, blank=True)
    configxmlname = models.CharField(max_length=100)
    class Meta:
        db_table = u'sw_cat_cui'

class SwCatCategory(models.Model):
    ck_category_id = models.IntegerField(unique=True)
    ck_function_id = models.IntegerField(unique=True)
    switch_category_id = models.IntegerField(unique=True)
    class Meta:
        db_table = u'sw_cat_category'

class SwCatAutoemail(models.Model):
    ck_category = models.ForeignKey(SwCategory)
    ck_autoemail = models.ForeignKey(SwAutoemail)
    ud_subject = models.CharField(max_length=250)
    ud_body = models.CharField(max_length=4000)
    ud_email_cc = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'sw_cat_autoemail'

class SwCatAttr(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_attr = models.ForeignKey(SwAttrFlag, unique=True)
    value = models.CharField(max_length=30)
    class Meta:
        db_table = u'sw_cat_attr'

class SwCatApplperiodDisplay(models.Model):
    ck_category = models.ForeignKey(SwCategory, unique=True)
    ck_function = models.ForeignKey(SwFunction, unique=True)
    ck_show_name = models.CharField(max_length=50, unique=True)
    show_type = models.CharField(max_length=50)
    editable = models.IntegerField()
    class Meta:
        db_table = u'sw_cat_applperiod_display'

class SwCategory(models.Model):
    pk_category_id = models.IntegerField(unique=True)
    category_code = models.CharField(max_length=30, blank=True)
    category_description = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'sw_category'

class SwBaseLUTColor(models.Model):
    pk_color_id = models.IntegerField(unique=True)
    color_name = models.CharField(max_length=30, unique=True)
    rgb_code = models.CharField(max_length=20)
    active = models.IntegerField()
    class Meta:
        db_table = u'sw_base_l_u_t_color'

class SwBaseCssElements(models.Model):
    fk_css_name = models.ForeignKey(SwBaseCss, unique=True, db_column='fk_css_name')
    fk_property_name = models.CharField(max_length=50, unique=True)
    property_value = models.CharField(max_length=100, blank=True)
    class Meta:
        db_table = u'sw_base_css_elements'

class SwBaseCss(models.Model):
    pk_css_name = models.CharField(max_length=50, unique=True)
    css_properties = models.CharField(max_length=4000)
    class Meta:
        db_table = u'sw_base_css'

class SwAutoemail(models.Model):
    pk_autoemail_id = models.IntegerField(unique=True)
    email_name = models.CharField(max_length=250)
    email_type = models.CharField(max_length=10)
    rmsbase_subject = models.CharField(max_length=250)
    rmsbase_body = models.CharField(max_length=4000)
    udbase_subject = models.CharField(max_length=250)
    udbase_body = models.CharField(max_length=4000)
    rmsbase_email_cc = models.CharField(max_length=50, blank=True)
    udbase_email_cc = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'sw_autoemail'

class SwAttrFlag(models.Model):
    pk_attr_id = models.IntegerField(unique=True)
    fk_function = models.ForeignKey(SwFunction)
    attr_name = models.CharField(max_length=30)
    attr_description = models.CharField(max_length=100, blank=True)
    class Meta:
        db_table = u'sw_attr_flag'

class SmpVdsSessionsTable(models.Model):
    session_id = models.DecimalField(primary_key=True, decimal_places=-127, max_digits=0)
    principal_name = models.CharField(max_length=128)
    principal_type = models.CharField(max_length=128)
    principal_ior = models.CharField(max_length=2000, blank=True)
    login_time = models.DateField(null=True, blank=True)
    oms = models.CharField(max_length=128)
    class Meta:
        db_table = u'smp_vds_sessions_table'

class SmpVdsReposVersion(models.Model):
    app_name = models.CharField(max_length=512, primary_key=True)
    version = models.DecimalField(max_digits=0, decimal_places=-127)
    upd_in_progress = models.DecimalField(max_digits=0, decimal_places=-127)
    standalone = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    class Meta:
        db_table = u'smp_vds_repos_version'

class RmsSequences(models.Model):
    seq_name = models.CharField(max_length=100, primary_key=True)
    value = models.BigIntegerField(null=True, blank=True)
    class Meta:
        db_table = u'rms_sequences'

class RmgtTTermDates(models.Model):
    pk_term_id = models.CharField(max_length=8, unique=True)
    term_dates_name = models.CharField(max_length=25, blank=True)
    term_dates_start_date = models.DateField()
    term_dates_end_date = models.DateField()
    term_dates_nominated = models.IntegerField(null=True, blank=True)
    percentage_to_bill = models.DecimalField(max_digits=18, decimal_places=5)
    term_dates_upload = models.IntegerField()
    status = models.IntegerField()
    room_term = models.IntegerField(null=True, blank=True)
    plan_term = models.IntegerField(null=True, blank=True)
    billing_term = models.IntegerField(null=True, blank=True)
    property_term = models.IntegerField(null=True, blank=True)
    payment_term = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'rmgt_t_term_dates'

class RmgtTRoomType(models.Model):
    pk_room_type = models.CharField(max_length=15, unique=True)
    room_type_alias_name = models.CharField(max_length=50)
    fk_rate_code = models.CharField(max_length=10)
    room_type_description = models.CharField(max_length=30)
    turn_around_time = models.IntegerField()
    turn_around_type = models.CharField(max_length=15)
    status = models.IntegerField()
    ud_hyperlink1 = models.CharField(max_length=200, blank=True)
    class Meta:
        db_table = u'rmgt_t_room_type'

class RmgtTRoomPerson(models.Model):
    ck_rms = models.ForeignKey(PpleTPerson)
    ck_bed_space = models.ForeignKey(RmgtTRooms, db_column='ck_bed_space')
    ck_move_in_date = models.DateField(unique=True)
    fk_rate_code = models.CharField(max_length=10)
    fk_rooms_config_no = models.ForeignKey(RmgtTRoomConfigs, db_column='fk_rooms_config_no')
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_billing_type = models.ForeignKey(AcctTBillingType, db_column='fk_billing_type')
    fk_order = models.ForeignKey(AcctTOrders, unique=True)
    sk_room_order_id = models.CharField(max_length=20, unique=True)
    application_type = models.CharField(max_length=50, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    individual_billing = models.IntegerField()
    fk_term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    fk_rms_gid = models.ForeignKey(ApplTApplicationGroups, null=True, db_column='fk_rms_gid', blank=True)
    ns_bkg_flag = models.IntegerField()
    ns_bkg_dtls = models.CharField(max_length=500, blank=True)
    booking_hold = models.IntegerField(null=True, blank=True)
    locking_system_sent = models.DateField(null=True, blank=True)
    locking_system_indicator = models.CharField(max_length=1, blank=True)
    lock_time = models.DateField(null=True, blank=True)
    swsa_details = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'rmgt_t_room_person'

class RmgtTRoomInventory(models.Model):
    fk_bed_space = models.ForeignKey(RmgtTRooms, db_column='fk_bed_space')
    fk_inventory_code = models.ForeignKey(RmgtTInventory, db_column='fk_inventory_code')
    assessed = models.DateField(null=True, blank=True)
    room_inventory_status = models.ForeignKey(LUTInventoryStatus, db_column='room_inventory_status')
    status_comment = models.CharField(max_length=250, blank=True)
    serial_number = models.CharField(max_length=30, blank=True)
    purchase_date = models.DateField(null=True, blank=True)
    inv_deleted = models.IntegerField(null=True, blank=True)
    inv_deleted_date = models.DateField(null=True, blank=True)
    inv_deletedby = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'rmgt_t_room_inventory'

class RmgtTRoomConfigs(models.Model):
    ck_bed_space = models.ForeignKey(RmgtTRooms, unique=True, db_column='ck_bed_space')
    ck_rooms_config_no = models.IntegerField(unique=True)
    fk_rooms_type = models.ForeignKey(RmgtTRoomType, db_column='fk_rooms_type')
    fk_section = models.ForeignKey(RmgtTFloorSections)
    rooms_start_date = models.DateField()
    rooms_end_date = models.DateField()
    gender = models.CharField(max_length=1)
    phone_equip_no = models.CharField(max_length=4, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    operating_mode = models.CharField(max_length=1)
    rooms_capacity = models.IntegerField()
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    eligibility_criteria = models.CharField(max_length=250)
    fk_use_1 = models.ForeignKey(LUTRmgtTUse1, null=True, db_column='fk_use_1', blank=True)
    fk_use_2 = models.ForeignKey(LUTRmgtTUse2, null=True, db_column='fk_use_2', blank=True)
    status = models.IntegerField()
    desirability = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_room_configs'

class RmgtTRooms(models.Model):
    pk_bed_space = models.CharField(max_length=10, unique=True)
    fk_room_no = models.CharField(max_length=10)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    rooms_dirty = models.IntegerField()
    rooms_serviced = models.DateField(null=True, blank=True)
    rooms_linen = models.DateField(null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    ud_hyperlink1 = models.CharField(max_length=200, blank=True)
    ud_hyperlink2 = models.CharField(max_length=200, blank=True)
    ud_hyperlink3 = models.CharField(max_length=200, blank=True)
    locking_system_roomid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'rmgt_t_rooms'

class RmgtTReports(models.Model):
    report_name = models.CharField(max_length=150, unique=True)
    report_desc = models.CharField(max_length=250)
    report_path = models.CharField(max_length=250)
    class Meta:
        db_table = u'rmgt_t_reports'

class RmgtTReportlabels(models.Model):
    name = models.CharField(max_length=100, blank=True)
    add1 = models.CharField(max_length=60, blank=True)
    add1b = models.CharField(max_length=30, blank=True)
    add2 = models.CharField(max_length=45, blank=True)
    state = models.CharField(max_length=35, blank=True)
    postcode = models.CharField(max_length=20, blank=True)
    add3 = models.CharField(max_length=40, blank=True)
    workstation = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'rmgt_t_reportlabels'

class RmgtTRatesSplit(models.Model):
    ck_rate_code = models.ForeignKey(RmgtTRates, unique=True, db_column='ck_rate_code')
    ck_rate_config_no = models.ForeignKey(RmgtTRates, unique=True, db_column='ck_rate_config_no')
    ck_txtype = models.ForeignKey(AcctTTransactionType, unique=True, db_column='ck_txtype')
    rates_split_amount = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'rmgt_t_rates_split'

class RmgtTRates(models.Model):
    ck_rate_code = models.CharField(max_length=10, primary_key=True)
    ck_rate_config_no = models.IntegerField(primary_key=True)
    fk_billing_type = models.ForeignKey(AcctTBillingType, db_column='fk_billing_type')
    rates_description = models.CharField(max_length=50, blank=True)
    rates_type = models.CharField(max_length=1, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    rate_config_description = models.CharField(max_length=50, blank=True)
    rates_service_time = models.IntegerField()
    rates_service_type = models.CharField(max_length=15)
    rates_linen_time = models.IntegerField()
    rates_linen_type = models.CharField(max_length=15)
    class Meta:
        db_table = u'rmgt_t_rates'

class RmgtTPropertyProfileAppl(models.Model):
    ck_rms_pid = models.ForeignKey(RmgtTPropertyProfile, unique=True, db_column='ck_rms_pid')
    ck_application_type = models.CharField(max_length=50, unique=True)
    contract_start_date = models.DateField(null=True, blank=True)
    contract_end_date = models.DateField(null=True, blank=True)
    contract_length = models.IntegerField(null=True, blank=True)
    ppa_letter1_sent = models.DateField(null=True, blank=True)
    ppa_letter1_received = models.DateField(null=True, blank=True)
    ppa_letter2_sent = models.DateField(null=True, blank=True)
    ppa_letter2_received = models.DateField(null=True, blank=True)
    ppa_letter3_sent = models.DateField(null=True, blank=True)
    ppa_letter3_received = models.DateField(null=True, blank=True)
    ppa_letter4_sent = models.DateField(null=True, blank=True)
    ppa_letter4_received = models.DateField(null=True, blank=True)
    ppa_letter5_sent = models.DateField(null=True, blank=True)
    ppa_letter5_received = models.DateField(null=True, blank=True)
    ppa_letter6_sent = models.DateField(null=True, blank=True)
    ppa_letter6_received = models.DateField(null=True, blank=True)
    ppa_letter7_sent = models.DateField(null=True, blank=True)
    ppa_letter7_received = models.DateField(null=True, blank=True)
    ppa_letter8_sent = models.DateField(null=True, blank=True)
    ppa_letter8_received = models.DateField(null=True, blank=True)
    ppa_letter9_sent = models.DateField(null=True, blank=True)
    ppa_letter9_received = models.DateField(null=True, blank=True)
    ppa_letter10_sent = models.DateField(null=True, blank=True)
    ppa_letter10_received = models.DateField(null=True, blank=True)
    rent_offered_amount = models.DecimalField(max_digits=18, decimal_places=5)
    rent_negotiated_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_final_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_amount1 = models.DecimalField(max_digits=18, decimal_places=5)
    rent_amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    notes_renewal_conditions = models.TextField(blank=True)
    notes_general = models.TextField(blank=True)
    renewal_conditions_status = models.CharField(max_length=50, blank=True)
    renewal_conditions_date = models.DateField(null=True, blank=True)
    renewal_conditions_met = models.CharField(max_length=4, blank=True)
    fk_group = models.ForeignKey(ApplTApplicationGroups, null=True, blank=True)
    group_preference_attribute1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute10 = models.CharField(max_length=50, blank=True)
    offered_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    inventory_1 = models.DateField(null=True, blank=True)
    inventory_2 = models.DateField(null=True, blank=True)
    inventory_3 = models.DateField(null=True, blank=True)
    inventory_notes1 = models.CharField(max_length=250, blank=True)
    inventory_notes2 = models.CharField(max_length=250, blank=True)
    inventory_notes3 = models.CharField(max_length=250, blank=True)
    inventory_url = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'rmgt_t_property_profile_appl'

class RmgtTPropertyProfile(models.Model):
    pk_rms_pid = models.IntegerField(unique=True)
    fk_section = models.ForeignKey(RmgtTFloorSections, unique=True)
    fk_rms_ll = models.ForeignKey(PpleTLandlordProfile)
    fk_property_type = models.ForeignKey(LUTPropertyTypes, null=True, db_column='fk_property_type', blank=True)
    style = models.CharField(max_length=50, blank=True)
    transportation = models.CharField(max_length=50, blank=True)
    distance_drive = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    distance_walk = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rental_options = models.CharField(max_length=50, blank=True)
    room_count = models.IntegerField(null=True, blank=True)
    bathroom_count = models.IntegerField(null=True, blank=True)
    payee = models.CharField(max_length=50, blank=True)
    length_of_contract = models.IntegerField(null=True, blank=True)
    initial_contract_date = models.DateField(null=True, blank=True)
    property_area = models.CharField(max_length=50, blank=True)
    number_tenants = models.IntegerField(null=True, blank=True)
    notes_students = models.TextField(blank=True)
    notes_staff = models.TextField(blank=True)
    assigned_to = models.CharField(max_length=50, blank=True)
    url = models.CharField(max_length=250, blank=True)
    property_id = models.CharField(max_length=50, blank=True)
    property_alias_id = models.CharField(max_length=50, blank=True)
    display_status = models.ForeignKey(LUTDisplayStatus, db_column='display_status')
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    parking_spaces = models.CharField(max_length=25, blank=True)
    parking = models.IntegerField()
    garage = models.IntegerField()
    garden = models.IntegerField()
    use_item1 = models.IntegerField()
    use_item2 = models.IntegerField()
    use_item3 = models.IntegerField()
    payee_id = models.CharField(max_length=25, blank=True)
    payee_h_address = models.IntegerField()
    bank_name = models.CharField(max_length=30, blank=True)
    bank_branch = models.CharField(max_length=30, blank=True)
    bank_account = models.CharField(max_length=25, blank=True)
    bs_roll_no = models.CharField(max_length=25, blank=True)
    sort_code = models.CharField(max_length=8, blank=True)
    payee_address1 = models.CharField(max_length=30, blank=True)
    payee_address2 = models.CharField(max_length=30, blank=True)
    payee_address3 = models.CharField(max_length=30, blank=True)
    payee_address4 = models.CharField(max_length=30, blank=True)
    payee_postcode = models.CharField(max_length=15, blank=True)
    payee_email = models.CharField(max_length=50, blank=True)
    url_floor_plan = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'rmgt_t_property_profile'

class RmgtTPropertyCertificates(models.Model):
    pk_certificate_id = models.IntegerField(unique=True)
    fk_rms_pid = models.ForeignKey(RmgtTPropertyProfile, db_column='fk_rms_pid')
    certificate_number = models.CharField(max_length=50, blank=True)
    certificate_name = models.CharField(max_length=250, blank=True)
    issuing_agency = models.CharField(max_length=50)
    last_inspected = models.DateField(null=True, blank=True)
    expiry_date = models.DateField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    url = models.CharField(max_length=250, blank=True)
    deleted = models.IntegerField()
    certificate_notes = models.CharField(max_length=250, blank=True)
    required = models.IntegerField(null=True, blank=True)
    fk_certificate_type = models.ForeignKey(LUTCertificateTypes, null=True, db_column='fk_certificate_type', blank=True)
    class Meta:
        db_table = u'rmgt_t_property_certificates'

class RmgtTPlanType(models.Model):
    pk_plan_type = models.CharField(max_length=10, unique=True)
    fk_rate_code = models.CharField(max_length=10)
    plan_type_description = models.CharField(max_length=30, blank=True)
    plan_type_type = models.CharField(max_length=1, blank=True)
    mp_start = models.DateField(null=True, blank=True)
    mp_end = models.DateField(null=True, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_plan_type'

class RmgtTPlanPerson(models.Model):
    ck_plan_type = models.ForeignKey(RmgtTPlanType, db_column='ck_plan_type')
    ck_rms = models.ForeignKey(PpleTPerson)
    ck_move_in_date = models.DateField()
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5)
    plan_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    fk_order = models.ForeignKey(AcctTOrders, unique=True)
    sk_plan_order_id = models.CharField(max_length=20, unique=True)
    fk_term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    class Meta:
        db_table = u'rmgt_t_plan_person'

class RmgtTPlanAlias(models.Model):
    pk_plan_alias = models.CharField(max_length=10, unique=True)
    alias_description = models.CharField(max_length=30)
    class Meta:
        db_table = u'rmgt_t_plan_alias'

class RmgtTPlanaliasBuilding(models.Model):
    ck_plan_alias = models.ForeignKey(RmgtTPlanAlias, unique=True, db_column='ck_plan_alias')
    ck_building = models.ForeignKey(RmgtTBuildings, unique=True)
    fk_plan_type = models.ForeignKey(RmgtTPlanType, db_column='fk_plan_type')
    class Meta:
        db_table = u'rmgt_t_planalias_building'

class RmgtTMaintenanceReq(models.Model):
    pk_request_no = models.IntegerField(unique=True)
    fk_bed_space = models.ForeignKey(RmgtTRooms, db_column='fk_bed_space')
    fk_maintenance_code = models.ForeignKey(LUTRmgtTRoomMaintCode, db_column='fk_maintenance_code')
    fk_referred_to = models.ForeignKey(RmgtTMaintenanceRefTo, null=True, blank=True)
    requested = models.DateField()
    processed = models.DateField(null=True, blank=True)
    request_comment = models.TextField(blank=True)
    maintenance_request_cost = models.DecimalField(max_digits=18, decimal_places=5)
    work_comment = models.TextField(blank=True)
    work_started = models.DateField(null=True, blank=True)
    response_time = models.IntegerField(null=True, blank=True)
    work_time = models.IntegerField(null=True, blank=True)
    requested_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'rmgt_t_maintenance_req'

class RmgtTMaintenanceRefTo(models.Model):
    pk_referred_to_id = models.CharField(max_length=6, unique=True)
    maintenance_referred_to_name = models.CharField(max_length=50)
    status = models.IntegerField()
    function_name = models.CharField(max_length=25)
    class Meta:
        db_table = u'rmgt_t_maintenance_ref_to'

class RmgtTMaintenancePerson(models.Model):
    fk_request_no = models.IntegerField()
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_order = models.ForeignKey(AcctTOrders)
    sk_maint_req_order_id = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'rmgt_t_maintenance_person'

class RmgtTLandlordRentCalc(models.Model):
    pk_payment_id = models.IntegerField(unique=True)
    ck_rms_pid = models.ForeignKey(RmgtTPropertyProfileAppl, unique=True, db_column='ck_rms_pid')
    ck_application_type = models.ForeignKey(RmgtTPropertyProfileAppl, unique=True, db_column='ck_application_type')
    ck_term = models.ForeignKey(RmgtTTermDates, unique=True)
    schedule_date = models.DateField(null=True, blank=True)
    payment_date = models.DateField(null=True, blank=True)
    fk_posting_id = models.IntegerField(null=True, blank=True)
    fk_ll_rms = models.ForeignKey(PpleTLandlordProfile)
    fiscal_year = models.CharField(max_length=50, blank=True)
    amount1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_posting_id1 = models.IntegerField(null=True, blank=True)
    fk_posting_id2 = models.IntegerField(null=True, blank=True)
    fk_posting_id3 = models.IntegerField(null=True, blank=True)
    fk_posting_id4 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'rmgt_t_landlord_rent_calc'

class RmgtTInventory(models.Model):
    pk_inventory_code = models.CharField(max_length=10, primary_key=True)
    inventory_item = models.CharField(max_length=50)
    inventory_comment = models.CharField(max_length=50, blank=True)
    room_inventory_cost = models.DecimalField(max_digits=18, decimal_places=5)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_inventory'

class RmgtTInspections(models.Model):
    pk_inspection_id = models.IntegerField(unique=True)
    fk_rms_pid = models.ForeignKey(RmgtTPropertyProfile, db_column='fk_rms_pid')
    application_type = models.CharField(max_length=50, blank=True)
    fk_inspection_category = models.ForeignKey(LUTInspectionCategories, db_column='fk_inspection_category')
    fk_inspector = models.ForeignKey(LUTInspector, db_column='fk_inspector')
    inspection_date = models.DateField(null=True, blank=True)
    inspection_time = models.CharField(max_length=12, blank=True)
    property_notes = models.TextField(blank=True)
    student_notes = models.TextField(blank=True)
    landlord_notes = models.TextField(blank=True)
    infraction_notes = models.TextField(blank=True)
    structural_notes = models.TextField(blank=True)
    follow_up_date = models.DateField(null=True, blank=True)
    follow_up_fee = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    follow_up_complete = models.IntegerField()
    ll_letter1_sent = models.DateField(null=True, blank=True)
    ll_letter2_sent = models.DateField(null=True, blank=True)
    ll_letter3_sent = models.DateField(null=True, blank=True)
    ll_letter4_sent = models.DateField(null=True, blank=True)
    ll_letter5_sent = models.DateField(null=True, blank=True)
    gr_letter1_sent = models.DateField(null=True, blank=True)
    gr_letter2_sent = models.DateField(null=True, blank=True)
    gr_letter3_sent = models.DateField(null=True, blank=True)
    gr_letter4_sent = models.DateField(null=True, blank=True)
    gr_letter5_sent = models.DateField(null=True, blank=True)
    url = models.CharField(max_length=250, blank=True)
    deleted = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_inspections'

class RmgtTFloorSections(models.Model):
    pk_section_id = models.CharField(max_length=8, unique=True)
    fk_floor = models.ForeignKey(RmgtTFloors)
    floor_sections_name = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_floor_sections'

class RmgtTFloors(models.Model):
    pk_floor_id = models.CharField(max_length=8, unique=True)
    fk_building = models.ForeignKey(RmgtTBuildings)
    floors_name = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_floors'

class RmgtTCommunity(models.Model):
    pk_community = models.CharField(max_length=25, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_community'

class RmgtTBuildings(models.Model):
    pk_building_id = models.CharField(max_length=8, unique=True)
    fk_community = models.ForeignKey(RmgtTCommunity, db_column='fk_community')
    buildings_name = models.CharField(max_length=30)
    buildings_address_1 = models.CharField(max_length=50, blank=True)
    buildings_address_1b = models.CharField(max_length=50, blank=True)
    buildings_address_2 = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    buildings_state = models.CharField(max_length=15, blank=True)
    status = models.IntegerField()
    ud_hyperlink1 = models.CharField(max_length=200, blank=True)
    ud_hyperlink2 = models.CharField(max_length=200, blank=True)
    ud_hyperlink3 = models.CharField(max_length=200, blank=True)
    ud_hyperlink4 = models.CharField(max_length=200, blank=True)
    ud_hyperlink5 = models.CharField(max_length=200, blank=True)
    ud_hyperlink6 = models.CharField(max_length=200, blank=True)
    ud_hyperlink7 = models.CharField(max_length=200, blank=True)
    locking_system_buildingid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'rmgt_t_buildings'

class RmgtTAllocationCriteria(models.Model):
    pk_criteria_year = models.BigIntegerField(unique=True)
    criteria_1 = models.CharField(max_length=40, blank=True)
    criteria_2 = models.CharField(max_length=40, blank=True)
    criteria_3 = models.CharField(max_length=40, blank=True)
    criteria_4 = models.CharField(max_length=40, blank=True)
    criteria_5 = models.CharField(max_length=40, blank=True)
    allocation_method = models.IntegerField()
    booking_length = models.IntegerField()
    criteria_1_order = models.IntegerField()
    criteria_2_order = models.IntegerField()
    criteria_3_order = models.IntegerField()
    criteria_4_order = models.IntegerField()
    criteria_5_order = models.IntegerField()
    eligibility_criteria_drop = models.IntegerField()
    preference_order = models.CharField(max_length=15, blank=True)
    criteria_1_table = models.CharField(max_length=50, blank=True)
    criteria_2_table = models.CharField(max_length=50, blank=True)
    criteria_3_table = models.CharField(max_length=50, blank=True)
    criteria_4_table = models.CharField(max_length=50, blank=True)
    criteria_5_table = models.CharField(max_length=50, blank=True)
    room_sort_1 = models.CharField(max_length=250, blank=True)
    room_sort_2 = models.CharField(max_length=250, blank=True)
    room_sort_3 = models.CharField(max_length=250, blank=True)
    room_sort_4 = models.CharField(max_length=250, blank=True)
    if_not_compatible = models.CharField(max_length=30, blank=True)
    if_not_eligible = models.CharField(max_length=30, blank=True)
    roommate_requests = models.CharField(max_length=12)
    room_sort_5 = models.CharField(max_length=250, blank=True)
    room_sort_6 = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'rmgt_t_allocation_criteria'

class PpleTUserDefinedPr(models.Model):
    pk_rms_id = models.IntegerField()
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'pple_t_user_defined_pr'

class PpleTUserDefinedBkp(models.Model):
    pk_rms_id = models.IntegerField()
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'pple_t_user_defined_bkp'

class PpleTUserDefined(models.Model):
    pk_rms = models.ForeignKey(PpleTPerson, unique=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'pple_t_user_defined'

class PpleTStudentProfilePr(models.Model):
    pk_rms_id = models.IntegerField()
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20)
    fk_student_type = models.CharField(max_length=5)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30)
    fk_major = models.CharField(max_length=30)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25)
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10)
    fk_location = models.CharField(max_length=10)
    fk_institution = models.CharField(max_length=15)
    fk_catering = models.CharField(max_length=5)
    fk_ethnicity = models.CharField(max_length=25)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'pple_t_student_profile_pr'

class PpleTStudentProfileBkp(models.Model):
    pk_rms_id = models.IntegerField()
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20)
    fk_student_type = models.CharField(max_length=5)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30)
    fk_major = models.CharField(max_length=30)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25)
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10)
    fk_location = models.CharField(max_length=10)
    fk_institution = models.CharField(max_length=15)
    fk_catering = models.CharField(max_length=5)
    fk_ethnicity = models.CharField(max_length=25)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'pple_t_student_profile_bkp'

class PpleTStudentProfile(models.Model):
    pk_rms = models.ForeignKey(PpleTPerson, unique=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.ForeignKey(LUTReligion, db_column='fk_religion')
    fk_student_type = models.ForeignKey(LUTStudentType, db_column='fk_student_type')
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.ForeignKey(LUTDegree, db_column='fk_school')
    fk_major = models.ForeignKey(LUTMajors, db_column='fk_major')
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.ForeignKey(LUTNationality, db_column='fk_nationality')
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.ForeignKey(LUTSchoolCategory, db_column='fk_school_category')
    fk_location = models.ForeignKey(LUTLocation, db_column='fk_location')
    fk_institution = models.ForeignKey(LUTInstitution, db_column='fk_institution')
    fk_catering = models.ForeignKey(LUTDiet, db_column='fk_catering')
    fk_ethnicity = models.ForeignKey(LUTEthnicity, db_column='fk_ethnicity')
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.ForeignKey(LUTUniversityStatus, db_column='nonstud_university_status')
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'pple_t_student_profile'

class PpleTPersonPr(models.Model):
    pk_rms_id = models.IntegerField()
    fk_marital_status = models.CharField(max_length=25)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    mailing = models.IntegerField()
    fk_security_id = models.IntegerField(null=True, blank=True)
    stud_user_name = models.CharField(max_length=250, blank=True)
    parent_user_name = models.CharField(max_length=250, blank=True)
    stud_screen_name = models.CharField(max_length=250, blank=True)
    parent_screen_name = models.CharField(max_length=250, blank=True)
    stud_pinnumber = models.CharField(max_length=250, blank=True)
    parent_pinnumber = models.CharField(max_length=250, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_person_pr'

class PpleTPersonBkp(models.Model):
    pk_rms_id = models.IntegerField()
    fk_marital_status = models.CharField(max_length=25)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    mailing = models.IntegerField()
    fk_security_id = models.IntegerField(null=True, blank=True)
    stud_user_name = models.CharField(max_length=250, blank=True)
    parent_user_name = models.CharField(max_length=250, blank=True)
    stud_screen_name = models.CharField(max_length=250, blank=True)
    parent_screen_name = models.CharField(max_length=250, blank=True)
    stud_pinnumber = models.CharField(max_length=250, blank=True)
    parent_pinnumber = models.CharField(max_length=250, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_person_bkp'

class PpleTPerson(models.Model):
    pk_rms_id = models.IntegerField(unique=True)
    fk_marital_status = models.ForeignKey(LUTMaritalStatus, db_column='fk_marital_status')
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField()
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    mailing = models.IntegerField()
    fk_security_id = models.IntegerField(null=True, blank=True)
    stud_user_name = models.CharField(max_length=250, blank=True)
    parent_user_name = models.CharField(max_length=250, blank=True)
    stud_screen_name = models.CharField(max_length=250, blank=True)
    parent_screen_name = models.CharField(max_length=250, blank=True)
    stud_pinnumber = models.CharField(max_length=250, blank=True)
    parent_pinnumber = models.CharField(max_length=250, blank=True)
    fk_category = models.ForeignKey(SwCategory, null=True, blank=True)
    class Meta:
        db_table = u'pple_t_person'

class PpleTParking(models.Model):
    fk_rms = models.ForeignKey(PpleTPerson)
    pk_vehicle_id = models.IntegerField(unique=True)
    make = models.CharField(max_length=50, blank=True)
    model = models.CharField(max_length=50, blank=True)
    parking_year = models.CharField(max_length=50, blank=True)
    color = models.CharField(max_length=50, blank=True)
    license_plate = models.CharField(max_length=50, blank=True)
    permit_number = models.CharField(max_length=20, blank=True)
    lot_number = models.CharField(max_length=50, blank=True)
    permit_expiration_date = models.CharField(max_length=50, blank=True)
    registered_owner = models.CharField(max_length=50, blank=True)
    parking_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'pple_t_parking'

class PpleTPackageNotifications(models.Model):
    fk_package_number = models.IntegerField()
    fk_operator_that_notified = models.IntegerField()
    fk_rms_id = models.IntegerField()
    notification_sent_date = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'pple_t_package_notifications'

class PpleTPackages(models.Model):
    pk_package_number = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField()
    receive_date = models.DateField(null=True, blank=True)
    postal_carrier_code = models.CharField(max_length=50, blank=True)
    major_code = models.CharField(max_length=50, blank=True)
    detail_code = models.CharField(max_length=50, blank=True)
    number_of_notices_sent = models.IntegerField(null=True, blank=True)
    distributed_date = models.DateField(null=True, blank=True)
    tracking_number = models.CharField(max_length=50, blank=True)
    fk_receiving_operator_code = models.IntegerField()
    fk_distributing_operator_code = models.IntegerField()
    class Meta:
        db_table = u'pple_t_packages'

class PpleTOccupants(models.Model):
    fk_rms = models.ForeignKey(PpleTPerson)
    pk_occupant_id = models.IntegerField(unique=True)
    fk_relationship = models.ForeignKey(LUTOccupants, null=True, db_column='fk_relationship', blank=True)
    occupants_first_name = models.CharField(max_length=25, blank=True)
    occupants_last_name = models.CharField(max_length=25, blank=True)
    occupants_middle_name = models.CharField(max_length=25, blank=True)
    occupants_birthdate = models.DateField(null=True, blank=True)
    occupants_gender = models.CharField(max_length=50, blank=True)
    occupants_student_number = models.CharField(max_length=20, blank=True)
    occupants_info1 = models.CharField(max_length=50, blank=True)
    occupants_info2 = models.CharField(max_length=50, blank=True)
    occupants_notes = models.TextField(blank=True)
    occupants_national_id = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'pple_t_occupants'

class PpleTLandlordProfile(models.Model):
    pk_rms = models.ForeignKey(PpleTPerson, unique=True)
    ix_landlord_id = models.CharField(max_length=25, blank=True)
    landlord_alias_id = models.CharField(max_length=25, blank=True)
    business_name = models.CharField(max_length=50, blank=True)
    payee = models.CharField(max_length=50, blank=True)
    agent_used = models.IntegerField()
    owner_first_name = models.CharField(max_length=25, blank=True)
    owner_middle_name = models.CharField(max_length=25, blank=True)
    owner_last_name = models.CharField(max_length=25, blank=True)
    mailing_name = models.CharField(max_length=100, blank=True)
    initial_contact = models.DateField(null=True, blank=True)
    contract_date1 = models.DateField(null=True, blank=True)
    contract_date2 = models.DateField(null=True, blank=True)
    contract_date3 = models.DateField(null=True, blank=True)
    contract_date4 = models.DateField(null=True, blank=True)
    contract_date5 = models.DateField(null=True, blank=True)
    contract_date_notes1 = models.CharField(max_length=250, blank=True)
    contract_date_notes2 = models.CharField(max_length=250, blank=True)
    contract_date_notes3 = models.CharField(max_length=250, blank=True)
    contract_date_notes4 = models.CharField(max_length=250, blank=True)
    contract_date_notes5 = models.CharField(max_length=250, blank=True)
    contract_date_yes_no1 = models.IntegerField()
    contract_date_yes_no2 = models.IntegerField()
    contract_date_yes_no3 = models.IntegerField()
    contract_date_yes_no4 = models.IntegerField()
    contract_date_yes_no5 = models.IntegerField()
    item_requested1 = models.DateField(null=True, blank=True)
    item_requested2 = models.DateField(null=True, blank=True)
    item_requested3 = models.DateField(null=True, blank=True)
    item_sent1 = models.DateField(null=True, blank=True)
    item_sent2 = models.DateField(null=True, blank=True)
    item_sent3 = models.DateField(null=True, blank=True)
    pref_contact_method_1 = models.CharField(max_length=50, blank=True)
    pref_contact_method_2 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    userdef_lookup1 = models.CharField(max_length=25, blank=True)
    userdef_lookup2 = models.CharField(max_length=25, blank=True)
    userdef_lookup3 = models.CharField(max_length=25, blank=True)
    userdef_lookup4 = models.CharField(max_length=25, blank=True)
    userdef_lookup5 = models.CharField(max_length=25, blank=True)
    userdef_lookup6 = models.CharField(max_length=25, blank=True)
    fk_community = models.ForeignKey(RmgtTCommunity, db_column='fk_community')
    ll_letter1_sent = models.DateField(null=True, blank=True)
    ll_letter2_sent = models.DateField(null=True, blank=True)
    ll_letter3_sent = models.DateField(null=True, blank=True)
    ll_letter4_sent = models.DateField(null=True, blank=True)
    ll_letter5_sent = models.DateField(null=True, blank=True)
    ll_letter6_sent = models.DateField(null=True, blank=True)
    ll_letter7_sent = models.DateField(null=True, blank=True)
    ll_letter8_sent = models.DateField(null=True, blank=True)
    ll_letter9_sent = models.DateField(null=True, blank=True)
    ll_letter10_sent = models.DateField(null=True, blank=True)
    ll_letter1_received = models.DateField(null=True, blank=True)
    ll_letter2_received = models.DateField(null=True, blank=True)
    ll_letter3_received = models.DateField(null=True, blank=True)
    ll_letter4_received = models.DateField(null=True, blank=True)
    ll_letter5_received = models.DateField(null=True, blank=True)
    ll_letter6_received = models.DateField(null=True, blank=True)
    ll_letter7_received = models.DateField(null=True, blank=True)
    ll_letter8_received = models.DateField(null=True, blank=True)
    ll_letter9_received = models.DateField(null=True, blank=True)
    ll_letter10_received = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_landlord_profile'

class PpleTCreditCardInformation(models.Model):
    ck_rms = models.ForeignKey(PpleTPerson, unique=True)
    ck_card_choice_no = models.CharField(max_length=10, unique=True)
    name_on_card = models.CharField(max_length=50)
    card_type = models.CharField(max_length=50)
    card_number = models.CharField(max_length=50)
    exp_date = models.CharField(max_length=5)
    billing_address1 = models.CharField(max_length=50)
    billing_address1b = models.CharField(max_length=50, blank=True)
    billing_address2 = models.CharField(max_length=50)
    fk_billing_state = models.CharField(max_length=8)
    billing_postcode = models.CharField(max_length=15)
    billing_address3 = models.CharField(max_length=50)
    class Meta:
        db_table = u'pple_t_credit_card_information'

class PpleTContactProfile(models.Model):
    pk_contact_id = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    title = models.CharField(max_length=5, blank=True)
    contact_first_name = models.CharField(max_length=25)
    contact_last_name = models.CharField(max_length=25)
    contact_middle_name = models.CharField(max_length=25, blank=True)
    cell_phone = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'pple_t_contact_profile'

class PpleTApplicationPr(models.Model):
    pk_application_no = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=4)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField()
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'pple_t_application_pr'

class PpleTApplicationBkp(models.Model):
    pk_application_no = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=4)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField()
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'pple_t_application_bkp'

class PpleTApplication(models.Model):
    pk_application_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson, null=True, blank=True)
    application_type = models.CharField(max_length=50, unique=True, blank=True)
    application_person_type = models.CharField(max_length=4)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField()
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.ForeignKey(LUTPaymentPlan, null=True, db_column='fk_pref_payment_plan', blank=True)
    fk_pref_meal_plan = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan', blank=True)
    cancel_code = models.ForeignKey(LUTCancelCode, null=True, db_column='cancel_code', blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_2', blank=True)
    fk_pref_meal_plan_3 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_3', blank=True)
    fk_pref_meal_plan_4 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_4', blank=True)
    fk_pref_meal_plan_5 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_5', blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    ud_letter_1_sent = models.DateField(null=True, blank=True)
    ud_letter_2_sent = models.DateField(null=True, blank=True)
    ud_letter_3_sent = models.DateField(null=True, blank=True)
    ud_letter_4_sent = models.DateField(null=True, blank=True)
    ud_letter_5_sent = models.DateField(null=True, blank=True)
    ud_letter_6_sent = models.DateField(null=True, blank=True)
    ud_letter_7_sent = models.DateField(null=True, blank=True)
    ud_letter_8_sent = models.DateField(null=True, blank=True)
    ud_letter_9_sent = models.DateField(null=True, blank=True)
    ud_letter_10_sent = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_application'

class PpleTAddressPr(models.Model):
    ck_rms_id = models.IntegerField()
    ck_address_type = models.CharField(max_length=15)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_address_pr'

class PpleTAddressBkp(models.Model):
    ck_rms_id = models.IntegerField()
    ck_address_type = models.CharField(max_length=15)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_address_bkp'

class PpleTAddress(models.Model):
    ck_rms = models.ForeignKey(PpleTPerson, unique=True)
    ck_address_type = models.CharField(max_length=15, unique=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.ForeignKey(LUTState, db_column='fk_state')
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'pple_t_address'

class PpleTAcademicResultsGpa(models.Model):
    ck_rms = models.ForeignKey(PpleTPerson)
    ck_year = models.IntegerField(unique=True)
    ck_semester = models.CharField(max_length=50, unique=True)
    gpa_semester = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'pple_t_academic_results_gpa'

class PpleTAcademicResults(models.Model):
    ck_rms = models.ForeignKey(PpleTPerson)
    ck_subject_code = models.ForeignKey(LUTAcademicSubjects, unique=True, db_column='ck_subject_code')
    ck_academic_results_year = models.IntegerField(unique=True)
    ck_semester = models.CharField(max_length=50, unique=True)
    result = models.CharField(max_length=12, blank=True)
    class Meta:
        db_table = u'pple_t_academic_results'

class MmgeTLetterPerson(models.Model):
    pk_generation_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_letter = models.ForeignKey(MmgeTLetterList)
    date_generated = models.DateField()
    time_generated = models.CharField(max_length=11)
    delivery_method = models.CharField(max_length=15)
    user_id = models.CharField(max_length=50)
    application_no = models.IntegerField()
    pdf_name = models.CharField(max_length=100)
    reprint_generation_no = models.IntegerField()
    class Meta:
        db_table = u'mmge_t_letter_person'

class MmgeTLetterList(models.Model):
    pk_letter_id = models.IntegerField(unique=True)
    letter_name = models.CharField(max_length=50)
    pdf_template_name = models.CharField(max_length=50)
    sql_statement = models.TextField(blank=True)
    letter_type = models.CharField(max_length=25)
    application_type = models.CharField(max_length=50, blank=True)
    auto_email_function = models.CharField(max_length=50, blank=True)
    preview_required = models.IntegerField()
    label_1 = models.CharField(max_length=50, blank=True)
    label_2 = models.CharField(max_length=50, blank=True)
    label_3 = models.CharField(max_length=50, blank=True)
    active = models.IntegerField()
    date_created = models.DateField()
    created_by = models.CharField(max_length=50)
    last_printed_date = models.DateField(null=True, blank=True)
    last_emailed_date = models.DateField(null=True, blank=True)
    email_subject = models.CharField(max_length=250, blank=True)
    rtf_template_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'mmge_t_letter_list'

class LUTWebOtherPayments(models.Model):
    option_code = models.IntegerField(unique=True)
    option_description = models.CharField(max_length=50, blank=True)
    fk_txtype = models.CharField(max_length=10)
    default_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    application_period = models.CharField(max_length=50, blank=True)
    action_type = models.CharField(max_length=20, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_web_other_payments'

class LUTWaitlist(models.Model):
    pk_waitlist_id = models.IntegerField(unique=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_waitlist'

class LUTViolationTypes(models.Model):
    pk_violation_type_id = models.IntegerField(unique=True)
    violation_type_code = models.CharField(max_length=30, unique=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_violation_types'

class LUTUserdefLookup6(models.Model):
    pk_userdef_lookup6_id = models.CharField(max_length=10, unique=True)
    lookup6_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup6'

class LUTUserdefLookup5(models.Model):
    pk_userdef_lookup5_id = models.CharField(max_length=10, unique=True)
    lookup5_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup5'

class LUTUserdefLookup4(models.Model):
    pk_userdef_lookup4_id = models.CharField(max_length=10, unique=True)
    lookup4_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup4'

class LUTUserdefLookup3(models.Model):
    pk_userdef_lookup3_id = models.CharField(max_length=10, unique=True)
    lookup3_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup3'

class LUTUserdefLookup2(models.Model):
    pk_userdef_lookup2_id = models.CharField(max_length=10, unique=True)
    lookup2_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup2'

class LUTUserdefLookup1(models.Model):
    pk_userdef_lookup1_id = models.CharField(max_length=10, unique=True)
    lookup1_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_userdef_lookup1'

class LUTUniversityStatus(models.Model):
    pk_university_status = models.CharField(max_length=50, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_university_status'

class LUTStudentType(models.Model):
    pk_type_code = models.CharField(max_length=5, unique=True)
    student_type_description = models.CharField(max_length=30, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_student_type'

class LUTState(models.Model):
    pk_state = models.CharField(max_length=8, unique=True)
    state_description = models.CharField(max_length=30, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_state'

class LUTSchoolCategory(models.Model):
    pk_school_category = models.CharField(max_length=10, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_school_category'

class LUTSanctions(models.Model):
    pk_sanction_id = models.IntegerField(unique=True)
    sanction_code = models.CharField(max_length=30, unique=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_sanctions'

class LUTRmgtTUse2(models.Model):
    pk_use_2 = models.CharField(max_length=20, unique=True)
    description = models.CharField(max_length=20, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_rmgt_t_use_2'

class LUTRmgtTUse1(models.Model):
    pk_use_1 = models.CharField(max_length=20, unique=True)
    description = models.CharField(max_length=20, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_rmgt_t_use_1'

class LUTRmgtTRoomMaintCode(models.Model):
    pk_maintenance_code = models.CharField(max_length=6, unique=True)
    item = models.CharField(max_length=20)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_rmgt_t_room_maint_code'

class LUTReligion(models.Model):
    pk_religion = models.CharField(max_length=20, primary_key=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_religion'

class LUTPropertyTypes(models.Model):
    pk_property_type = models.CharField(max_length=10, unique=True)
    property_type_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_property_types'

class LUTPpUserdefLookup6(models.Model):
    pk_userdef_lookup6_id = models.IntegerField(unique=True)
    lookup6_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup6'

class LUTPpUserdefLookup5(models.Model):
    pk_userdef_lookup5_id = models.IntegerField(unique=True)
    lookup5_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup5'

class LUTPpUserdefLookup4(models.Model):
    pk_userdef_lookup4_id = models.IntegerField(unique=True)
    lookup4_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup4'

class LUTPpUserdefLookup3(models.Model):
    pk_userdef_lookup3_id = models.IntegerField(unique=True)
    lookup3_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup3'

class LUTPpUserdefLookup2(models.Model):
    pk_userdef_lookup2_id = models.IntegerField(unique=True)
    lookup2_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup2'

class LUTPpUserdefLookup1(models.Model):
    pk_userdef_lookup1_id = models.IntegerField(unique=True)
    lookup1_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_pp_userdef_lookup1'

class LUTPoints(models.Model):
    pk_point_id = models.IntegerField(unique=True)
    description = models.CharField(max_length=50, unique=True)
    point_value = models.IntegerField()
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_points'

class LUTPaymentPlan(models.Model):
    pk_payment_plan = models.CharField(max_length=10, unique=True)
    payment_plan_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_payment_plan'

class LUTOutcomes(models.Model):
    pk_outcome_id = models.IntegerField(unique=True)
    outcome_code = models.CharField(max_length=10, unique=True)
    outcome_description = models.CharField(max_length=50)
    infraction_notice_outcome = models.IntegerField()
    infraction_notice_order = models.IntegerField()
    meeting_notice_outcome = models.IntegerField()
    meeting_notice_order = models.IntegerField()
    meeting_record_outcome = models.IntegerField()
    meeting_record_order = models.IntegerField()
    incident_outcome = models.IntegerField()
    incident_record_order = models.IntegerField()
    incident_person_outcome = models.IntegerField()
    incident_person_record_order = models.IntegerField()
    violation_outcome = models.IntegerField()
    criminal_outcome = models.IntegerField()
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_outcomes'

class LUTOnCallTypes(models.Model):
    pk_on_call_type_id = models.IntegerField(unique=True)
    on_call_type_code = models.CharField(max_length=30)
    on_call_type_description = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_on_call_types'

class LUTOncallType(models.Model):
    pk_oncall_type_id = models.IntegerField(unique=True)
    oncall_type_code = models.CharField(max_length=30, blank=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_oncall_type'

class LUTOccurArea(models.Model):
    pk_area_id = models.IntegerField(unique=True)
    area_code = models.CharField(max_length=30, unique=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_occur_area'

class LUTOccupants(models.Model):
    pk_relationship = models.CharField(max_length=50, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_occupants'

class LUTNationality(models.Model):
    pk_nationality = models.CharField(max_length=25, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_nationality'

class LUTMeetingTypes(models.Model):
    pk_meeting_type_id = models.IntegerField(unique=True)
    meeting_type_code = models.CharField(max_length=30, unique=True)
    meeting_type_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_meeting_types'

class LUTMeetingLocations(models.Model):
    pk_meeting_location_id = models.IntegerField(unique=True)
    meeting_location_code = models.CharField(max_length=30)
    description = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_meeting_locations'

class LUTMaritalStatus(models.Model):
    pk_marital_status = models.CharField(max_length=25, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_marital_status'

class LUTMajors(models.Model):
    pk_major = models.CharField(max_length=30, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_majors'

class LUTLocation(models.Model):
    pk_location = models.CharField(max_length=10, primary_key=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_location'

class LUTLlUserdefLookup6(models.Model):
    pk_userdef_lookup6_id = models.IntegerField(unique=True)
    lookup6_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup6'

class LUTLlUserdefLookup5(models.Model):
    pk_userdef_lookup5_id = models.IntegerField(unique=True)
    lookup5_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup5'

class LUTLlUserdefLookup4(models.Model):
    pk_userdef_lookup4_id = models.IntegerField(unique=True)
    lookup4_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup4'

class LUTLlUserdefLookup3(models.Model):
    pk_userdef_lookup3_id = models.IntegerField(unique=True)
    lookup3_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup3'

class LUTLlUserdefLookup2(models.Model):
    pk_userdef_lookup2_id = models.IntegerField(unique=True)
    lookup2_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup2'

class LUTLlUserdefLookup1(models.Model):
    pk_userdef_lookup1_id = models.IntegerField(unique=True)
    lookup1_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ll_userdef_lookup1'

class LUTJudUserdefLookup6(models.Model):
    pk_userdef_lookup6_id = models.IntegerField(primary_key=True)
    lookup6_code = models.CharField(max_length=30, unique=True)
    lookup6_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup6'

class LUTJudUserdefLookup5(models.Model):
    pk_userdef_lookup5_id = models.IntegerField(primary_key=True)
    lookup5_code = models.CharField(max_length=30, unique=True)
    lookup5_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup5'

class LUTJudUserdefLookup4(models.Model):
    pk_userdef_lookup4_id = models.IntegerField(primary_key=True)
    lookup4_code = models.CharField(max_length=30, unique=True)
    lookup4_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup4'

class LUTJudUserdefLookup3(models.Model):
    pk_userdef_lookup3_id = models.IntegerField(primary_key=True)
    lookup3_code = models.CharField(max_length=30, unique=True)
    lookup3_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup3'

class LUTJudUserdefLookup2(models.Model):
    pk_userdef_lookup2_id = models.IntegerField(primary_key=True)
    lookup2_code = models.CharField(max_length=30, unique=True)
    lookup2_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup2'

class LUTJudUserdefLookup1(models.Model):
    pk_userdef_lookup1_id = models.IntegerField(primary_key=True)
    lookup1_code = models.CharField(max_length=30, unique=True)
    lookup1_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_userdef_lookup1'

class LUTJudFlags(models.Model):
    pk_jud_flag_id = models.IntegerField(unique=True)
    jud_flag_code = models.CharField(max_length=5, unique=True)
    jud_flag_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_jud_flags'

class LUTItemType(models.Model):
    pk_item_type_id = models.IntegerField(unique=True)
    item_type_code = models.CharField(max_length=50)
    item_type_description = models.CharField(max_length=250)
    status = models.IntegerField()
    shareable = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_item_type'

class LUTInventoryStatus(models.Model):
    pk_inventory_status = models.CharField(max_length=20, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_inventory_status'

class LUTInstitution(models.Model):
    pk_institution = models.CharField(max_length=15, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_institution'

class LUTInspector(models.Model):
    pk_inspector = models.CharField(max_length=50, unique=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_inspector'

class LUTInspectionCategories(models.Model):
    pk_inspection_category = models.CharField(max_length=50, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_inspection_categories'

class LUTIncidentTypes(models.Model):
    pk_incident_type_id = models.IntegerField(unique=True)
    incident_type_code = models.CharField(max_length=30, unique=True)
    incident_type_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_incident_types'

class LUTIncidentLocation(models.Model):
    pk_inc_location_code = models.CharField(max_length=8, unique=True)
    inc_location_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_incident_location'

class LUTIncidentAction(models.Model):
    pk_incident_action_id = models.IntegerField(unique=True)
    action_description = models.CharField(max_length=250, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_incident_action'

class LUTIncidentsClearycodes(models.Model):
    pk_inc_cleary_code = models.CharField(max_length=30, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_incidents_clearycodes'

class LUTIncidents(models.Model):
    pk_inc_type_code = models.CharField(max_length=8, unique=True)
    inc_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_incidents'

class LUTGroupPrefAttrValues(models.Model):
    pk_attribute_id = models.IntegerField(unique=True)
    fk_group_preference_attribute = models.ForeignKey(LUTGroupPrefAttributes, db_column='fk_group_preference_attribute')
    group_pref_attribute_value = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_group_pref_attr_values'

class LUTGroupPrefAttributes(models.Model):
    pk_group_preference_attribute = models.IntegerField(unique=True)
    group_pref_attribute_desc = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_group_pref_attributes'

class LUTFont(models.Model):
    font_name = models.CharField(max_length=30, unique=True)
    class Meta:
        db_table = u'l_u_t_font'

class LUTFlags(models.Model):
    pk_flag_code = models.CharField(max_length=5, unique=True)
    flag_code_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_flags'

class LUTFacilityAttributes(models.Model):
    pk_attribute_id = models.IntegerField(unique=True)
    attribute_code = models.CharField(max_length=10)
    attribute_description = models.CharField(max_length=250)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_facility_attributes'

class LUTEthnicity(models.Model):
    pk_ethnicity = models.CharField(max_length=25, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_ethnicity'

class LUTDisplayStatus(models.Model):
    pk_display_status_code = models.CharField(max_length=5, primary_key=True)
    display_status_description = models.CharField(max_length=30, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_display_status'

class LUTDiet(models.Model):
    pk_catering = models.CharField(max_length=5, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_diet'

class LUTDegree(models.Model):
    pk_course = models.CharField(max_length=30, unique=True)
    course_code = models.CharField(max_length=20, blank=True)
    course_rating = models.CharField(max_length=20, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_degree'

class LUTCriminalOffenses(models.Model):
    pk_criminal_offense_id = models.IntegerField(unique=True)
    criminal_offense_code = models.CharField(max_length=30, unique=True)
    description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_criminal_offenses'

class LUTCreditCardType(models.Model):
    pk_ccard_type_code = models.CharField(max_length=5, unique=True)
    ccard_type_name = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_credit_card_type'

class LUTConfUserdefLookup6(models.Model):
    pk_userdef_lookup6_id = models.IntegerField(unique=True)
    lookup6_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup6'

class LUTConfUserdefLookup5(models.Model):
    pk_userdef_lookup5_id = models.IntegerField(unique=True)
    lookup5_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup5'

class LUTConfUserdefLookup4(models.Model):
    pk_userdef_lookup4_id = models.IntegerField(unique=True)
    lookup4_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup4'

class LUTConfUserdefLookup3(models.Model):
    pk_userdef_lookup3_id = models.IntegerField(unique=True)
    lookup3_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup3'

class LUTConfUserdefLookup2(models.Model):
    pk_userdef_lookup2_id = models.IntegerField(unique=True)
    lookup2_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup2'

class LUTConfUserdefLookup1(models.Model):
    pk_userdef_lookup1_id = models.IntegerField(unique=True)
    lookup1_description = models.CharField(max_length=25, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conf_userdef_lookup1'

class LUTConferenceType(models.Model):
    conference_type = models.CharField(max_length=20, unique=True)
    priority = models.IntegerField(null=True, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_conference_type'

class LUTColor(models.Model):
    pk_color_id = models.IntegerField(unique=True)
    color_name = models.CharField(max_length=30, unique=True)
    rgb_code = models.CharField(max_length=20)
    active = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_color'

class LUTCleryActs(models.Model):
    pk_cleryact_id = models.IntegerField(unique=True)
    cleryact_code = models.CharField(max_length=30, unique=True)
    cleryact_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_clery_acts'

class LUTCertificateTypes(models.Model):
    pk_certificate_type = models.CharField(max_length=2, unique=True)
    certificate_type_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_certificate_types'

class LUTCancelCode(models.Model):
    pk_cancel_code = models.CharField(max_length=10, unique=True)
    cancel_code_description = models.CharField(max_length=12, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_cancel_code'

class LUTAppGroupTypes(models.Model):
    pk_group_type = models.CharField(max_length=50, unique=True)
    status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'l_u_t_app_group_types'

class LUTAcademicSubjects(models.Model):
    pk_subject_code = models.CharField(max_length=10, unique=True)
    subject_description = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'l_u_t_academic_subjects'

class LogTStudent(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    log_date = models.DateField()
    log_user = models.CharField(max_length=50, blank=True)
    detail = models.CharField(max_length=250)
    entry_type = models.CharField(max_length=15)
    procedure_name = models.CharField(max_length=50)
    line_number = models.IntegerField()
    class Meta:
        db_table = u'log_t_student'

class LogTLog(models.Model):
    pk_entry_no = models.IntegerField(unique=True)
    log_date = models.DateField(null=True, blank=True)
    log_user = models.CharField(max_length=50, blank=True)
    detail = models.TextField(blank=True)
    entry_type = models.CharField(max_length=15, blank=True)
    procedure_name = models.CharField(max_length=50, blank=True)
    line_number = models.IntegerField(null=True, blank=True)
    fk_rms = models.ForeignKey(PpleTPerson, null=True, blank=True)
    class Meta:
        db_table = u'log_t_log'

class LogTConf(models.Model):
    pk_entry_no = models.IntegerField(primary_key=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    log_date = models.DateField()
    log_user = models.CharField(max_length=15)
    detail = models.CharField(max_length=250)
    entry_type = models.CharField(max_length=15)
    procedure_name = models.CharField(max_length=50)
    line_number = models.IntegerField()
    class Meta:
        db_table = u'log_t_conf'

class LockProcedure(models.Model):
    flag = models.CharField(max_length=1, blank=True)
    class Meta:
        db_table = u'lock_procedure'

class JudTUserDefined(models.Model):
    pk_jud_incident = models.ForeignKey(JudTIncidents, unique=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup1 = models.ForeignKey(LUTJudUserdefLookup1, null=True, db_column='user_def_lookup1', blank=True)
    user_def_lookup2 = models.ForeignKey(LUTJudUserdefLookup2, null=True, db_column='user_def_lookup2', blank=True)
    user_def_lookup3 = models.ForeignKey(LUTJudUserdefLookup3, null=True, db_column='user_def_lookup3', blank=True)
    user_def_lookup4 = models.ForeignKey(LUTJudUserdefLookup4, null=True, db_column='user_def_lookup4', blank=True)
    user_def_lookup5 = models.ForeignKey(LUTJudUserdefLookup5, null=True, db_column='user_def_lookup5', blank=True)
    user_def_lookup6 = models.ForeignKey(LUTJudUserdefLookup6, null=True, db_column='user_def_lookup6', blank=True)
    class Meta:
        db_table = u'jud_t_user_defined'

class JudTTypesInIncident(models.Model):
    ck_jud_incident = models.ForeignKey(JudTIncidents, unique=True)
    ck_incident_type = models.ForeignKey(LUTIncidentTypes, unique=True)
    class Meta:
        db_table = u'jud_t_types_in_incident'

class JudTSupplRptDoc(models.Model):
    ck_suppl_rpt_id = models.IntegerField(unique=True)
    ck_doc_name = models.CharField(max_length=100, unique=True)
    class Meta:
        db_table = u'jud_t_suppl_rpt_doc'

class JudTSupplementalReports(models.Model):
    pk_suppl_rpt_id = models.IntegerField(unique=True)
    fk_jud_incident = models.ForeignKey(JudTIncidents)
    inc_date = models.DateField()
    entered_by = models.CharField(max_length=50)
    notes = models.TextField(blank=True)
    last_modified_by = models.CharField(max_length=50, blank=True)
    last_modified_date = models.DateField()
    last_read_date = models.DateField()
    class Meta:
        db_table = u'jud_t_supplemental_reports'

class JudTSiteLinks(models.Model):
    pk_site_link_id = models.IntegerField(unique=True)
    site_link = models.CharField(max_length=250)
    status = models.IntegerField()
    class Meta:
        db_table = u'jud_t_site_links'

class JudTOnCallStaffInfo(models.Model):
    pk_oncallstaff_id = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    from_date = models.DateField(null=True, blank=True)
    to_date = models.DateField(null=True, blank=True)
    pager = models.CharField(max_length=25, blank=True)
    office_phone = models.CharField(max_length=25, blank=True)
    fk_on_call_type = models.ForeignKey(LUTOnCallTypes, null=True, blank=True)
    class Meta:
        db_table = u'jud_t_on_call_staff_info'

class JudTMeetRecordPoints(models.Model):
    ck_meet_record = models.ForeignKey(JudTMeetRecord, unique=True)
    ck_point = models.ForeignKey(LUTPoints, unique=True)
    class Meta:
        db_table = u'jud_t_meet_record_points'

class JudTMeetRecordHearingOff(models.Model):
    ck_meet_record = models.ForeignKey(JudTMeetRecord, unique=True)
    ck_rms = models.ForeignKey(JudTHearingoff, unique=True)
    class Meta:
        db_table = u'jud_t_meet_record_hearing_off'

class JudTMeetRecord(models.Model):
    pk_meet_record_id = models.IntegerField(unique=True)
    fk_meeting_notice = models.ForeignKey(JudTMeetingNotice)
    creation_date = models.DateField()
    meeting_record_notes = models.TextField(blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    class Meta:
        db_table = u'jud_t_meet_record'

class JudTMeetNoticeHearingOff(models.Model):
    pk_meetnotice_hearingoff_id = models.IntegerField(unique=True)
    fk_meeting_notice = models.ForeignKey(JudTMeetingNotice, unique=True)
    fk_rms = models.ForeignKey(JudTHearingoff, unique=True)
    class Meta:
        db_table = u'jud_t_meet_notice_hearing_off'

class JudTMeetingViolationList(models.Model):
    pk_meeting_violation_id = models.IntegerField(unique=True)
    fk_meeting_notice = models.ForeignKey(JudTMeetingNotice)
    fk_meet_record = models.ForeignKey(JudTMeetRecord, null=True, blank=True)
    fk_inc_pple_violation = models.ForeignKey(JudTIncPpleViolations, null=True, blank=True)
    fk_violation_type = models.ForeignKey(LUTViolationTypes, null=True, blank=True)
    fk_outcome_id = models.IntegerField()
    class Meta:
        db_table = u'jud_t_meeting_violation_list'

class JudTMeetingNotice(models.Model):
    pk_meeting_notice_id = models.IntegerField(unique=True)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice, null=True, blank=True)
    meeting_date = models.DateField()
    meeting_time = models.DateField()
    fk_meeting_type = models.ForeignKey(LUTMeetingTypes)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople, null=True, blank=True)
    fk_jud_incident_id = models.IntegerField(null=True, blank=True)
    fk_meeting_location = models.ForeignKey(LUTMeetingLocations)
    class Meta:
        db_table = u'jud_t_meeting_notice'

class JudTMeetingCriOffenseList(models.Model):
    pk_meeting_cri_offense_id = models.IntegerField(unique=True)
    fk_meeting_notice = models.ForeignKey(JudTMeetingNotice)
    fk_meet_record = models.ForeignKey(JudTMeetRecord, null=True, blank=True)
    fk_inc_pple_cri_offenses = models.ForeignKey(JudTIncPpleCriOffenses, null=True, blank=True)
    fk_criminal_offense = models.ForeignKey(LUTCriminalOffenses, null=True, blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    class Meta:
        db_table = u'jud_t_meeting_cri_offense_list'

class JudTMeetingCleryActsList(models.Model):
    pk_meeting_clery_act_id = models.IntegerField(unique=True)
    fk_inc_pple_cleryact = models.ForeignKey(JudTIncPpleCleryActs, null=True, blank=True)
    fk_cleryact = models.ForeignKey(LUTCleryActs)
    fk_meeting_notice = models.ForeignKey(JudTMeetingNotice)
    fk_meet_record = models.ForeignKey(JudTMeetRecord, null=True, blank=True)
    class Meta:
        db_table = u'jud_t_meeting_clery_acts_list'

class JudTLetterPerson(models.Model):
    pk_generation_no = models.IntegerField(unique=True)
    fk_letter = models.ForeignKey(JudTLetterList)
    fk_rms = models.ForeignKey(PpleTPerson)
    date_generated = models.DateField()
    time_generated = models.CharField(max_length=11)
    delivery_method = models.CharField(max_length=15)
    user_id = models.CharField(max_length=50)
    application_no = models.IntegerField()
    pdf_name = models.CharField(max_length=100)
    reprint_generation_no = models.IntegerField()
    fk_jud_incident_id = models.IntegerField()
    fk_notice_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jud_t_letter_person'

class JudTLetterList(models.Model):
    pk_letter_id = models.IntegerField(primary_key=True)
    letter_name = models.CharField(max_length=50)
    pdf_template_name = models.CharField(max_length=50)
    sql_statement = models.TextField(blank=True)
    letter_type = models.CharField(max_length=25)
    application_type = models.CharField(max_length=50, blank=True)
    auto_email_function = models.CharField(max_length=50, blank=True)
    preview_required = models.IntegerField()
    label_1 = models.CharField(max_length=50, blank=True)
    label_2 = models.CharField(max_length=50, blank=True)
    label_3 = models.CharField(max_length=50, blank=True)
    active = models.IntegerField()
    date_created = models.DateField()
    created_by = models.CharField(max_length=50)
    last_printed_date = models.DateField(null=True, blank=True)
    last_emailed_date = models.DateField(null=True, blank=True)
    email_subject = models.CharField(max_length=250, blank=True)
    rtf_template_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'jud_t_letter_list'

class JudTInfNoticePoints(models.Model):
    ck_infraction_notice = models.ForeignKey(JudTInfractionNotice, unique=True)
    ck_point = models.ForeignKey(LUTPoints, unique=True)
    class Meta:
        db_table = u'jud_t_inf_notice_points'

class JudTInfNoticeLetters(models.Model):
    ck_generation_no = models.ForeignKey(JudTLetterPerson, unique=True, db_column='ck_generation_no')
    ck_infraction_notice = models.ForeignKey(JudTInfractionNotice, unique=True)
    class Meta:
        db_table = u'jud_t_inf_notice_letters'

class JudTInfNoticeHearingOff(models.Model):
    pk_inf_notice_hearing_off_id = models.IntegerField(unique=True)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice)
    fk_rms = models.ForeignKey(JudTHearingoff)
    class Meta:
        db_table = u'jud_t_inf_notice_hearing_off'

class JudTInfractionNotice(models.Model):
    pk_infraction_notice_id = models.IntegerField(unique=True)
    infraction_notice_date = models.DateField()
    last_modified_date = models.DateField()
    infraction_notes = models.TextField(blank=True)
    fk_judletter_id = models.IntegerField(null=True, blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople, null=True, blank=True)
    class Meta:
        db_table = u'jud_t_infraction_notice'

class JudTIncPpleViolations(models.Model):
    pk_inc_pple_violation_id = models.IntegerField(unique=True)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople)
    fk_violation_type = models.ForeignKey(LUTViolationTypes)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice, null=True, blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    class Meta:
        db_table = u'jud_t_inc_pple_violations'

class JudTIncPpleSanctions(models.Model):
    pk_inc_pple_sanction_id = models.IntegerField(unique=True)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople)
    fk_sanction = models.ForeignKey(LUTSanctions)
    sanction_due_date = models.DateField()
    sanction_notes = models.TextField(blank=True)
    is_complete = models.IntegerField()
    completed_by = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'jud_t_inc_pple_sanctions'

class JudTIncPpleCriOffenses(models.Model):
    pk_inc_pple_cri_offenses_id = models.IntegerField(unique=True)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople)
    fk_criminal_offense = models.ForeignKey(LUTCriminalOffenses)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice, null=True, blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    class Meta:
        db_table = u'jud_t_inc_pple_cri_offenses'

class JudTIncPpleCleryActs(models.Model):
    pk_inc_pple_cleryact_id = models.IntegerField(unique=True)
    fk_incident_pple = models.ForeignKey(JudTIncidentPeople, null=True, blank=True)
    fk_cleryact = models.ForeignKey(LUTCleryActs)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice, null=True, blank=True)
    class Meta:
        db_table = u'jud_t_inc_pple_clery_acts'

class JudTIncidentRespPple(models.Model):
    ck_jud_incident_id = models.IntegerField(unique=True)
    ck_rms_id = models.IntegerField(unique=True)
    class Meta:
        db_table = u'jud_t_incident_resp_pple'

class JudTIncidentPeople(models.Model):
    pk_incident_pple_id = models.IntegerField(unique=True)
    fk_jud_incident = models.ForeignKey(JudTIncidents)
    fk_rms = models.ForeignKey(PpleTPerson)
    is_student = models.IntegerField()
    is_resident = models.IntegerField()
    from_date = models.DateField(null=True, blank=True)
    to_date = models.DateField(null=True, blank=True)
    flag_notes = models.TextField(blank=True)
    fk_jud_flag = models.ForeignKey(LUTJudFlags, null=True, blank=True)
    is_witness = models.IntegerField()
    is_victim = models.IntegerField()
    class Meta:
        db_table = u'jud_t_incident_people'

class JudTIncidents(models.Model):
    pk_jud_incident_id = models.IntegerField(unique=True)
    identification = models.IntegerField()
    public_safety = models.IntegerField()
    law_enforcement_agency = models.IntegerField()
    emergency_response = models.IntegerField()
    fire_dept_necessary = models.IntegerField()
    place_of_occurrence = models.CharField(max_length=50, blank=True)
    fk_area = models.ForeignKey(LUTOccurArea)
    jud_inc_date = models.DateField(null=True, blank=True)
    jud_inc_time = models.DateField(null=True, blank=True)
    area_notes = models.TextField(blank=True)
    jud_inc_note = models.TextField(blank=True)
    jud_inc_deleted = models.IntegerField()
    jud_inc_deleted_date = models.DateField(null=True, blank=True)
    jud_inc_deletedby = models.CharField(max_length=25, blank=True)
    reported_by = models.CharField(max_length=50, blank=True)
    author_of_report = models.CharField(max_length=30)
    author_notes = models.TextField(blank=True)
    security_judicial_id = models.CharField(max_length=15, blank=True)
    suppl_notes = models.TextField(blank=True)
    entered_date = models.DateField(null=True, blank=True)
    last_modified_by = models.CharField(max_length=50, blank=True)
    last_modified_date = models.DateField(null=True, blank=True)
    reason_for_delete = models.TextField(blank=True)
    deleted_by = models.CharField(max_length=50, blank=True)
    taken_by = models.CharField(max_length=50, blank=True)
    last_read_date = models.DateField(null=True, blank=True)
    completed = models.DateField(null=True, blank=True)
    fk_outcome = models.ForeignKey(LUTOutcomes)
    sealed = models.IntegerField()
    class Meta:
        db_table = u'jud_t_incidents'

class JudTHearingoff(models.Model):
    pk_rms = models.ForeignKey(PpleTPerson, unique=True)
    status = models.IntegerField()
    comments = models.TextField(blank=True)
    class Meta:
        db_table = u'jud_t_hearingoff'

class JudTFlagFunctionRelation(models.Model):
    ck_jud_flag = models.ForeignKey(LUTJudFlags, unique=True)
    ck_function_name = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'jud_t_flag_function_relation'

class JudTFines(models.Model):
    fk_posting_id = models.DecimalField(unique=True, max_digits=0, decimal_places=-127)
    fk_infraction_notice = models.ForeignKey(JudTInfractionNotice, null=True, blank=True)
    fk_meet_record = models.ForeignKey(JudTMeetRecord, null=True, blank=True)
    class Meta:
        db_table = u'jud_t_fines'

class IntrTRtAssign(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    full_name = models.CharField(max_length=78, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    buildings_name = models.CharField(max_length=50, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    fk_plan_type = models.CharField(max_length=15, blank=True)
    fk_plan_person_move_in_date = models.DateField(null=True, blank=True)
    fk_plan_order_id = models.IntegerField(null=True, blank=True)
    fk_plan_person_billing_type = models.CharField(max_length=50, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    fk_userid = models.CharField(max_length=30, blank=True)
    building_status = models.IntegerField()
    return_status = models.IntegerField()
    class Meta:
        db_table = u'intr_t_rt_assign'

class IntrTLastUsrdefSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_last_usrdef_snapshot'

class IntrTLastPlanSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_plan_type = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    fk_plan_order_id = models.IntegerField(null=True, blank=True)
    sk_plan_order_id = models.CharField(max_length=20, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    status = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'intr_t_last_plan_snapshot'

class IntrTLastPersonSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_address_type = models.CharField(max_length=15, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField(null=True, blank=True)
    e_mailing_status = models.IntegerField(null=True, blank=True)
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_last_person_snapshot'

class IntrTLastDecbalSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_tx_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_txtype = models.CharField(max_length=10)
    ledger_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'intr_t_last_decbal_snapshot'

class IntrTLastAssignSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    individual_billing = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_building_id = models.CharField(max_length=15, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    change = models.IntegerField(null=True, blank=True)
    status = models.CharField(max_length=10, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'intr_t_last_assign_snapshot'

class IntrTLastApplSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    application_person_type = models.CharField(max_length=4, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    reference_sent = models.IntegerField(null=True, blank=True)
    reference_2_sent = models.IntegerField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    application_registration_paid = models.IntegerField(null=True, blank=True)
    financial_guarantee = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    appl_priority_allocation = models.IntegerField(null=True, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_last_appl_snapshot'

class IntrTImTransactions(models.Model):
    pk_data_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    fk_txtype = models.CharField(max_length=25, blank=True)
    basic_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    alias_code = models.CharField(max_length=50, blank=True)
    description = models.CharField(max_length=255, blank=True)
    payment_type = models.CharField(max_length=8, blank=True)
    payments_comments = models.CharField(max_length=250, blank=True)
    fk_method_code = models.CharField(max_length=25, blank=True)
    card_type = models.CharField(max_length=10, blank=True)
    expiry_date = models.CharField(max_length=5, blank=True)
    name_on_card = models.CharField(max_length=25, blank=True)
    account_number = models.CharField(max_length=50, blank=True)
    payee = models.CharField(max_length=25, blank=True)
    bank = models.CharField(max_length=20, blank=True)
    branch = models.CharField(max_length=20, blank=True)
    cheque_no = models.CharField(max_length=20, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    tax1_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    total_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_txid = models.CharField(max_length=20, blank=True)
    fk_posting_id = models.IntegerField(null=True, blank=True)
    fk_invoice_number = models.CharField(max_length=10, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    import_field = models.IntegerField(db_column='import') # Field renamed because it was a Python reserved word.
    class Meta:
        db_table = u'intr_t_im_transactions'

class IntrTImRoomPrefs(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_application_no = models.IntegerField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    fk_application_type = models.CharField(max_length=15, blank=True)
    application_form_complete = models.CharField(max_length=50, blank=True)
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    fk_bed_space1 = models.CharField(max_length=10, blank=True)
    fk_room_type1 = models.CharField(max_length=15, blank=True)
    fk_section_id1 = models.CharField(max_length=8, blank=True)
    fk_floor_id1 = models.CharField(max_length=8, blank=True)
    fk_building_id1 = models.CharField(max_length=8, blank=True)
    fk_community1 = models.CharField(max_length=25, blank=True)
    fk_bed_space2 = models.CharField(max_length=10, blank=True)
    fk_room_type2 = models.CharField(max_length=15, blank=True)
    fk_section_id2 = models.CharField(max_length=8, blank=True)
    fk_floor_id2 = models.CharField(max_length=8, blank=True)
    fk_building_id2 = models.CharField(max_length=8, blank=True)
    fk_community2 = models.CharField(max_length=25, blank=True)
    fk_bed_space3 = models.CharField(max_length=10, blank=True)
    fk_room_type3 = models.CharField(max_length=15, blank=True)
    fk_section_id3 = models.CharField(max_length=8, blank=True)
    fk_floor_id3 = models.CharField(max_length=8, blank=True)
    fk_building_id3 = models.CharField(max_length=8, blank=True)
    fk_community3 = models.CharField(max_length=25, blank=True)
    fk_bed_space4 = models.CharField(max_length=10, blank=True)
    fk_room_type4 = models.CharField(max_length=15, blank=True)
    fk_section_id4 = models.CharField(max_length=8, blank=True)
    fk_floor_id4 = models.CharField(max_length=8, blank=True)
    fk_building_id4 = models.CharField(max_length=8, blank=True)
    fk_community4 = models.CharField(max_length=25, blank=True)
    fk_bed_space5 = models.CharField(max_length=10, blank=True)
    fk_room_type5 = models.CharField(max_length=15, blank=True)
    fk_section_id5 = models.CharField(max_length=8, blank=True)
    fk_floor_id5 = models.CharField(max_length=8, blank=True)
    fk_building_id5 = models.CharField(max_length=8, blank=True)
    fk_community5 = models.CharField(max_length=25, blank=True)
    fk_bed_space6 = models.CharField(max_length=10, blank=True)
    fk_room_type6 = models.CharField(max_length=15, blank=True)
    fk_section_id6 = models.CharField(max_length=8, blank=True)
    fk_floor_id6 = models.CharField(max_length=8, blank=True)
    fk_building_id6 = models.CharField(max_length=8, blank=True)
    fk_community6 = models.CharField(max_length=25, blank=True)
    fk_bed_space7 = models.CharField(max_length=10, blank=True)
    fk_room_type7 = models.CharField(max_length=15, blank=True)
    fk_section_id7 = models.CharField(max_length=8, blank=True)
    fk_floor_id7 = models.CharField(max_length=8, blank=True)
    fk_building_id7 = models.CharField(max_length=8, blank=True)
    fk_community7 = models.CharField(max_length=25, blank=True)
    fk_bed_space8 = models.CharField(max_length=10, blank=True)
    fk_room_type8 = models.CharField(max_length=15, blank=True)
    fk_section_id8 = models.CharField(max_length=8, blank=True)
    fk_floor_id8 = models.CharField(max_length=8, blank=True)
    fk_building_id8 = models.CharField(max_length=8, blank=True)
    fk_community8 = models.CharField(max_length=25, blank=True)
    fk_bed_space9 = models.CharField(max_length=10, blank=True)
    fk_room_type9 = models.CharField(max_length=15, blank=True)
    fk_section_id9 = models.CharField(max_length=8, blank=True)
    fk_floor_id9 = models.CharField(max_length=8, blank=True)
    fk_building_id9 = models.CharField(max_length=8, blank=True)
    fk_community9 = models.CharField(max_length=25, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_defined_text1 = models.CharField(max_length=250, blank=True)
    user_defined_text2 = models.CharField(max_length=250, blank=True)
    user_defined_text3 = models.CharField(max_length=250, blank=True)
    user_defined_text4 = models.CharField(max_length=250, blank=True)
    user_defined_text5 = models.CharField(max_length=250, blank=True)
    user_defined_text6 = models.CharField(max_length=250, blank=True)
    user_defined_text7 = models.CharField(max_length=250, blank=True)
    user_defined_text8 = models.CharField(max_length=250, blank=True)
    user_defined_text9 = models.CharField(max_length=250, blank=True)
    user_defined_text10 = models.CharField(max_length=250, blank=True)
    user_defined_text11 = models.CharField(max_length=250, blank=True)
    user_defined_text12 = models.CharField(max_length=250, blank=True)
    user_defined_text13 = models.CharField(max_length=250, blank=True)
    user_defined_text14 = models.CharField(max_length=250, blank=True)
    user_defined_text15 = models.CharField(max_length=250, blank=True)
    user_defined_text16 = models.CharField(max_length=250, blank=True)
    user_defined_text17 = models.CharField(max_length=250, blank=True)
    user_defined_text18 = models.CharField(max_length=250, blank=True)
    user_defined_text19 = models.CharField(max_length=250, blank=True)
    user_defined_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    fk_bed_space10 = models.CharField(max_length=10, blank=True)
    fk_room_type10 = models.CharField(max_length=15, blank=True)
    fk_section_id10 = models.CharField(max_length=8, blank=True)
    fk_floor_id10 = models.CharField(max_length=8, blank=True)
    fk_building_id10 = models.CharField(max_length=8, blank=True)
    fk_community10 = models.CharField(max_length=25, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan5 = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'intr_t_im_room_prefs'

class IntrTImRooms(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    ck_building_id = models.CharField(max_length=8, blank=True)
    ck_bed_space = models.CharField(max_length=10, blank=True)
    ck_occupant = models.CharField(max_length=50, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'intr_t_im_rooms'

class IntrTIm2Id(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    class Meta:
        db_table = u'intr_t_im_2_id'

class IntrTImportRtPolling(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ck_change_type = models.CharField(max_length=1, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_home = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.CharField(max_length=1, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.CharField(max_length=1, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_new_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    cont_address_1 = models.CharField(max_length=50, blank=True)
    cont_address_1b = models.CharField(max_length=50, blank=True)
    cont_address_2 = models.CharField(max_length=50, blank=True)
    cont_postcode = models.CharField(max_length=15, blank=True)
    fk_cont_state = models.CharField(max_length=15, blank=True)
    cont_address_3 = models.CharField(max_length=50, blank=True)
    cont_phone = models.CharField(max_length=25, blank=True)
    camp_address_1 = models.CharField(max_length=50, blank=True)
    camp_address_2 = models.CharField(max_length=50, blank=True)
    camp_postcode = models.CharField(max_length=15, blank=True)
    fk_camp_state = models.CharField(max_length=15, blank=True)
    camp_address_3 = models.CharField(max_length=50, blank=True)
    camp_phone = models.CharField(max_length=25, blank=True)
    forw_address_1 = models.CharField(max_length=50, blank=True)
    forw_address_1b = models.CharField(max_length=50, blank=True)
    forw_address_2 = models.CharField(max_length=50, blank=True)
    forw_postcode = models.CharField(max_length=15, blank=True)
    fk_forw_state = models.CharField(max_length=15, blank=True)
    forw_address_3 = models.CharField(max_length=50, blank=True)
    forw_phone = models.CharField(max_length=25, blank=True)
    mail_address_1 = models.CharField(max_length=50, blank=True)
    mail_address_1b = models.CharField(max_length=50, blank=True)
    mail_address_2 = models.CharField(max_length=50, blank=True)
    mail_postcode = models.CharField(max_length=15, blank=True)
    fk_mail_state = models.CharField(max_length=15, blank=True)
    mail_address_3 = models.CharField(max_length=50, blank=True)
    mail_phone = models.CharField(max_length=25, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.CharField(max_length=1, blank=True)
    user_def_yes_no2 = models.CharField(max_length=1, blank=True)
    user_def_yes_no3 = models.CharField(max_length=1, blank=True)
    user_def_yes_no4 = models.CharField(max_length=1, blank=True)
    user_def_yes_no5 = models.CharField(max_length=1, blank=True)
    user_def_yes_no6 = models.CharField(max_length=1, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    buildings_name = models.CharField(max_length=50, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    room_person_orginal_rate = models.CharField(max_length=1, blank=True)
    fk_contact_id = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    vac_address_1 = models.CharField(max_length=50, blank=True)
    vac_address_1b = models.CharField(max_length=50, blank=True)
    vac_address_2 = models.CharField(max_length=50, blank=True)
    vac_postcode = models.CharField(max_length=15, blank=True)
    fk_vac_state = models.CharField(max_length=15, blank=True)
    vac_address_3 = models.CharField(max_length=50, blank=True)
    vac_phone = models.CharField(max_length=25, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    vac_fax = models.CharField(max_length=25, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    financial_hold = models.CharField(max_length=3, blank=True)
    judicial_hold = models.CharField(max_length=3, blank=True)
    privacy_flag_1 = models.CharField(max_length=3, blank=True)
    privacy_flag_2 = models.CharField(max_length=3, blank=True)
    privacy_flag_3 = models.CharField(max_length=3, blank=True)
    incident_type_6 = models.CharField(max_length=3, blank=True)
    incident_type_7 = models.CharField(max_length=3, blank=True)
    incident_type_8 = models.CharField(max_length=3, blank=True)
    incident_type_9 = models.CharField(max_length=3, blank=True)
    incident_type_10 = models.CharField(max_length=3, blank=True)
    fk_contact_rms_id = models.IntegerField(null=True, blank=True)
    contact_sex = models.CharField(max_length=1, blank=True)
    ix_contact_last_name = models.CharField(max_length=25, blank=True)
    ix_contact_first_name = models.CharField(max_length=25, blank=True)
    ix_contact_middle_name = models.CharField(max_length=25, blank=True)
    contact_phone_home = models.CharField(max_length=25, blank=True)
    contact_phone_work = models.CharField(max_length=25, blank=True)
    contact_fax = models.CharField(max_length=25, blank=True)
    contact_person_type = models.CharField(max_length=4, blank=True)
    contact_notes = models.CharField(max_length=250, blank=True)
    fk_contact_call_accounting_id = models.IntegerField(null=True, blank=True)
    contact_title = models.CharField(max_length=5, blank=True)
    ix_contact_national_id = models.CharField(max_length=15, blank=True)
    fk_contact_marital_status = models.CharField(max_length=50, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    bond_paid = models.CharField(max_length=1, blank=True)
    fee_paid = models.CharField(max_length=1, blank=True)
    application_form_complete = models.CharField(max_length=1, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan5 = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    camp_address_1b = models.CharField(max_length=50, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    camp_email = models.CharField(max_length=50, blank=True)
    cont_email = models.CharField(max_length=50, blank=True)
    forw_email = models.CharField(max_length=50, blank=True)
    mail_email = models.CharField(max_length=50, blank=True)
    vac_email = models.CharField(max_length=50, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    individual_billing = models.CharField(max_length=1, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    username = models.CharField(max_length=50, blank=True)
    cont_cell_phone = models.CharField(max_length=25, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_import_rt_polling'

class IntrTImport(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ck_change_type = models.CharField(max_length=1, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_home = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.CharField(max_length=1, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.CharField(max_length=1, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_new_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    cont_address_1 = models.CharField(max_length=50, blank=True)
    cont_address_1b = models.CharField(max_length=50, blank=True)
    cont_address_2 = models.CharField(max_length=50, blank=True)
    cont_postcode = models.CharField(max_length=15, blank=True)
    fk_cont_state = models.CharField(max_length=15, blank=True)
    cont_address_3 = models.CharField(max_length=50, blank=True)
    cont_phone = models.CharField(max_length=25, blank=True)
    camp_address_1 = models.CharField(max_length=50, blank=True)
    camp_address_2 = models.CharField(max_length=50, blank=True)
    camp_postcode = models.CharField(max_length=15, blank=True)
    fk_camp_state = models.CharField(max_length=15, blank=True)
    camp_address_3 = models.CharField(max_length=50, blank=True)
    camp_phone = models.CharField(max_length=25, blank=True)
    forw_address_1 = models.CharField(max_length=50, blank=True)
    forw_address_1b = models.CharField(max_length=50, blank=True)
    forw_address_2 = models.CharField(max_length=50, blank=True)
    forw_postcode = models.CharField(max_length=15, blank=True)
    fk_forw_state = models.CharField(max_length=15, blank=True)
    forw_address_3 = models.CharField(max_length=50, blank=True)
    forw_phone = models.CharField(max_length=25, blank=True)
    mail_address_1 = models.CharField(max_length=50, blank=True)
    mail_address_1b = models.CharField(max_length=50, blank=True)
    mail_address_2 = models.CharField(max_length=50, blank=True)
    mail_postcode = models.CharField(max_length=15, blank=True)
    fk_mail_state = models.CharField(max_length=15, blank=True)
    mail_address_3 = models.CharField(max_length=50, blank=True)
    mail_phone = models.CharField(max_length=25, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.CharField(max_length=1, blank=True)
    user_def_yes_no2 = models.CharField(max_length=1, blank=True)
    user_def_yes_no3 = models.CharField(max_length=1, blank=True)
    user_def_yes_no4 = models.CharField(max_length=1, blank=True)
    user_def_yes_no5 = models.CharField(max_length=1, blank=True)
    user_def_yes_no6 = models.CharField(max_length=1, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    buildings_name = models.CharField(max_length=50, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    room_person_orginal_rate = models.CharField(max_length=1, blank=True)
    fk_contact_id = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    vac_address_1 = models.CharField(max_length=50, blank=True)
    vac_address_1b = models.CharField(max_length=50, blank=True)
    vac_address_2 = models.CharField(max_length=50, blank=True)
    vac_postcode = models.CharField(max_length=15, blank=True)
    fk_vac_state = models.CharField(max_length=15, blank=True)
    vac_address_3 = models.CharField(max_length=50, blank=True)
    vac_phone = models.CharField(max_length=25, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    vac_fax = models.CharField(max_length=25, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    financial_hold = models.CharField(max_length=3, blank=True)
    judicial_hold = models.CharField(max_length=3, blank=True)
    privacy_flag_1 = models.CharField(max_length=3, blank=True)
    privacy_flag_2 = models.CharField(max_length=3, blank=True)
    privacy_flag_3 = models.CharField(max_length=3, blank=True)
    incident_type_6 = models.CharField(max_length=3, blank=True)
    incident_type_7 = models.CharField(max_length=3, blank=True)
    incident_type_8 = models.CharField(max_length=3, blank=True)
    incident_type_9 = models.CharField(max_length=3, blank=True)
    incident_type_10 = models.CharField(max_length=3, blank=True)
    fk_contact_rms_id = models.IntegerField(null=True, blank=True)
    contact_sex = models.CharField(max_length=1, blank=True)
    ix_contact_last_name = models.CharField(max_length=25, blank=True)
    ix_contact_first_name = models.CharField(max_length=25, blank=True)
    ix_contact_middle_name = models.CharField(max_length=25, blank=True)
    contact_phone_home = models.CharField(max_length=25, blank=True)
    contact_phone_work = models.CharField(max_length=25, blank=True)
    contact_fax = models.CharField(max_length=25, blank=True)
    contact_person_type = models.CharField(max_length=4, blank=True)
    contact_notes = models.CharField(max_length=250, blank=True)
    fk_contact_call_accounting_id = models.IntegerField(null=True, blank=True)
    contact_title = models.CharField(max_length=5, blank=True)
    ix_contact_national_id = models.CharField(max_length=15, blank=True)
    fk_contact_marital_status = models.CharField(max_length=50, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    bond_paid = models.CharField(max_length=1, blank=True)
    fee_paid = models.CharField(max_length=1, blank=True)
    application_form_complete = models.CharField(max_length=1, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan5 = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    camp_address_1b = models.CharField(max_length=50, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    camp_email = models.CharField(max_length=50, blank=True)
    cont_email = models.CharField(max_length=50, blank=True)
    forw_email = models.CharField(max_length=50, blank=True)
    mail_email = models.CharField(max_length=50, blank=True)
    vac_email = models.CharField(max_length=50, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    individual_billing = models.CharField(max_length=1, blank=True)
    fk_order_id = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    cont_cell_phone = models.CharField(max_length=25, blank=True)
    fk_category_id = models.IntegerField(null=True, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_import'

class IntrTExRoomMates(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    change_type = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    full_name = models.CharField(max_length=78, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_home = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    title = models.CharField(max_length=5, blank=True)
    fk_building_id = models.CharField(max_length=15, blank=True)
    buildings_name = models.CharField(max_length=50, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    rooms_address_2 = models.CharField(max_length=50, blank=True)
    rooms_address_1b = models.CharField(max_length=50, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    rooms_address_3 = models.CharField(max_length=50, blank=True)
    rooms_postcode = models.CharField(max_length=50, blank=True)
    fk_rooms_state = models.CharField(max_length=50, blank=True)
    room_type_description = models.CharField(max_length=30, blank=True)
    phone_extension = models.CharField(max_length=50, blank=True)
    key_id = models.CharField(max_length=50, blank=True)
    rooms_capacity = models.IntegerField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    move_out_date = models.DateField(null=True, blank=True)
    booking_type = models.CharField(max_length=5, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    billed_up_to = models.DateField(null=True, blank=True)
    notes = models.CharField(max_length=100, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    room_person_original_rate = models.IntegerField(null=True, blank=True)
    rate = models.CharField(max_length=50, blank=True)
    original_rate = models.IntegerField(null=True, blank=True)
    fk_contact_id = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    vac_address_1 = models.CharField(max_length=50, blank=True)
    vac_address_1b = models.CharField(max_length=50, blank=True)
    vac_address_2 = models.CharField(max_length=50, blank=True)
    vac_postcode = models.CharField(max_length=15, blank=True)
    fk_vac_state = models.CharField(max_length=8, blank=True)
    vac_address_3 = models.CharField(max_length=50, blank=True)
    vac_phone = models.CharField(max_length=25, blank=True)
    fk_contact_rms_id = models.IntegerField(null=True, blank=True)
    contact_sex = models.CharField(max_length=1, blank=True)
    ix_contact_last_name = models.CharField(max_length=25, blank=True)
    ix_contact_first_name = models.CharField(max_length=25, blank=True)
    ix_contact_middle_name = models.CharField(max_length=25, blank=True)
    contact_address_1 = models.CharField(max_length=50, blank=True)
    contact_address_1b = models.CharField(max_length=50, blank=True)
    contact_address_2 = models.CharField(max_length=50, blank=True)
    contact_postcode = models.CharField(max_length=15, blank=True)
    fk_contact_state = models.CharField(max_length=15, blank=True)
    contact_address_3 = models.CharField(max_length=50, blank=True)
    contact_phone_home = models.CharField(max_length=25, blank=True)
    contact_phone_work = models.CharField(max_length=25, blank=True)
    contact_fax = models.CharField(max_length=25, blank=True)
    contact_person_type = models.CharField(max_length=4, blank=True)
    contact_notes = models.CharField(max_length=250, blank=True)
    fk_call_accounting_id = models.CharField(max_length=50, blank=True)
    contact_title = models.CharField(max_length=5, blank=True)
    contact_email = models.CharField(max_length=50, blank=True)
    ix_contact_national_id = models.CharField(max_length=15, blank=True)
    fk_contact_marital_status = models.CharField(max_length=50, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    rm1_rms_id = models.IntegerField(null=True, blank=True)
    rm1_last_name = models.CharField(max_length=25, blank=True)
    rm1_first_name = models.CharField(max_length=25, blank=True)
    rm1_middle_name = models.CharField(max_length=25, blank=True)
    rm1_address_1 = models.CharField(max_length=50, blank=True)
    rm1_address_1b = models.CharField(max_length=50, blank=True)
    rm1_address_2 = models.CharField(max_length=50, blank=True)
    rm1_postcode = models.CharField(max_length=15, blank=True)
    rm1_state = models.CharField(max_length=15, blank=True)
    rm1_address_3 = models.CharField(max_length=50, blank=True)
    rm1_phone_home = models.CharField(max_length=25, blank=True)
    rm1_phone_work = models.CharField(max_length=25, blank=True)
    rm1_bed_space = models.CharField(max_length=10, blank=True)
    rm2_rms_id = models.IntegerField(null=True, blank=True)
    rm2_last_name = models.CharField(max_length=25, blank=True)
    rm2_first_name = models.CharField(max_length=25, blank=True)
    rm2_middle_name = models.CharField(max_length=25, blank=True)
    rm2_address_1 = models.CharField(max_length=50, blank=True)
    rm2_address_1b = models.CharField(max_length=50, blank=True)
    rm2_address_2 = models.CharField(max_length=50, blank=True)
    rm2_postcode = models.CharField(max_length=15, blank=True)
    rm2_state = models.CharField(max_length=15, blank=True)
    rm2_address_3 = models.CharField(max_length=50, blank=True)
    rm2_phone_home = models.CharField(max_length=25, blank=True)
    rm2_phone_work = models.CharField(max_length=25, blank=True)
    rm2_bed_space = models.CharField(max_length=10, blank=True)
    rm3_rms_id = models.IntegerField(null=True, blank=True)
    rm3_last_name = models.CharField(max_length=25, blank=True)
    rm3_first_name = models.CharField(max_length=25, blank=True)
    rm3_middle_name = models.CharField(max_length=25, blank=True)
    rm3_address_1 = models.CharField(max_length=50, blank=True)
    rm3_address_1b = models.CharField(max_length=50, blank=True)
    rm3_address_2 = models.CharField(max_length=50, blank=True)
    rm3_postcode = models.CharField(max_length=15, blank=True)
    rm3_state = models.CharField(max_length=15, blank=True)
    rm3_address_3 = models.CharField(max_length=50, blank=True)
    rm3_phone_home = models.CharField(max_length=25, blank=True)
    rm3_phone_work = models.CharField(max_length=25, blank=True)
    rm3_bed_space = models.CharField(max_length=10, blank=True)
    rm4_rms_id = models.IntegerField(null=True, blank=True)
    rm4_last_name = models.CharField(max_length=25, blank=True)
    rm4_first_name = models.CharField(max_length=25, blank=True)
    rm4_middle_name = models.CharField(max_length=25, blank=True)
    rm4_address_1 = models.CharField(max_length=50, blank=True)
    rm4_address_1b = models.CharField(max_length=50, blank=True)
    rm4_address_2 = models.CharField(max_length=50, blank=True)
    rm4_postcode = models.CharField(max_length=15, blank=True)
    rm4_state = models.CharField(max_length=15, blank=True)
    rm4_address_3 = models.CharField(max_length=50, blank=True)
    rm4_phone_home = models.CharField(max_length=25, blank=True)
    rm4_phone_work = models.CharField(max_length=25, blank=True)
    rm4_bed_space = models.CharField(max_length=10, blank=True)
    rm5_rms_id = models.IntegerField(null=True, blank=True)
    rm5_last_name = models.CharField(max_length=25, blank=True)
    rm5_first_name = models.CharField(max_length=25, blank=True)
    rm5_middle_name = models.CharField(max_length=25, blank=True)
    rm5_address_1 = models.CharField(max_length=50, blank=True)
    rm5_address_1b = models.CharField(max_length=50, blank=True)
    rm5_address_2 = models.CharField(max_length=50, blank=True)
    rm5_postcode = models.CharField(max_length=15, blank=True)
    rm5_state = models.CharField(max_length=15, blank=True)
    rm5_address_3 = models.CharField(max_length=50, blank=True)
    rm5_phone_home = models.CharField(max_length=25, blank=True)
    rm5_phone_work = models.CharField(max_length=25, blank=True)
    rm5_bed_space = models.CharField(max_length=10, blank=True)
    rm6_rms_id = models.IntegerField(null=True, blank=True)
    rm6_last_name = models.CharField(max_length=25, blank=True)
    rm6_first_name = models.CharField(max_length=25, blank=True)
    rm6_middle_name = models.CharField(max_length=25, blank=True)
    rm6_address_1 = models.CharField(max_length=50, blank=True)
    rm6_address_1b = models.CharField(max_length=50, blank=True)
    rm6_address_2 = models.CharField(max_length=50, blank=True)
    rm6_postcode = models.CharField(max_length=15, blank=True)
    rm6_state = models.CharField(max_length=15, blank=True)
    rm6_address_3 = models.CharField(max_length=50, blank=True)
    rm6_phone_home = models.CharField(max_length=25, blank=True)
    rm6_phone_work = models.CharField(max_length=25, blank=True)
    rm6_bed_space = models.CharField(max_length=10, blank=True)
    rm7_rms_id = models.IntegerField(null=True, blank=True)
    rm7_last_name = models.CharField(max_length=25, blank=True)
    rm7_first_name = models.CharField(max_length=25, blank=True)
    rm7_middle_name = models.CharField(max_length=25, blank=True)
    rm7_address_1 = models.CharField(max_length=50, blank=True)
    rm7_address_1b = models.CharField(max_length=50, blank=True)
    rm7_address_2 = models.CharField(max_length=50, blank=True)
    rm7_postcode = models.CharField(max_length=15, blank=True)
    rm7_state = models.CharField(max_length=15, blank=True)
    rm7_address_3 = models.CharField(max_length=50, blank=True)
    rm7_phone_work = models.CharField(max_length=25, blank=True)
    rm7_phone_home = models.CharField(max_length=25, blank=True)
    rm7_bed_space = models.CharField(max_length=10, blank=True)
    rm8_rms_id = models.IntegerField(null=True, blank=True)
    rm8_last_name = models.CharField(max_length=25, blank=True)
    rm8_first_name = models.CharField(max_length=25, blank=True)
    rm8_middle_name = models.CharField(max_length=25, blank=True)
    rm8_address_1 = models.CharField(max_length=50, blank=True)
    rm8_address_1b = models.CharField(max_length=50, blank=True)
    rm8_address_2 = models.CharField(max_length=50, blank=True)
    rm8_postcode = models.CharField(max_length=15, blank=True)
    rm8_state = models.CharField(max_length=15, blank=True)
    rm8_address_3 = models.CharField(max_length=50, blank=True)
    rm8_phone_home = models.CharField(max_length=25, blank=True)
    rm8_phone_work = models.CharField(max_length=25, blank=True)
    rm8_bed_space = models.CharField(max_length=10, blank=True)
    rm9_rms_id = models.IntegerField(null=True, blank=True)
    rm9_last_name = models.CharField(max_length=25, blank=True)
    rm9_first_name = models.CharField(max_length=1, blank=True)
    rm9_middle_name = models.CharField(max_length=25, blank=True)
    rm9_address_1 = models.CharField(max_length=25, blank=True)
    rm9_address_1b = models.CharField(max_length=1, blank=True)
    rm9_address_2 = models.CharField(max_length=25, blank=True)
    rm9_postcode = models.CharField(max_length=15, blank=True)
    rm9_state = models.CharField(max_length=15, blank=True)
    rm9_address_3 = models.CharField(max_length=50, blank=True)
    rm9_phone_home = models.CharField(max_length=25, blank=True)
    rm9_phone_work = models.CharField(max_length=25, blank=True)
    rm9_bed_space = models.CharField(max_length=10, blank=True)
    rm10_rms_id = models.IntegerField(null=True, blank=True)
    rm10_last_name = models.CharField(max_length=25, blank=True)
    rm10_first_name = models.CharField(max_length=25, blank=True)
    rm10_middle_name = models.CharField(max_length=25, blank=True)
    rm10_address_1 = models.CharField(max_length=25, blank=True)
    rm10_address_1b = models.CharField(max_length=50, blank=True)
    rm10_address_2 = models.CharField(max_length=50, blank=True)
    rm10_postcode = models.CharField(max_length=15, blank=True)
    rm10_state = models.CharField(max_length=15, blank=True)
    rm10_address_3 = models.CharField(max_length=50, blank=True)
    rm10_phone_home = models.CharField(max_length=25, blank=True)
    rm10_phone_work = models.CharField(max_length=25, blank=True)
    rm10_bed_space = models.CharField(max_length=10, blank=True)
    rm11_rms_id = models.IntegerField(null=True, blank=True)
    rm11_last_name = models.CharField(max_length=25, blank=True)
    rm11_first_name = models.CharField(max_length=25, blank=True)
    rm11_middle_name = models.CharField(max_length=25, blank=True)
    rm11_address_1 = models.CharField(max_length=50, blank=True)
    rm11_address_1b = models.CharField(max_length=50, blank=True)
    rm11_address_2 = models.CharField(max_length=50, blank=True)
    rm11_postcode = models.CharField(max_length=15, blank=True)
    rm11_state = models.CharField(max_length=15, blank=True)
    rm11_address_3 = models.CharField(max_length=50, blank=True)
    rm11_phone_home = models.CharField(max_length=25, blank=True)
    rm11_phone_work = models.CharField(max_length=25, blank=True)
    rm11_bed_space = models.CharField(max_length=10, blank=True)
    rm12_rms_id = models.IntegerField(null=True, blank=True)
    rm12_last_name = models.CharField(max_length=25, blank=True)
    rm12_first_name = models.CharField(max_length=25, blank=True)
    rm12_middle_name = models.CharField(max_length=25, blank=True)
    rm12_address_1 = models.CharField(max_length=50, blank=True)
    rm12_address_1b = models.CharField(max_length=50, blank=True)
    rm12_address_2 = models.CharField(max_length=50, blank=True)
    rm12_postcode = models.CharField(max_length=15, blank=True)
    rm12_state = models.CharField(max_length=15, blank=True)
    rm12_address_3 = models.CharField(max_length=50, blank=True)
    rm12_phone_home = models.CharField(max_length=25, blank=True)
    rm12_phone_work = models.CharField(max_length=25, blank=True)
    rm12_bed_space = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'intr_t_ex_room_mates'

class IntrTExProfAssign(models.Model):
    pk_data_id = models.IntegerField()
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    full_name = models.CharField(max_length=78, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    phone_home = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    title = models.CharField(max_length=5, blank=True)
    email = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    ix_spouse_national_id = models.CharField(max_length=15, blank=True)
    ix_spouse_student_number = models.CharField(max_length=20, blank=True)
    buildings_name = models.CharField(max_length=50, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    rooms_address_1b = models.CharField(max_length=50, blank=True)
    rooms_address_2 = models.CharField(max_length=50, blank=True)
    rooms_address_3 = models.CharField(max_length=50, blank=True)
    rooms_postcode = models.CharField(max_length=15, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    key_id = models.CharField(max_length=50, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_original_rate = models.IntegerField(null=True, blank=True)
    plan_type_description = models.CharField(max_length=30, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    plan_person_original_rate = models.IntegerField(null=True, blank=True)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    vac_address_1 = models.CharField(max_length=50, blank=True)
    vac_address_1b = models.CharField(max_length=50, blank=True)
    vac_address_2 = models.CharField(max_length=50, blank=True)
    vac_postcode = models.CharField(max_length=15, blank=True)
    vac_address_3 = models.CharField(max_length=50, blank=True)
    vac_phone = models.CharField(max_length=25, blank=True)
    vac_fax = models.CharField(max_length=25, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    financial_hold = models.CharField(max_length=3, blank=True)
    judicial_hold = models.CharField(max_length=3, blank=True)
    privacy_flag_1 = models.CharField(max_length=3, blank=True)
    privacy_flag_2 = models.CharField(max_length=3, blank=True)
    privacy_flag_3 = models.CharField(max_length=3, blank=True)
    incident_type_6 = models.CharField(max_length=3, blank=True)
    incident_type_7 = models.CharField(max_length=3, blank=True)
    incident_type_8 = models.CharField(max_length=3, blank=True)
    incident_type_9 = models.CharField(max_length=3, blank=True)
    incident_type_10 = models.CharField(max_length=3, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    cont_address_1 = models.CharField(max_length=50, blank=True)
    cont_address_1b = models.CharField(max_length=50, blank=True)
    cont_address_2 = models.CharField(max_length=50, blank=True)
    cont_postcode = models.CharField(max_length=15, blank=True)
    cont_address_3 = models.CharField(max_length=50, blank=True)
    cont_phone = models.CharField(max_length=25, blank=True)
    mail_address_1 = models.CharField(max_length=50, blank=True)
    mail_address_1b = models.CharField(max_length=50, blank=True)
    mail_address_2 = models.CharField(max_length=50, blank=True)
    mail_address_3 = models.CharField(max_length=50, blank=True)
    mail_postcode = models.CharField(max_length=15, blank=True)
    mail_phone = models.CharField(max_length=25, blank=True)
    camp_address_1 = models.CharField(max_length=50, blank=True)
    camp_address_1b = models.CharField(max_length=50, blank=True)
    camp_address_2 = models.CharField(max_length=50, blank=True)
    camp_postcode = models.CharField(max_length=15, blank=True)
    camp_address_3 = models.CharField(max_length=50, blank=True)
    camp_phone = models.CharField(max_length=25, blank=True)
    forw_address_1 = models.CharField(max_length=50, blank=True)
    forw_address_1b = models.CharField(max_length=50, blank=True)
    forw_address_2 = models.CharField(max_length=50, blank=True)
    forw_address_3 = models.CharField(max_length=50, blank=True)
    forw_postcode = models.CharField(max_length=15, blank=True)
    forw_phone = models.CharField(max_length=25, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_state = models.CharField(max_length=15, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    fk_spouse_rms_id = models.IntegerField(null=True, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_rooms_state = models.CharField(max_length=50, blank=True)
    fk_rooms_type = models.CharField(max_length=50, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    fk_plan_type = models.CharField(max_length=15, blank=True)
    fk_plan_person_move_in_date = models.DateField(null=True, blank=True)
    fk_plan_person_rate_code = models.CharField(max_length=10, blank=True)
    fk_plan_order_id = models.IntegerField(null=True, blank=True)
    sk_plan_order_id = models.CharField(max_length=20, blank=True)
    fk_plan_person_billing_type = models.CharField(max_length=50, blank=True)
    fk_contact_id = models.IntegerField(null=True, blank=True)
    fk_vac_state = models.CharField(max_length=15, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    fk_camp_state = models.CharField(max_length=15, blank=True)
    fk_forw_state = models.CharField(max_length=15, blank=True)
    fk_mail_state = models.CharField(max_length=15, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    cont_email = models.CharField(max_length=50, blank=True)
    camp_email = models.CharField(max_length=50, blank=True)
    forw_email = models.CharField(max_length=50, blank=True)
    mail_email = models.CharField(max_length=50, blank=True)
    vac_email = models.CharField(max_length=50, blank=True)
    fk_cont_state = models.CharField(max_length=15, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_address_type = models.CharField(max_length=15, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField(null=True, blank=True)
    e_mailing_status = models.IntegerField(null=True, blank=True)
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    status = models.CharField(max_length=5, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    individual_billing = models.IntegerField(null=True, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_ex_prof_assign'

class IntrTExHeaderFile(models.Model):
    header01 = models.CharField(max_length=255, blank=True)
    header02 = models.CharField(max_length=255, blank=True)
    header03 = models.CharField(max_length=255, blank=True)
    header04 = models.CharField(max_length=255, blank=True)
    header05 = models.CharField(max_length=255, blank=True)
    header06 = models.CharField(max_length=255, blank=True)
    header07 = models.CharField(max_length=255, blank=True)
    header08 = models.CharField(max_length=255, blank=True)
    header09 = models.CharField(max_length=255, blank=True)
    header10 = models.CharField(max_length=255, blank=True)
    header11 = models.CharField(max_length=255, blank=True)
    header12 = models.CharField(max_length=255, blank=True)
    header13 = models.CharField(max_length=255, blank=True)
    header14 = models.CharField(max_length=255, blank=True)
    header15 = models.CharField(max_length=255, blank=True)
    header16 = models.CharField(max_length=255, blank=True)
    header17 = models.CharField(max_length=255, blank=True)
    header18 = models.CharField(max_length=255, blank=True)
    header19 = models.CharField(max_length=255, blank=True)
    header20 = models.CharField(max_length=255, blank=True)
    process_id = models.IntegerField(null=True, blank=True)
    headerfooter = models.CharField(max_length=1, blank=True)
    output_order = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_ex_header_file'

class IntrTExFinSums(models.Model):
    pk_data_id = models.IntegerField(unique=True)
    rms_id = models.IntegerField(null=True, blank=True)
    open_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    txid = models.CharField(max_length=20, blank=True)
    txtype = models.CharField(max_length=10, blank=True)
    taxtype1 = models.CharField(max_length=10, blank=True)
    taxtype2 = models.CharField(max_length=10, blank=True)
    taxtype3 = models.CharField(max_length=10, blank=True)
    taxtype4 = models.CharField(max_length=10, blank=True)
    entry_date = models.DateField(null=True, blank=True)
    invoice_description = models.CharField(max_length=250, blank=True)
    entered_by = models.CharField(max_length=50, blank=True)
    invoice_no = models.CharField(max_length=10, blank=True)
    fiscal_year = models.CharField(max_length=4, blank=True)
    dr_account = models.CharField(max_length=12, blank=True)
    cr_account = models.CharField(max_length=12, blank=True)
    d_c = models.CharField(max_length=1, blank=True)
    basic_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax1_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tamount = models.CharField(max_length=15, blank=True)
    posting_id = models.IntegerField(null=True, blank=True)
    payment_no = models.IntegerField(null=True, blank=True)
    transaction_type_default = models.IntegerField(null=True, blank=True)
    charges = models.IntegerField(null=True, blank=True)
    tax_txtype1 = models.CharField(max_length=10, blank=True)
    tax_txtype2 = models.CharField(max_length=10, blank=True)
    tax_txtype3 = models.CharField(max_length=10, blank=True)
    tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    uploadable = models.IntegerField(null=True, blank=True)
    transaction_type_description = models.CharField(max_length=50, blank=True)
    secondary_code = models.CharField(max_length=50, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    debit_account = models.CharField(max_length=12, blank=True)
    credit_account = models.CharField(max_length=12, blank=True)
    min_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    max_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    account_name = models.CharField(max_length=50, blank=True)
    account_type = models.CharField(max_length=20, blank=True)
    alias_code = models.CharField(max_length=30, blank=True)
    ix_receivable = models.IntegerField(null=True, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    call_accounting_id = models.IntegerField(null=True, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    marital_status = models.CharField(max_length=25, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    state = models.CharField(max_length=8, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    religion = models.CharField(max_length=20, blank=True)
    student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    school = models.CharField(max_length=30, blank=True)
    major = models.CharField(max_length=30, blank=True)
    student_profile_comment = models.TextField(blank=True)
    interests = models.CharField(max_length=50, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    school_category = models.CharField(max_length=10, blank=True)
    location = models.CharField(max_length=10, blank=True)
    institution = models.CharField(max_length=15, blank=True)
    catering = models.CharField(max_length=5, blank=True)
    ethnicity = models.CharField(max_length=25, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    junk1 = models.CharField(max_length=50, blank=True)
    junk2 = models.CharField(max_length=50, blank=True)
    junk3 = models.CharField(max_length=50, blank=True)
    junk4 = models.CharField(max_length=50, blank=True)
    junk5 = models.CharField(max_length=50, blank=True)
    junk6 = models.CharField(max_length=50, blank=True)
    junk7 = models.CharField(max_length=50, blank=True)
    junk8 = models.CharField(max_length=50, blank=True)
    junk9 = models.CharField(max_length=50, blank=True)
    junk10 = models.CharField(max_length=50, blank=True)
    junk11 = models.CharField(max_length=50, blank=True)
    posted = models.DateField(null=True, blank=True)
    fk_dr_cr = models.CharField(max_length=2, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_ex_fin_sums'

class IntrTExBlackboardBatch(models.Model):
    fk_rms_id = models.IntegerField(null=True, blank=True)
    card_holder_instruction_block = models.CharField(max_length=250, blank=True)
    record_number = models.IntegerField(null=True, blank=True)
    campus_id = models.CharField(max_length=19, blank=True)
    name = models.CharField(max_length=30, blank=True)
    user_defined_string = models.CharField(max_length=300, blank=True)
    record_type = models.CharField(max_length=1)
    issue_date = models.DateField()
    expiration_date = models.CharField(max_length=8, blank=True)
    classification = models.CharField(max_length=1)
    class Meta:
        db_table = u'intr_t_ex_blackboard_batch'

class IntrTExApplication(models.Model):
    pk_data_id = models.IntegerField()
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=4, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    reference_sent = models.IntegerField(null=True, blank=True)
    reference_2_sent = models.IntegerField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    application_registration_paid = models.IntegerField(null=True, blank=True)
    financial_guarantee = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    appl_priority_allocation = models.IntegerField(null=True, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    status = models.CharField(max_length=2, blank=True)
    extra_info1 = models.CharField(max_length=250, blank=True)
    extra_info2 = models.CharField(max_length=250, blank=True)
    extra_info3 = models.CharField(max_length=250, blank=True)
    extra_info4 = models.CharField(max_length=250, blank=True)
    extra_info5 = models.CharField(max_length=250, blank=True)
    extra_info6 = models.CharField(max_length=250, blank=True)
    extra_info7 = models.CharField(max_length=250, blank=True)
    extra_info8 = models.CharField(max_length=250, blank=True)
    extra_info9 = models.CharField(max_length=250, blank=True)
    extra_info10 = models.CharField(max_length=250, blank=True)
    term_code = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_ex_application'

class IntrTExclusions(models.Model):
    ck_process_id = models.IntegerField()
    ck_exclusion_type = models.CharField(max_length=10)
    ck_exclusion_value = models.CharField(max_length=50)
    class Meta:
        db_table = u'intr_t_exclusions'

class IntrTCurrentUsrdefSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    ix_student_number = models.CharField(max_length=20, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField(null=True, blank=True)
    user_def_yes_no2 = models.IntegerField(null=True, blank=True)
    user_def_yes_no3 = models.IntegerField(null=True, blank=True)
    user_def_yes_no4 = models.IntegerField(null=True, blank=True)
    user_def_yes_no5 = models.IntegerField(null=True, blank=True)
    user_def_yes_no6 = models.IntegerField(null=True, blank=True)
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_current_usrdef_snapshot'

class IntrTCurrentPlanSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_plan_type = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    fk_plan_order_id = models.IntegerField(null=True, blank=True)
    sk_plan_order_id = models.CharField(max_length=20, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    status = models.CharField(max_length=10, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'intr_t_current_plan_snapshot'

class IntrTCurrentPersonSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=25, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    title = models.CharField(max_length=5, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_address_type = models.CharField(max_length=15, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField(null=True, blank=True)
    e_mailing_status = models.IntegerField(null=True, blank=True)
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    change = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'intr_t_current_person_snapshot'

class IntrTCurrentDecbalSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_tx_id = models.IntegerField()
    fk_txtype = models.CharField(max_length=10, blank=True)
    fk_rms_id = models.IntegerField()
    ledger_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    class Meta:
        db_table = u'intr_t_current_decbal_snapshot'

class IntrTCurrentAssignSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_move_in_date = models.DateField(null=True, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    fk_room_order_id = models.IntegerField(null=True, blank=True)
    sk_room_order_id = models.CharField(max_length=20, blank=True)
    individual_billing = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    fk_rooms_config_no = models.IntegerField(null=True, blank=True)
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=250, blank=True)
    fk_billing_type = models.CharField(max_length=50, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_building_id = models.CharField(max_length=15, blank=True)
    secondary_bed_space = models.CharField(max_length=10, blank=True)
    phone_extension = models.CharField(max_length=25, blank=True)
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    fk_rooms_type = models.CharField(max_length=15, blank=True)
    change = models.IntegerField(null=True, blank=True)
    status = models.CharField(max_length=10, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    fk_rate_config_no = models.IntegerField(null=True, blank=True)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'intr_t_current_assign_snapshot'

class IntrTCurrentApplSnapshot(models.Model):
    pk_process_id = models.IntegerField(null=True, blank=True)
    pk_application_no = models.IntegerField(null=True, blank=True)
    fk_rms_id = models.IntegerField()
    application_person_type = models.CharField(max_length=4, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    reference_sent = models.IntegerField(null=True, blank=True)
    reference_2_sent = models.IntegerField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    application_registration_paid = models.IntegerField(null=True, blank=True)
    financial_guarantee = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    lottery_number = models.IntegerField(null=True, blank=True)
    appl_priority_allocation = models.IntegerField(null=True, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    cancel_code = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    cancellation_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    change = models.IntegerField(null=True, blank=True)
    fk_application_type = models.CharField(max_length=50, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    application_period_name = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'intr_t_current_appl_snapshot'

class InetTPageFlow(models.Model):
    ck_pagename = models.ForeignKey(InetTPages, unique=True, db_column='ck_pagename')
    ck_stage = models.IntegerField(unique=True)
    group_level = models.IntegerField(null=True, blank=True)
    flow_comments = models.CharField(max_length=250, blank=True)
    accept_page = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'inet_t_page_flow'

class InetTPages(models.Model):
    pk_pagename = models.CharField(max_length=50, unique=True)
    pageno = models.IntegerField()
    tabname = models.CharField(max_length=50, blank=True)
    groupname = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'inet_t_pages'

class InetTGroups(models.Model):
    group_id = models.IntegerField(unique=True)
    group_description = models.CharField(max_length=50)
    class Meta:
        db_table = u'inet_t_groups'

class InetTCurrentFlows(models.Model):
    pk_flow_id = models.IntegerField(unique=True)
    fk_pagename = models.CharField(max_length=50)
    fk_stage = models.IntegerField()
    rejected = models.IntegerField(null=True, blank=True)
    flow_comments = models.CharField(max_length=250, blank=True)
    completeflow = models.IntegerField(null=True, blank=True)
    date_created = models.DateField(null=True, blank=True)
    opened_by = models.IntegerField(null=True, blank=True)
    university_id = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'inet_t_current_flows'

class InctTIncidentPerson(models.Model):
    ck_incident = models.ForeignKey(InctTIncidents, unique=True)
    ck_rms = models.ForeignKey(PpleTPerson)
    ck_incident_action = models.ForeignKey(LUTIncidentAction, unique=True)
    fk_flag_code = models.ForeignKey(LUTFlags, db_column='fk_flag_code')
    action_date = models.DateField(null=True, blank=True)
    action_note = models.TextField(blank=True)
    action_deleted = models.IntegerField()
    action_deleted_date = models.DateField(null=True, blank=True)
    action_deletedby = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'inct_t_incident_person'

class InctTIncidents(models.Model):
    pk_incident_id = models.IntegerField(primary_key=True)
    fk_inc_location_code = models.ForeignKey(LUTIncidentLocation, db_column='fk_inc_location_code')
    fk_inc_type_code = models.ForeignKey(LUTIncidents, db_column='fk_inc_type_code')
    inc_date = models.DateField(null=True, blank=True)
    inc_time = models.DateField(null=True, blank=True)
    inc_note = models.TextField(blank=True)
    inc_deleted = models.IntegerField()
    inc_deleted_date = models.DateField(null=True, blank=True)
    inc_deletedby = models.CharField(max_length=25, blank=True)
    fk_inc_cleary_code = models.ForeignKey(LUTIncidentsClearycodes, null=True, db_column='fk_inc_cleary_code', blank=True)
    class Meta:
        db_table = u'inct_t_incidents'

class GlblTVersionInfo(models.Model):
    build_no = models.IntegerField(unique=True)
    version_no = models.CharField(max_length=50)
    build_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'glbl_t_version_info'

class GlblTVersionHistory(models.Model):
    ck_release = models.CharField(max_length=20, unique=True)
    ck_install_date = models.DateField(unique=True)
    updated_by = models.CharField(max_length=50)
    update_type = models.CharField(max_length=3)
    status = models.CharField(max_length=50)
    class Meta:
        db_table = u'glbl_t_version_history'

class GlblTUserreports(models.Model):
    ck_userreport_name = models.CharField(max_length=70, unique=True)
    ck_userlocation = models.CharField(max_length=100, unique=True)
    report_name = models.CharField(max_length=70, blank=True)
    usrprefix = models.CharField(max_length=8, blank=True)
    additional_info = models.CharField(max_length=200, blank=True)
    usradditional_info = models.CharField(max_length=100, blank=True)
    userreports_usrcontext = models.CharField(max_length=50, blank=True)
    useprinter = models.CharField(max_length=12, blank=True)
    userreports_createdby = models.CharField(max_length=50, blank=True)
    userreports_created_date = models.DateField(null=True, blank=True)
    userreports_usrsql = models.TextField(blank=True)
    class Meta:
        db_table = u'glbl_t_userreports'

class GlblTUsermailmerge(models.Model):
    ck_stage = models.IntegerField()
    ck_application_type = models.CharField(max_length=50)
    stage_description = models.CharField(max_length=30, blank=True)
    function_type = models.CharField(max_length=50, blank=True)
    function_perform = models.CharField(max_length=100, blank=True)
    sql_statement = models.TextField(blank=True)
    stage_used = models.IntegerField()
    class Meta:
        db_table = u'glbl_t_usermailmerge'

class GlblTTrialdate(models.Model):
    date_id = models.IntegerField(unique=True)
    curr_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'glbl_t_trialdate'

class GlblTTableFields(models.Model):
    pk_fields_field_name = models.CharField(max_length=50)
    fk_fields_table = models.CharField(max_length=50)
    fields_type = models.CharField(max_length=50)
    translated_table = models.CharField(max_length=50)
    translated_field_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'glbl_t_table_fields'

class GlblTSystemInfo(models.Model):
    pk_parameter_name = models.CharField(max_length=25, unique=True)
    parameter_value = models.CharField(max_length=40, blank=True)
    class Meta:
        db_table = u'glbl_t_system_info'

class GlblTSwipecardDtls(models.Model):
    pk_userid = models.DecimalField(unique=True, max_digits=0, decimal_places=-127)
    default_value = models.CharField(max_length=1000)
    class Meta:
        db_table = u'glbl_t_swipecard_dtls'

class GlblTReports(models.Model):
    ck_report_name = models.CharField(max_length=70)
    ck_location = models.CharField(max_length=10)
    reports_prefix = models.CharField(max_length=8, blank=True)
    reports_additional_info = models.CharField(max_length=100)
    reports_context = models.CharField(max_length=50, blank=True)
    reports_printer = models.CharField(max_length=12, blank=True)
    class Meta:
        db_table = u'glbl_t_reports'

class GlblTPersonTableRelations(models.Model):
    foreign_table = models.CharField(max_length=100, unique=True)
    foreign_field = models.CharField(max_length=60, blank=True)
    class Meta:
        db_table = u'glbl_t_person_table_relations'

class GlblTModuleName(models.Model):
    pk_fields_table = models.CharField(max_length=50)
    module_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'glbl_t_module_name'

class GlblTMenuShowSelection(models.Model):
    ck_showname = models.CharField(max_length=50)
    ck_showmenu = models.CharField(max_length=50)
    showquery = models.CharField(max_length=100, blank=True)
    showtype = models.CharField(max_length=50)
    menu_selection_person_type = models.CharField(max_length=50, blank=True)
    reference_text = models.CharField(max_length=100, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'glbl_t_menu_show_selection'

class GlblTLabel(models.Model):
    pk_rms = models.ForeignKey(PpleTPerson, unique=True)
    label_printed_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'glbl_t_label'

class GlblTDefaults(models.Model):
    pk_def_name = models.CharField(max_length=50, unique=True)
    default_value = models.CharField(max_length=1000, blank=True)
    def_type = models.CharField(max_length=1, blank=True)
    class Meta:
        db_table = u'glbl_t_defaults'

class GlblTCustomForms(models.Model):
    pk_form_name = models.CharField(max_length=70, unique=True)
    forms_prefix = models.CharField(max_length=8, blank=True)
    forms_additional_info = models.CharField(max_length=100, blank=True)
    class Meta:
        db_table = u'glbl_t_custom_forms'

class GlblTComponentVersion(models.Model):
    pk_component_name = models.CharField(max_length=100)
    release = models.CharField(max_length=20)
    install_date = models.DateField()
    updated_by = models.CharField(max_length=50)
    update_type = models.CharField(max_length=3)
    class Meta:
        db_table = u'glbl_t_component_version'

class GlblT1RowTable(models.Model):
    pk_field1 = models.CharField(max_length=50, unique=True)
    class Meta:
        db_table = u'glbl_t_1row_table'

class FlowTStudentProfile(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_nationality = models.ForeignKey(LUTNationality, db_column='fk_nationality')
    fk_school_category = models.ForeignKey(LUTSchoolCategory, db_column='fk_school_category')
    fk_location = models.ForeignKey(LUTLocation, db_column='fk_location')
    fk_institution = models.ForeignKey(LUTInstitution, db_column='fk_institution')
    fk_catering = models.ForeignKey(LUTDiet, db_column='fk_catering')
    fk_ethnicity = models.ForeignKey(LUTEthnicity, db_column='fk_ethnicity')
    fk_major = models.ForeignKey(LUTMajors, db_column='fk_major')
    fk_school = models.ForeignKey(LUTDegree, db_column='fk_school')
    fk_religion = models.ForeignKey(LUTReligion, db_column='fk_religion')
    fk_student_type = models.CharField(max_length=5)
    college_year = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField()
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.ForeignKey(LUTUniversityStatus, db_column='nonstud_university_status')
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'flow_t_student_profile'

class FlowTStudentCreateaccount(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25)
    comparision_key = models.CharField(max_length=50)
    sex = models.CharField(max_length=1)
    screen_name = models.CharField(max_length=250)
    pin_number = models.CharField(max_length=250)
    user_name = models.CharField(max_length=250)
    password = models.CharField(max_length=250)
    email = models.CharField(max_length=50)
    class Meta:
        db_table = u'flow_t_student_createaccount'

class FlowTRoomPreferences(models.Model):
    ck_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    ck_preference_no = models.IntegerField(unique=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_application_no = models.IntegerField()
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10, unique=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.DecimalField(null=True, max_digits=0, decimal_places=-127, blank=True)
    class Meta:
        db_table = u'flow_t_room_preferences'

class FlowTRoomPerson(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_bed_space = models.ForeignKey(RmgtTRooms, db_column='fk_bed_space')
    move_in_date = models.DateField()
    fk_rooms_config_no = models.ForeignKey(RmgtTRoomConfigs, db_column='fk_rooms_config_no')
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    fk_billing_type = models.ForeignKey(AcctTBillingType, db_column='fk_billing_type')
    modtype = models.CharField(max_length=10)
    individual_billing = models.IntegerField()
    room_person_booking_type = models.CharField(max_length=5, blank=True)
    room_person_move_out_date = models.DateField(null=True, blank=True)
    room_person_booked_by = models.CharField(max_length=30, blank=True)
    check_in = models.DateField(null=True, blank=True)
    check_out = models.DateField(null=True, blank=True)
    room_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    room_person_billed_up_to = models.DateField(null=True, blank=True)
    room_person_notes = models.CharField(max_length=100, blank=True)
    turn_around_date = models.DateField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    old_bedspace = models.CharField(max_length=10, blank=True)
    old_moveindate = models.DateField(null=True, blank=True)
    change_type = models.CharField(max_length=50, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'flow_t_room_person'

class FlowTRoommatePreferences(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_application_no = models.IntegerField()
    modtype = models.CharField(max_length=10)
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_group = models.IntegerField()
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'flow_t_roommate_preferences'

class FlowTPlanPerson(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_plan_type = models.ForeignKey(RmgtTPlanType, db_column='fk_plan_type')
    move_in_date = models.DateField()
    modtype = models.CharField(max_length=10)
    change_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5, blank=True)
    plan_person_rate = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    old_plan_type = models.CharField(max_length=50, blank=True)
    old_move_in_date = models.DateField(null=True, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'flow_t_plan_person'

class FlowTPerson(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.ForeignKey(LUTMaritalStatus, db_column='fk_marital_status')
    modtype = models.CharField(max_length=10, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    title = models.CharField(max_length=5, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.IntegerField()
    class Meta:
        db_table = u'flow_t_person'

class FlowTPayments(models.Model):
    ck_flow = models.ForeignKey(InetTCurrentFlows)
    ck_item_no = models.IntegerField()
    fk_rms = models.ForeignKey(PpleTPerson)
    modtype = models.CharField(max_length=10)
    invoice_no = models.CharField(max_length=10, blank=True)
    txn_id = models.CharField(max_length=20, blank=True)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    payment_type = models.CharField(max_length=8, blank=True)
    payment_date = models.DateField(null=True, blank=True)
    item = models.CharField(max_length=250, blank=True)
    payment_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    posting_id = models.IntegerField(null=True, blank=True)
    application_no = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'flow_t_payments'

class FlowTParking(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_vehicle_id = models.IntegerField()
    modtype = models.CharField(max_length=10)
    make = models.CharField(max_length=50, blank=True)
    model = models.CharField(max_length=50, blank=True)
    parking_year = models.CharField(max_length=50, blank=True)
    color = models.CharField(max_length=50, blank=True)
    license_plate = models.CharField(max_length=50, blank=True)
    permit_number = models.CharField(max_length=20, blank=True)
    lot_number = models.CharField(max_length=50, blank=True)
    permit_expiration_date = models.CharField(max_length=50, blank=True)
    registered_owner = models.CharField(max_length=50, blank=True)
    parking_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'flow_t_parking'

class FlowTParentCreateaccount(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows)
    ix_last_name = models.CharField(max_length=25)
    ix_first_name = models.CharField(max_length=25)
    ix_middle_name = models.CharField(max_length=25)
    sex = models.CharField(max_length=1)
    screen_name = models.CharField(max_length=250)
    pin_number = models.CharField(max_length=250)
    user_name = models.CharField(max_length=250)
    password = models.CharField(max_length=250)
    email = models.CharField(max_length=50)
    phonenumber = models.CharField(max_length=25)
    class Meta:
        db_table = u'flow_t_parent_createaccount'

class FlowTOccupants(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_occupant = models.ForeignKey(PpleTOccupants, null=True, blank=True)
    fk_relationship = models.ForeignKey(LUTOccupants, db_column='fk_relationship')
    modtype = models.CharField(max_length=10)
    occupants_first_name = models.CharField(max_length=50, blank=True)
    occupants_last_name = models.CharField(max_length=50, blank=True)
    occupants_middle_name = models.CharField(max_length=25, blank=True)
    occupants_birthdate = models.DateField(null=True, blank=True)
    occupants_gender = models.CharField(max_length=50, blank=True)
    occupants_student_number = models.CharField(max_length=20, blank=True)
    occupants_info1 = models.CharField(max_length=50, blank=True)
    occupants_info2 = models.CharField(max_length=50, blank=True)
    occupants_national_id = models.CharField(max_length=15, blank=True)
    occupants_notes = models.TextField(blank=True)
    class Meta:
        db_table = u'flow_t_occupants'

class FlowTMaintenanceReq(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_request_no = models.CharField(max_length=6)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_bed_space = models.ForeignKey(RmgtTRooms, db_column='fk_bed_space')
    fk_maintenance_code = models.ForeignKey(LUTRmgtTRoomMaintCode, db_column='fk_maintenance_code')
    fk_referred_to = models.ForeignKey(RmgtTMaintenanceRefTo, null=True, blank=True)
    modtype = models.CharField(max_length=50)
    requested = models.DateField(null=True, blank=True)
    processed = models.DateField(null=True, blank=True)
    request_comment = models.TextField(blank=True)
    maintenance_request_cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    work_comment = models.TextField(blank=True)
    response_time = models.IntegerField()
    work_started = models.DateField(null=True, blank=True)
    work_time = models.IntegerField()
    requested_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'flow_t_maintenance_req'

class FlowTCreditCardInformation(models.Model):
    ck_flow = models.ForeignKey(InetTCurrentFlows, primary_key=True)
    ck_card_choice_no = models.CharField(max_length=10, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    modtype = models.CharField(max_length=10)
    name_on_card = models.CharField(max_length=50)
    card_type = models.CharField(max_length=10)
    card_number = models.CharField(max_length=48)
    exp_date = models.CharField(max_length=5)
    billing_address_1 = models.CharField(max_length=50, blank=True)
    billing_address_1b = models.CharField(max_length=50, blank=True)
    billing_address_2 = models.CharField(max_length=50, blank=True)
    fk_billing_state = models.CharField(max_length=8)
    billing_postcode = models.CharField(max_length=15, blank=True)
    billing_address_3 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'flow_t_credit_card_information'

class FlowTContactProfile(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_contact_id = models.IntegerField()
    modtype = models.CharField(max_length=10)
    contact_profile_relation = models.CharField(max_length=15, blank=True)
    occupation = models.CharField(max_length=50, blank=True)
    title = models.CharField(max_length=5, blank=True)
    contact_first_name = models.CharField(max_length=25)
    contact_last_name = models.CharField(max_length=25)
    contact_middle_name = models.CharField(max_length=25, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'flow_t_contact_profile'

class FlowTCcardDetails(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    modtype = models.CharField(max_length=10)
    card_type = models.CharField(max_length=10)
    name_on_card = models.CharField(max_length=50)
    account_number = models.CharField(max_length=25)
    exp_date = models.CharField(max_length=5)
    class Meta:
        db_table = u'flow_t_ccard_details'

class FlowTApplication(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    modtype = models.CharField(max_length=10)
    application_no = models.IntegerField()
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=5, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    cancel_code = models.CharField(max_length=12, blank=True)
    fk_pref_payment_plan = models.ForeignKey(LUTPaymentPlan, null=True, db_column='fk_pref_payment_plan', blank=True)
    fk_pref_meal_plan = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan', blank=True)
    appl_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_2', blank=True)
    fk_pref_meal_plan_3 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_3', blank=True)
    fk_pref_meal_plan_4 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_4', blank=True)
    fk_pref_meal_plan_5 = models.ForeignKey(RmgtTPlanType, null=True, db_column='fk_pref_meal_plan_5', blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    payment_status = models.IntegerField()
    class Meta:
        db_table = u'flow_t_application'

class FlowTAddress(models.Model):
    pk_flow = models.ForeignKey(InetTCurrentFlows, unique=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_address_type = models.CharField(max_length=15)
    modtype = models.CharField(max_length=10)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.ForeignKey(LUTState, db_column='fk_state')
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'flow_t_address'

class Dsql(models.Model):
    id = models.IntegerField(null=True, blank=True)
    strsql = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'dsql'

class ConfTUserdefined(models.Model):
    pk_conference_id = models.IntegerField()
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'conf_t_userdefined'

class ConfTSnackPerson(models.Model):
    pk_snackbook_id = models.IntegerField(unique=True)
    fk_item = models.ForeignKey(ConfTBreakItem)
    fk_break_item_type = models.ForeignKey(ConfTBreakItem)
    fk_rms = models.ForeignKey(PpleTPerson)
    snack_person_date = models.DateField()
    fk_conference = models.ForeignKey(ConfTEvents)
    fk_event = models.ForeignKey(ConfTEvents)
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    fk_order = models.ForeignKey(AcctTOrders)
    sk_snack_order_id = models.CharField(max_length=20, blank=True)
    snack_person_servings = models.IntegerField()
    snack_person_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    snack_person_booked_by = models.CharField(max_length=30, blank=True)
    snack_person_billed = models.IntegerField()
    snack_person_billing_type = models.ForeignKey(AcctTBillingType, db_column='snack_person_billing_type')
    snack_notes = models.CharField(max_length=250, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    snack_person_master_booking = models.IntegerField(null=True, blank=True)
    snack_person_billed_up_to = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'conf_t_snack_person'

class ConfTQuoteSnacks(models.Model):
    pk_table_key = models.IntegerField(unique=True)
    fk_quote_no = models.ForeignKey(ConfTQuote, db_column='fk_quote_no')
    fk_item = models.ForeignKey(ConfTBreakItem)
    fk_break_item_type = models.ForeignKey(ConfTBreakItem)
    quote_snacks_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    quote_snacks_date = models.DateField(null=True, blank=True)
    quote_snacks_end_date = models.DateField(null=True, blank=True)
    quote_snacks_servings = models.IntegerField(null=True, blank=True)
    quote_snacks_hour = models.DateField()
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_snacks'

class ConfTQuoteMiscellaneous(models.Model):
    pk_table_key = models.IntegerField(unique=True)
    fk_miscellaneous = models.ForeignKey(ConfTMiscellaneous)
    fk_quote_no = models.ForeignKey(ConfTQuote, db_column='fk_quote_no')
    quote_miscellaneous_date = models.DateField(null=True, blank=True)
    quote_miscellaneous_end_date = models.DateField(null=True, blank=True)
    quote_miscellaneous_hour = models.DateField(null=True, blank=True)
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_miscellaneous_no_of_hour = models.DateField()
    units = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_miscellaneous'

class ConfTQuoteMenus(models.Model):
    pk_table_key = models.IntegerField(primary_key=True)
    fk_quote_no = models.ForeignKey(ConfTQuote, db_column='fk_quote_no')
    pk_menu = models.ForeignKey(ConfTMenu)
    quote_menus_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    quote_menus_servings = models.IntegerField(null=True, blank=True)
    quote_menus_date = models.DateField(null=True, blank=True)
    quote_menus_end_date = models.DateField(null=True, blank=True)
    quote_menus_hour = models.DateField()
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_menus'

class ConfTQuoteFacilities(models.Model):
    pk_table_key = models.IntegerField(unique=True)
    pk_facility = models.ForeignKey(ConfTFacilities)
    fk_quote_no = models.ForeignKey(ConfTQuote, db_column='fk_quote_no')
    quote_facilities_hour = models.DateField()
    quote_faclities_date = models.DateField()
    quote_faclities_end_date = models.DateField()
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_facilities_no_of_hours = models.DecimalField(max_digits=5, decimal_places=2)
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_facilities'

class ConfTQuoteEquipment(models.Model):
    pk_table_key = models.IntegerField(unique=True)
    fk_quote_equipment_type = models.ForeignKey(ConfTEquipmentTypes, db_column='fk_quote_equipment_type')
    fk_quote_no = models.ForeignKey(ConfTQuote, unique=True, db_column='fk_quote_no')
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_equipment_date = models.DateField(null=True, blank=True)
    quote_equipment_hour = models.DateField(null=True, blank=True)
    quote_equipment_end_date = models.DateField(null=True, blank=True)
    quote_equipment_no_of_hours = models.DecimalField(max_digits=5, decimal_places=2)
    fk_rate_code = models.CharField(max_length=10)
    fk_serial_no = models.CharField(max_length=20)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_equipment'

class ConfTQuoteAccommodation(models.Model):
    pk_table_key = models.IntegerField(unique=True)
    fk_quote_no = models.ForeignKey(ConfTQuote, db_column='fk_quote_no')
    fk_room_type = models.ForeignKey(RmgtTRoomType, db_column='fk_room_type')
    quote_accommodation_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    beds = models.IntegerField()
    quote_move_in_date = models.DateField(null=True, blank=True)
    quote_move_out_date = models.DateField(null=True, blank=True)
    nightly_cost = models.DecimalField(max_digits=18, decimal_places=5)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'conf_t_quote_accommodation'

class ConfTQuote(models.Model):
    pk_quote_no = models.IntegerField(unique=True)
    fk_conference = models.ForeignKey(ConfTConference)
    quote_user = models.CharField(max_length=20)
    quote_status = models.CharField(max_length=15)
    class Meta:
        db_table = u'conf_t_quote'

class ConfTNotes(models.Model):
    pk_notesid = models.IntegerField(unique=True)
    fk_conference = models.ForeignKey(ConfTConference)
    username = models.CharField(max_length=50)
    notes_date = models.DateField()
    notes = models.TextField()
    class Meta:
        db_table = u'conf_t_notes'

class ConfTMiscType(models.Model):
    pk_misc_type_id = models.IntegerField(unique=True)
    fk_rate_code = models.CharField(max_length=10)
    misc_type_code = models.CharField(max_length=8, unique=True)
    misc_type_description = models.CharField(max_length=30)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_misc_type'

class ConfTMiscPerson(models.Model):
    pk_miscbook_id = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_miscellaneous = models.ForeignKey(ConfTMiscellaneous)
    miscellaneous_person_date = models.DateField()
    fk_conference = models.ForeignKey(ConfTEvents)
    fk_event = models.ForeignKey(ConfTEvents)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    sk_miscellaneous_order_id = models.CharField(max_length=20, blank=True)
    misc_person_move_out_date = models.DateField()
    miscellaneous_person_booked_by = models.CharField(max_length=30, blank=True)
    miscellaneous_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    miscellaneous_person_billed = models.IntegerField()
    misc_person_billing_type = models.ForeignKey(AcctTBillingType, db_column='misc_person_billing_type')
    miscellaneous_notes = models.CharField(max_length=250, blank=True)
    misc_person_master_booking = models.IntegerField(null=True, blank=True)
    misc_person_billed_up_to = models.DateField(null=True, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    units = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'conf_t_misc_person'

class ConfTMiscellaneous(models.Model):
    pk_miscellaneous_id = models.IntegerField(unique=True)
    fk_misc_type = models.ForeignKey(ConfTMiscType)
    misc_code = models.CharField(max_length=10, unique=True)
    miscellaneous_description = models.CharField(max_length=30)
    image_url = models.CharField(max_length=1000, blank=True)
    attributes_url = models.CharField(max_length=1000, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_miscellaneous'

class ConfTMenuType(models.Model):
    pk_menu_type_id = models.IntegerField(unique=True)
    menu_type_code = models.CharField(max_length=20, unique=True)
    menu_type_description = models.CharField(max_length=30, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_menu_type'

class ConfTMenuPerson(models.Model):
    pk_menubook_id = models.IntegerField(primary_key=True)
    fk_menu = models.ForeignKey(ConfTMenu)
    fk_rms = models.ForeignKey(PpleTPerson)
    menu_person_date = models.DateField()
    fk_conference = models.ForeignKey(ConfTEvents)
    fk_event = models.ForeignKey(ConfTEvents)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    sk_menu_order_id = models.CharField(max_length=20, blank=True)
    menu_person_servings = models.IntegerField(null=True, blank=True)
    menu_person_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    menu_person_booked_by = models.CharField(max_length=30, blank=True)
    menu_person_billed = models.IntegerField()
    menu_notes = models.CharField(max_length=250, blank=True)
    menu_person_billing_type = models.ForeignKey(AcctTBillingType, db_column='menu_person_billing_type')
    recurring_id = models.IntegerField(null=True, blank=True)
    menu_person_master_booking = models.IntegerField(null=True, blank=True)
    menu_person_billed_up_to = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'conf_t_menu_person'

class ConfTMenuMenuItems(models.Model):
    ck_menu = models.ForeignKey(ConfTMenu, unique=True)
    ck_item = models.ForeignKey(ConfTMenuItems, unique=True)
    quantity = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'conf_t_menu_menu_items'

class ConfTMenuItems(models.Model):
    pk_item_id = models.IntegerField(unique=True)
    menu_item_code = models.CharField(max_length=10, unique=True)
    menu_items_description = models.CharField(max_length=30, blank=True)
    menu_item_unit_cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    item_category = models.CharField(max_length=1)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_menu_items'

class ConfTMenu(models.Model):
    pk_menu_id = models.IntegerField(unique=True)
    fk_menu_type = models.ForeignKey(ConfTMenuType)
    menu_code = models.CharField(max_length=8, unique=True)
    menu_description = models.CharField(max_length=30, blank=True)
    menu_unit_cost = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_rate_code = models.CharField(max_length=10)
    image_url = models.CharField(max_length=1000, blank=True)
    attributes_url = models.CharField(max_length=1000, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_menu'

class ConfTFacilityType(models.Model):
    pk_facility_type = models.CharField(max_length=20, unique=True)
    class Meta:
        db_table = u'conf_t_facility_type'

class ConfTFacilityAttributes(models.Model):
    ck_facility = models.ForeignKey(ConfTFacilitiesConfig, unique=True)
    ck_facility_config_no = models.ForeignKey(ConfTFacilitiesConfig, unique=True, db_column='ck_facility_config_no')
    ck_attribute = models.ForeignKey(LUTFacilityAttributes, unique=True)
    class Meta:
        db_table = u'conf_t_facility_attributes'

class ConfTFacilitiesPerson(models.Model):
    ck_facility = models.ForeignKey(ConfTFacilitiesConfig, unique=True)
    ck_rms_id = models.IntegerField(unique=True)
    ck_move_in_date = models.DateField(unique=True)
    ck_facility_config_no = models.ForeignKey(ConfTFacilitiesConfig, unique=True, db_column='ck_facility_config_no')
    fk_conference = models.ForeignKey(ConfTEvents, unique=True)
    fk_event = models.ForeignKey(ConfTEvents)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    sk_facility_order_id = models.CharField(max_length=20)
    fac_person_move_out_date = models.DateField(unique=True, null=True, blank=True)
    facilities_person_booked_by = models.CharField(max_length=30, blank=True)
    facilities_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    facilities_person_billed = models.IntegerField()
    facilities_notes = models.CharField(max_length=250, blank=True)
    facilities_person_billing_type = models.ForeignKey(AcctTBillingType, db_column='facilities_person_billing_type')
    recurring_id = models.IntegerField(null=True, blank=True)
    fac_person_master_booking = models.IntegerField(null=True, blank=True)
    facilities_person_billed_up_to = models.DateField(null=True, blank=True)
    setup_time = models.DateField(null=True, blank=True)
    pull_down_time = models.DateField(null=True, blank=True)
    fk_style = models.ForeignKey(LUTFacilityAttributes, null=True, db_column='fk_style', blank=True)
    participants = models.IntegerField()
    class Meta:
        db_table = u'conf_t_facilities_person'

class ConfTFacilitiesConfig(models.Model):
    ck_facility = models.ForeignKey(ConfTFacilities, unique=True)
    ck_facility_config_no = models.IntegerField(unique=True)
    fk_item_type = models.ForeignKey(LUTItemType)
    capacity = models.IntegerField()
    notes = models.CharField(max_length=250, blank=True)
    standard_setup = models.IntegerField()
    setup_time = models.IntegerField()
    pull_down_time = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    facility_start_date = models.DateField(unique=True)
    facility_end_date = models.DateField(unique=True)
    class Meta:
        db_table = u'conf_t_facilities_config'

class ConfTFacilities(models.Model):
    pk_facility_id = models.IntegerField(unique=True)
    facility_code = models.CharField(max_length=10)
    fk_floor = models.ForeignKey(RmgtTFloors)
    status = models.IntegerField()
    facility_description = models.CharField(max_length=250, blank=True)
    image_url = models.CharField(max_length=1000, blank=True)
    attributes_url = models.CharField(max_length=1000, blank=True)
    class Meta:
        db_table = u'conf_t_facilities'

class ConfTEvents(models.Model):
    ck_conference = models.ForeignKey(ConfTConference, unique=True)
    ck_event_id = models.IntegerField(unique=True)
    event_name = models.CharField(max_length=50)
    event_organizer = models.CharField(max_length=50)
    event_details_1 = models.CharField(max_length=50, blank=True)
    event_details_2 = models.CharField(max_length=50, blank=True)
    event_details_3 = models.CharField(max_length=50, blank=True)
    event_details_4 = models.CharField(max_length=50, blank=True)
    event_notes = models.CharField(max_length=250, blank=True)
    event_start_date = models.DateField()
    event_end_date = models.DateField()
    event_start_time = models.DateField()
    event_duration = models.DateField()
    class Meta:
        db_table = u'conf_t_events'

class ConfTEquipmentTypes(models.Model):
    pk_equipment_type = models.CharField(max_length=6, unique=True)
    fk_rate_code = models.CharField(max_length=10)
    equipment_types_description = models.CharField(max_length=25)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_equipment_types'

class ConfTEquipmentPerson(models.Model):
    ck_serial_no = models.ForeignKey(ConfTEquipmentNo, unique=True, db_column='ck_serial_no')
    ck_rms = models.ForeignKey(PpleTPerson, primary_key=True)
    ck_move_in_date = models.DateField(primary_key=True)
    fk_conference = models.ForeignKey(ConfTEvents)
    fk_event = models.ForeignKey(ConfTEvents)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_rate_code = models.ForeignKey(RmgtTRates, db_column='fk_rate_code')
    fk_rate_config_no = models.ForeignKey(RmgtTRates, db_column='fk_rate_config_no')
    sk_equipment_order_id = models.CharField(max_length=20)
    equipment_person_move_out_date = models.DateField(unique=True, null=True, blank=True)
    equipment_person_booked_by = models.CharField(max_length=30, blank=True)
    equipment_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    equipment_person_billed = models.IntegerField()
    equipment_person_billing_type = models.ForeignKey(AcctTBillingType, db_column='equipment_person_billing_type')
    equipment_notes = models.CharField(max_length=250, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    equip_person_master_booking = models.IntegerField(null=True, blank=True)
    equipment_person_billed_up_to = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'conf_t_equipment_person'

class ConfTEquipmentNo(models.Model):
    pk_serial_no = models.CharField(max_length=20, unique=True)
    fk_equipment_type = models.ForeignKey(ConfTEquipmentTypes, db_column='fk_equipment_type')
    status = models.IntegerField()
    image_url = models.CharField(max_length=1000, blank=True)
    attributes_url = models.CharField(max_length=1000, blank=True)
    class Meta:
        db_table = u'conf_t_equipment_no'

class ConfTCurrentMaster(models.Model):
    pk_recurid = models.IntegerField(unique=True)
    class Meta:
        db_table = u'conf_t_current_master'

class ConfTContacts(models.Model):
    ck_conference = models.ForeignKey(ConfTConference, unique=True)
    ck_rms = models.ForeignKey(PpleTPerson, unique=True)
    class Meta:
        db_table = u'conf_t_contacts'

class ConfTConferenceOrganization(models.Model):
    pk_organization_id = models.IntegerField(unique=True)
    fk_organization_contact = models.ForeignKey(PpleTPerson)
    organization_name = models.CharField(max_length=50)
    class Meta:
        db_table = u'conf_t_conference_organization'

class ConfTConference(models.Model):
    pk_conference_id = models.IntegerField(unique=True)
    fk_conference_type = models.ForeignKey(LUTConferenceType, db_column='fk_conference_type')
    conference_name = models.CharField(max_length=50)
    ix_conference_status = models.CharField(max_length=5, blank=True)
    ix_conference_start_date = models.DateField(null=True, blank=True)
    conference_end_date = models.DateField(null=True, blank=True)
    fk_organization = models.ForeignKey(ConfTConferenceOrganization)
    fk_primary_contact = models.ForeignKey(PpleTPerson)
    fk_secondary_contact = models.ForeignKey(PpleTPerson, null=True, blank=True)
    class Meta:
        db_table = u'conf_t_conference'

class ConfTConferee(models.Model):
    ck_conference = models.ForeignKey(ConfTConference, unique=True)
    ck_rms = models.ForeignKey(PpleTPerson, unique=True)
    class Meta:
        db_table = u'conf_t_conferee'

class ConfTBreakItemType(models.Model):
    pk_break_item_type_id = models.IntegerField(unique=True)
    break_item_type_code = models.CharField(max_length=8, unique=True)
    break_item_type_description = models.CharField(max_length=30, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_break_item_type'

class ConfTBreakItem(models.Model):
    ck_item = models.ForeignKey(ConfTMenuItems, unique=True)
    ck_break_item_type = models.ForeignKey(ConfTBreakItemType, unique=True)
    break_item_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    fk_rate_code = models.CharField(max_length=10)
    image_url = models.CharField(max_length=1000, blank=True)
    attributes_url = models.CharField(max_length=1000, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'conf_t_break_item'

class ConfTBookedMenuitem(models.Model):
    ck_menubook = models.ForeignKey(ConfTMenuPerson, unique=True)
    ck_item = models.ForeignKey(ConfTMenuItems, unique=True)
    class Meta:
        db_table = u'conf_t_booked_menuitem'

class AudWmConfirmTransaction(models.Model):
    pk_transaction_id = models.IntegerField(unique=True)
    create_date = models.DateField(null=True, blank=True)
    status = models.CharField(max_length=250, blank=True)
    username = models.CharField(max_length=50, blank=True)
    pagetype = models.CharField(max_length=25, blank=True)
    class Meta:
        db_table = u'aud_wm_confirm_transaction'

class AudWmConfirmStudProf(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    fk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    modtype = models.CharField(max_length=10, blank=True)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_nationality = models.CharField(max_length=25, blank=True)
    fk_school_category = models.CharField(max_length=10, blank=True)
    fk_location = models.CharField(max_length=10, blank=True)
    fk_institution = models.CharField(max_length=15, blank=True)
    fk_catering = models.CharField(max_length=5, blank=True)
    fk_ethnicity = models.CharField(max_length=25, blank=True)
    fk_major = models.CharField(max_length=30, blank=True)
    fk_school = models.CharField(max_length=30, blank=True)
    fk_religion = models.CharField(max_length=20, blank=True)
    fk_student_type = models.CharField(max_length=5, blank=True)
    college_year = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField(null=True, blank=True)
    end_residence = models.IntegerField(null=True, blank=True)
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    ter_score = models.DecimalField(null=True, max_digits=126, decimal_places=-127, blank=True)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bursary = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    assistance_accepted = models.DateField(null=True, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50, blank=True)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_stud_prof'

class AudWmConfirmRoommatePref(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    fk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    fk_application_no = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_group = models.IntegerField(null=True, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_roommate_pref'

class AudWmConfirmPreferences(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    ck_flow_id = models.IntegerField()
    ck_preference_no = models.IntegerField(null=True, blank=True)
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_application_no = models.IntegerField(null=True, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_preferences'

class AudWmConfirmPerson(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    fk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    fk_marital_status = models.CharField(max_length=25, blank=True)
    modtype = models.CharField(max_length=10, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    title = models.CharField(max_length=5, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField(null=True, blank=True)
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_person'

class AudWmConfirmApplication(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    fk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    modtype = models.CharField(max_length=10, blank=True)
    application_no = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=5, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField(null=True, blank=True)
    reference_sent = models.IntegerField(null=True, blank=True)
    reference_2_sent = models.IntegerField(null=True, blank=True)
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField(null=True, blank=True)
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField(null=True, blank=True)
    application_registration_paid = models.IntegerField(null=True, blank=True)
    financial_guarantee = models.IntegerField(null=True, blank=True)
    application_form_complete = models.IntegerField(null=True, blank=True)
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField(null=True, blank=True)
    application_credits = models.IntegerField(null=True, blank=True)
    appl_priority_allocation = models.IntegerField(null=True, blank=True)
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    cancel_code = models.CharField(max_length=12, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_application'

class AudWmConfirmAddress(models.Model):
    fk_transaction = models.ForeignKey(AudWmConfirmTransaction)
    fk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    fk_address_type = models.CharField(max_length=15, blank=True)
    modtype = models.CharField(max_length=10, blank=True)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8, blank=True)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField(null=True, blank=True)
    e_mailing_status = models.IntegerField(null=True, blank=True)
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    class Meta:
        db_table = u'aud_wm_confirm_address'

class AudRmgtTRatesSplit(models.Model):
    ck_rate_code = models.CharField(max_length=10)
    ck_rate_config_no = models.IntegerField()
    ck_txtype = models.CharField(max_length=10)
    rates_split_amount = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_rmgt_t_rates_split'

class AudRmgtTRates(models.Model):
    ck_rate_code = models.CharField(max_length=10)
    ck_rate_config_no = models.IntegerField()
    fk_billing_type = models.CharField(max_length=50)
    rates_description = models.CharField(max_length=50, blank=True)
    rates_type = models.CharField(max_length=1, blank=True)
    rate_start_date = models.DateField(null=True, blank=True)
    rate_end_date = models.DateField(null=True, blank=True)
    rate_config_description = models.CharField(max_length=50, blank=True)
    rates_service_time = models.IntegerField()
    rates_service_type = models.CharField(max_length=15)
    rates_linen_time = models.IntegerField()
    rates_linen_type = models.CharField(max_length=15)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_rmgt_t_rates'

class AudRmgtTPropertyProfAppl(models.Model):
    ck_rms_pid = models.IntegerField()
    ck_application_type = models.CharField(max_length=50)
    contract_start_date = models.DateField(null=True, blank=True)
    contract_end_date = models.DateField(null=True, blank=True)
    contract_length = models.IntegerField(null=True, blank=True)
    ppa_letter1_sent = models.DateField(null=True, blank=True)
    ppa_letter1_received = models.DateField(null=True, blank=True)
    ppa_letter2_sent = models.DateField(null=True, blank=True)
    ppa_letter2_received = models.DateField(null=True, blank=True)
    ppa_letter3_sent = models.DateField(null=True, blank=True)
    ppa_letter3_received = models.DateField(null=True, blank=True)
    ppa_letter4_sent = models.DateField(null=True, blank=True)
    ppa_letter4_received = models.DateField(null=True, blank=True)
    ppa_letter5_sent = models.DateField(null=True, blank=True)
    ppa_letter5_received = models.DateField(null=True, blank=True)
    ppa_letter6_sent = models.DateField(null=True, blank=True)
    ppa_letter6_received = models.DateField(null=True, blank=True)
    ppa_letter7_sent = models.DateField(null=True, blank=True)
    ppa_letter7_received = models.DateField(null=True, blank=True)
    ppa_letter8_sent = models.DateField(null=True, blank=True)
    ppa_letter8_received = models.DateField(null=True, blank=True)
    ppa_letter9_sent = models.DateField(null=True, blank=True)
    ppa_letter9_received = models.DateField(null=True, blank=True)
    ppa_letter10_sent = models.DateField(null=True, blank=True)
    ppa_letter10_received = models.DateField(null=True, blank=True)
    rent_offered_amount = models.DecimalField(max_digits=18, decimal_places=5)
    rent_negotiated_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_final_amount = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_amount1 = models.DecimalField(max_digits=18, decimal_places=5)
    rent_amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rent_amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    notes_renewal_conditions = models.TextField(blank=True)
    notes_general = models.TextField(blank=True)
    renewal_conditions_status = models.CharField(max_length=50, blank=True)
    renewal_conditions_date = models.DateField(null=True, blank=True)
    renewal_conditions_met = models.CharField(max_length=4, blank=True)
    fk_group_id = models.IntegerField(null=True, blank=True)
    group_preference_attribute1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute10 = models.CharField(max_length=50, blank=True)
    offered_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed6 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed7 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    offered_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    negotiated_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    final_bed8 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    inventory_1 = models.DateField(null=True, blank=True)
    inventory_2 = models.DateField(null=True, blank=True)
    inventory_3 = models.DateField(null=True, blank=True)
    inventory_notes1 = models.CharField(max_length=250, blank=True)
    inventory_notes2 = models.CharField(max_length=250, blank=True)
    inventory_notes3 = models.CharField(max_length=250, blank=True)
    inventory_url = models.CharField(max_length=250, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'aud_rmgt_t_property_prof_appl'

class AudRmgtTPropertyProfile(models.Model):
    pk_rms_pid = models.IntegerField()
    fk_section_id = models.CharField(max_length=8)
    fk_rms_ll_id = models.IntegerField()
    fk_property_type = models.CharField(max_length=10, blank=True)
    style = models.CharField(max_length=50, blank=True)
    transportation = models.CharField(max_length=50, blank=True)
    distance_drive = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    distance_walk = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    rental_options = models.CharField(max_length=50, blank=True)
    room_count = models.IntegerField(null=True, blank=True)
    bathroom_count = models.IntegerField(null=True, blank=True)
    payee = models.CharField(max_length=50, blank=True)
    length_of_contract = models.IntegerField(null=True, blank=True)
    initial_contract_date = models.DateField(null=True, blank=True)
    property_area = models.CharField(max_length=50, blank=True)
    number_tenants = models.IntegerField(null=True, blank=True)
    notes_students = models.TextField(blank=True)
    notes_staff = models.TextField(blank=True)
    assigned_to = models.CharField(max_length=50, blank=True)
    url = models.CharField(max_length=250, blank=True)
    property_id = models.CharField(max_length=50, blank=True)
    property_alias_id = models.CharField(max_length=50, blank=True)
    display_status = models.CharField(max_length=5, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    user_def_lookup1 = models.CharField(max_length=25, blank=True)
    user_def_lookup2 = models.CharField(max_length=25, blank=True)
    user_def_lookup3 = models.CharField(max_length=25, blank=True)
    user_def_lookup4 = models.CharField(max_length=25, blank=True)
    user_def_lookup5 = models.CharField(max_length=25, blank=True)
    user_def_lookup6 = models.CharField(max_length=25, blank=True)
    parking_spaces = models.CharField(max_length=25, blank=True)
    parking = models.IntegerField()
    garage = models.IntegerField()
    garden = models.IntegerField()
    use_item1 = models.IntegerField()
    use_item2 = models.IntegerField()
    use_item3 = models.IntegerField()
    payee_id = models.CharField(max_length=25, blank=True)
    payee_h_address = models.IntegerField()
    bank_name = models.CharField(max_length=30, blank=True)
    bank_branch = models.CharField(max_length=30, blank=True)
    bank_account = models.CharField(max_length=25, blank=True)
    bs_roll_no = models.CharField(max_length=25, blank=True)
    sort_code = models.CharField(max_length=8, blank=True)
    payee_address1 = models.CharField(max_length=30, blank=True)
    payee_address2 = models.CharField(max_length=30, blank=True)
    payee_address3 = models.CharField(max_length=30, blank=True)
    payee_address4 = models.CharField(max_length=30, blank=True)
    payee_postcode = models.CharField(max_length=15, blank=True)
    payee_email = models.CharField(max_length=50, blank=True)
    url_floor_plan = models.CharField(max_length=250, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'aud_rmgt_t_property_profile'

class AudRmgtTPlanPerson(models.Model):
    ck_plan_type = models.CharField(max_length=10)
    ck_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    fk_order_id = models.IntegerField()
    sk_plan_order_id = models.CharField(max_length=20)
    plan_person_move_out_date = models.DateField(null=True, blank=True)
    plan_person_booking_type = models.CharField(max_length=5)
    plan_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    plan_person_billed_up_to = models.DateField(null=True, blank=True)
    plan_person_notes = models.CharField(max_length=100, blank=True)
    plan_person_billing_type = models.CharField(max_length=50, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    plan_person_booked_by = models.CharField(max_length=30, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'aud_rmgt_t_plan_person'

class AudRmgtTLandlordRentCalc(models.Model):
    pk_payment_id = models.IntegerField()
    ck_rms_pid = models.IntegerField()
    ck_application_type = models.CharField(max_length=50)
    ck_term_id = models.CharField(max_length=8)
    schedule_date = models.DateField(null=True, blank=True)
    payment_date = models.DateField(null=True, blank=True)
    fk_posting_id = models.IntegerField(null=True, blank=True)
    fk_ll_rms_id = models.IntegerField()
    fiscal_year = models.CharField(max_length=50, blank=True)
    amount1 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount2 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount3 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount4 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    amount5 = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    fk_posting_id1 = models.IntegerField(null=True, blank=True)
    fk_posting_id2 = models.IntegerField(null=True, blank=True)
    fk_posting_id3 = models.IntegerField(null=True, blank=True)
    fk_posting_id4 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'aud_rmgt_t_landlord_rent_calc'

class AudPpleTLandlordProfile(models.Model):
    pk_rms_id = models.IntegerField()
    ix_landlord_id = models.CharField(max_length=25, blank=True)
    landlord_alias_id = models.CharField(max_length=25, blank=True)
    business_name = models.CharField(max_length=50, blank=True)
    payee = models.CharField(max_length=50, blank=True)
    agent_used = models.IntegerField()
    owner_first_name = models.CharField(max_length=25, blank=True)
    owner_middle_name = models.CharField(max_length=25, blank=True)
    owner_last_name = models.CharField(max_length=25, blank=True)
    mailing_name = models.CharField(max_length=100, blank=True)
    initial_contact = models.DateField(null=True, blank=True)
    contract_date1 = models.DateField(null=True, blank=True)
    contract_date2 = models.DateField(null=True, blank=True)
    contract_date3 = models.DateField(null=True, blank=True)
    contract_date4 = models.DateField(null=True, blank=True)
    contract_date5 = models.DateField(null=True, blank=True)
    contract_date_notes1 = models.CharField(max_length=250, blank=True)
    contract_date_notes2 = models.CharField(max_length=250, blank=True)
    contract_date_notes3 = models.CharField(max_length=250, blank=True)
    contract_date_notes4 = models.CharField(max_length=250, blank=True)
    contract_date_notes5 = models.CharField(max_length=250, blank=True)
    contract_date_yes_no1 = models.IntegerField()
    contract_date_yes_no2 = models.IntegerField()
    contract_date_yes_no3 = models.IntegerField()
    contract_date_yes_no4 = models.IntegerField()
    contract_date_yes_no5 = models.IntegerField()
    item_requested1 = models.DateField(null=True, blank=True)
    item_requested2 = models.DateField(null=True, blank=True)
    item_requested3 = models.DateField(null=True, blank=True)
    item_sent1 = models.DateField(null=True, blank=True)
    item_sent2 = models.DateField(null=True, blank=True)
    item_sent3 = models.DateField(null=True, blank=True)
    pref_contact_method_1 = models.CharField(max_length=50, blank=True)
    pref_contact_method_2 = models.CharField(max_length=50, blank=True)
    user_def_text1 = models.CharField(max_length=250, blank=True)
    user_def_text2 = models.CharField(max_length=250, blank=True)
    user_def_text3 = models.CharField(max_length=250, blank=True)
    user_def_text4 = models.CharField(max_length=250, blank=True)
    user_def_text5 = models.CharField(max_length=250, blank=True)
    user_def_text6 = models.CharField(max_length=250, blank=True)
    user_def_text7 = models.CharField(max_length=250, blank=True)
    user_def_text8 = models.CharField(max_length=250, blank=True)
    user_def_text9 = models.CharField(max_length=250, blank=True)
    user_def_text10 = models.CharField(max_length=250, blank=True)
    user_def_text11 = models.CharField(max_length=250, blank=True)
    user_def_text12 = models.CharField(max_length=250, blank=True)
    user_def_text13 = models.CharField(max_length=250, blank=True)
    user_def_text14 = models.CharField(max_length=250, blank=True)
    user_def_text15 = models.CharField(max_length=250, blank=True)
    user_def_text16 = models.CharField(max_length=250, blank=True)
    user_def_text17 = models.CharField(max_length=250, blank=True)
    user_def_text18 = models.CharField(max_length=250, blank=True)
    user_def_text19 = models.CharField(max_length=250, blank=True)
    user_def_text20 = models.CharField(max_length=250, blank=True)
    user_def_int1 = models.IntegerField(null=True, blank=True)
    user_def_int2 = models.IntegerField(null=True, blank=True)
    user_def_int3 = models.IntegerField(null=True, blank=True)
    user_def_int4 = models.IntegerField(null=True, blank=True)
    user_def_int5 = models.IntegerField(null=True, blank=True)
    user_def_int6 = models.IntegerField(null=True, blank=True)
    user_def_int7 = models.IntegerField(null=True, blank=True)
    user_def_int8 = models.IntegerField(null=True, blank=True)
    user_def_int9 = models.IntegerField(null=True, blank=True)
    user_def_int10 = models.IntegerField(null=True, blank=True)
    user_def_double1 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double2 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double3 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double4 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double5 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double6 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double7 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double8 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double9 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_double10 = models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)
    user_def_date1 = models.DateField(null=True, blank=True)
    user_def_date2 = models.DateField(null=True, blank=True)
    user_def_date3 = models.DateField(null=True, blank=True)
    user_def_date4 = models.DateField(null=True, blank=True)
    user_def_date5 = models.DateField(null=True, blank=True)
    user_def_date6 = models.DateField(null=True, blank=True)
    user_def_date7 = models.DateField(null=True, blank=True)
    user_def_date8 = models.DateField(null=True, blank=True)
    user_def_date9 = models.DateField(null=True, blank=True)
    user_def_date10 = models.DateField(null=True, blank=True)
    user_def_yes_no1 = models.IntegerField()
    user_def_yes_no2 = models.IntegerField()
    user_def_yes_no3 = models.IntegerField()
    user_def_yes_no4 = models.IntegerField()
    user_def_yes_no5 = models.IntegerField()
    user_def_yes_no6 = models.IntegerField()
    userdef_lookup1 = models.CharField(max_length=25, blank=True)
    userdef_lookup2 = models.CharField(max_length=25, blank=True)
    userdef_lookup3 = models.CharField(max_length=25, blank=True)
    userdef_lookup4 = models.CharField(max_length=25, blank=True)
    userdef_lookup5 = models.CharField(max_length=25, blank=True)
    userdef_lookup6 = models.CharField(max_length=25, blank=True)
    fk_community = models.CharField(max_length=25)
    ll_letter1_sent = models.DateField(null=True, blank=True)
    ll_letter2_sent = models.DateField(null=True, blank=True)
    ll_letter3_sent = models.DateField(null=True, blank=True)
    ll_letter4_sent = models.DateField(null=True, blank=True)
    ll_letter5_sent = models.DateField(null=True, blank=True)
    ll_letter6_sent = models.DateField(null=True, blank=True)
    ll_letter7_sent = models.DateField(null=True, blank=True)
    ll_letter8_sent = models.DateField(null=True, blank=True)
    ll_letter9_sent = models.DateField(null=True, blank=True)
    ll_letter10_sent = models.DateField(null=True, blank=True)
    ll_letter1_received = models.DateField(null=True, blank=True)
    ll_letter2_received = models.DateField(null=True, blank=True)
    ll_letter3_received = models.DateField(null=True, blank=True)
    ll_letter4_received = models.DateField(null=True, blank=True)
    ll_letter5_received = models.DateField(null=True, blank=True)
    ll_letter6_received = models.DateField(null=True, blank=True)
    ll_letter7_received = models.DateField(null=True, blank=True)
    ll_letter8_received = models.DateField(null=True, blank=True)
    ll_letter9_received = models.DateField(null=True, blank=True)
    ll_letter10_received = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'aud_pple_t_landlord_profile'

class AudInetTCurrentFlows(models.Model):
    pk_flow_id = models.IntegerField()
    fk_pagename = models.CharField(max_length=50)
    fk_stage = models.IntegerField()
    rejected = models.IntegerField(null=True, blank=True)
    flow_comments = models.CharField(max_length=250, blank=True)
    completeflow = models.IntegerField(null=True, blank=True)
    date_created = models.DateField(null=True, blank=True)
    opened_by = models.IntegerField(null=True, blank=True)
    university_id = models.CharField(max_length=20, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_inet_t_current_flows'

class AudFlowTStudentProfile(models.Model):
    pk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10)
    ix_student_number = models.CharField(max_length=20, blank=True)
    fk_nationality = models.CharField(max_length=25)
    fk_school_category = models.CharField(max_length=10)
    fk_location = models.CharField(max_length=10)
    fk_institution = models.CharField(max_length=15)
    fk_catering = models.CharField(max_length=5)
    fk_ethnicity = models.CharField(max_length=25)
    fk_major = models.CharField(max_length=30)
    fk_school = models.CharField(max_length=30)
    fk_religion = models.CharField(max_length=20)
    fk_student_type = models.CharField(max_length=5)
    college_year = models.IntegerField(null=True, blank=True)
    medical = models.CharField(max_length=50, blank=True)
    student_profile_work = models.IntegerField(null=True, blank=True)
    student_profile_comment = models.TextField(blank=True)
    vacation_form = models.IntegerField(null=True, blank=True)
    interests = models.CharField(max_length=50, blank=True)
    began_residence = models.IntegerField()
    end_residence = models.IntegerField()
    program1 = models.CharField(max_length=50, blank=True)
    program2 = models.CharField(max_length=50, blank=True)
    ter_score = models.DecimalField(max_digits=126, decimal_places=-127)
    school_attended = models.CharField(max_length=30, blank=True)
    gpa = models.CharField(max_length=15, blank=True)
    sports = models.CharField(max_length=50, blank=True)
    school_grad_date = models.DateField(null=True, blank=True)
    course_year = models.CharField(max_length=15, blank=True)
    scholarship = models.DecimalField(max_digits=18, decimal_places=5)
    bursary = models.DecimalField(max_digits=18, decimal_places=5)
    assistance_accepted = models.DateField(null=True, blank=True)
    nonstud_department = models.CharField(max_length=50, blank=True)
    nonstud_payment_type = models.CharField(max_length=50, blank=True)
    nonstud_university_status = models.CharField(max_length=50)
    nonstud_position_start = models.DateField(null=True, blank=True)
    preference1 = models.CharField(max_length=50, blank=True)
    preference2 = models.CharField(max_length=50, blank=True)
    text1 = models.CharField(max_length=50, blank=True)
    text2 = models.CharField(max_length=50, blank=True)
    text3 = models.CharField(max_length=50, blank=True)
    text4 = models.CharField(max_length=50, blank=True)
    other_attributes = models.CharField(max_length=250, blank=True)
    transfer = models.CharField(max_length=50, blank=True)
    critical = models.CharField(max_length=250, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_student_profile'

class AudFlowTRoomPreferences(models.Model):
    ck_flow_id = models.IntegerField()
    ck_preference_no = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_application_no = models.IntegerField()
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    fk_rms_id = models.IntegerField(null=True, blank=True)
    modtype = models.CharField(max_length=10)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_room_preferences'

class AudFlowTRoommatePreference(models.Model):
    pk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_application_no = models.IntegerField()
    modtype = models.CharField(max_length=10)
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_group = models.IntegerField()
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_roommate_preference'

class AudFlowTPerson(models.Model):
    pk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_marital_status = models.CharField(max_length=25)
    modtype = models.CharField(max_length=10, blank=True)
    sex = models.CharField(max_length=1, blank=True)
    ix_last_name = models.CharField(max_length=25, blank=True)
    ix_first_name = models.CharField(max_length=25, blank=True)
    ix_middle_name = models.CharField(max_length=25, blank=True)
    title = models.CharField(max_length=5, blank=True)
    phone_work = models.CharField(max_length=25, blank=True)
    phone_cell = models.CharField(max_length=25, blank=True)
    fax = models.CharField(max_length=25, blank=True)
    person_type = models.CharField(max_length=4, blank=True)
    notes = models.TextField(blank=True)
    fk_call_accounting_id = models.IntegerField(null=True, blank=True)
    ix_national_id = models.CharField(max_length=15, blank=True)
    birth_date = models.DateField(null=True, blank=True)
    deceased = models.IntegerField(null=True, blank=True)
    password = models.CharField(max_length=250, blank=True)
    allow_web_access = models.IntegerField()
    second_password = models.CharField(max_length=250, blank=True)
    mailing = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_person'

class AudFlowTApplication(models.Model):
    pk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    modtype = models.CharField(max_length=10)
    application_no = models.IntegerField()
    application_type = models.CharField(max_length=50, blank=True)
    application_person_type = models.CharField(max_length=5, blank=True)
    application_sent = models.DateField(null=True, blank=True)
    application_received = models.DateField(null=True, blank=True)
    fee_paid = models.IntegerField()
    reference_sent = models.IntegerField()
    reference_2_sent = models.IntegerField()
    complete_appl_form_notice = models.DateField(null=True, blank=True)
    non_returned_appl_notice = models.DateField(null=True, blank=True)
    incomplete_application_notice = models.DateField(null=True, blank=True)
    application_complete = models.DateField(null=True, blank=True)
    grade = models.IntegerField(null=True, blank=True)
    rejection_letter_sent = models.DateField(null=True, blank=True)
    application_cancel_date = models.DateField(null=True, blank=True)
    interview_appointment = models.DateField(null=True, blank=True)
    interview_letter_sent = models.DateField(null=True, blank=True)
    interview_grade = models.IntegerField()
    application_offer_sent = models.DateField(null=True, blank=True)
    offer_received = models.DateField(null=True, blank=True)
    bond_paid = models.IntegerField()
    application_registration_paid = models.IntegerField()
    financial_guarantee = models.IntegerField()
    application_form_complete = models.IntegerField()
    student_association_paid = models.IntegerField(null=True, blank=True)
    app_incomplete_offer_notice = models.DateField(null=True, blank=True)
    application_offer_complete = models.DateField(null=True, blank=True)
    application_arrival_date = models.DateField(null=True, blank=True)
    application_arrival_time = models.DateField(null=True, blank=True)
    advert_survey = models.CharField(max_length=50, blank=True)
    allocation_status = models.CharField(max_length=10, blank=True)
    successful_offer_notice = models.DateField(null=True, blank=True)
    waitlisted_offer_notice = models.DateField(null=True, blank=True)
    faith_payment = models.IntegerField()
    application_credits = models.IntegerField()
    appl_priority_allocation = models.IntegerField()
    disability = models.CharField(max_length=50, blank=True)
    offer_expiration_date = models.DateField(null=True, blank=True)
    asig = models.CharField(max_length=250, blank=True)
    cancel_code = models.CharField(max_length=12, blank=True)
    fk_pref_payment_plan = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan = models.CharField(max_length=10, blank=True)
    appl_notes = models.TextField(blank=True)
    waitlist_position = models.CharField(max_length=20, blank=True)
    finalsort_number = models.CharField(max_length=20, blank=True)
    fk_pref_meal_plan_2 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_3 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_4 = models.CharField(max_length=10, blank=True)
    fk_pref_meal_plan_5 = models.CharField(max_length=10, blank=True)
    user_def_text1 = models.CharField(max_length=50, blank=True)
    user_def_text2 = models.CharField(max_length=50, blank=True)
    user_def_text3 = models.CharField(max_length=50, blank=True)
    user_def_text4 = models.CharField(max_length=50, blank=True)
    user_def_text5 = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_application'

class AudFlowTAddress(models.Model):
    pk_flow_id = models.IntegerField()
    fk_rms_id = models.IntegerField(null=True, blank=True)
    fk_address_type = models.CharField(max_length=15)
    modtype = models.CharField(max_length=10)
    location_phone = models.CharField(max_length=25, blank=True)
    address_1 = models.CharField(max_length=50, blank=True)
    address_1b = models.CharField(max_length=50, blank=True)
    address_2 = models.CharField(max_length=50, blank=True)
    postcode = models.CharField(max_length=15, blank=True)
    address_3 = models.CharField(max_length=50, blank=True)
    fk_state = models.CharField(max_length=8)
    e_mail = models.CharField(max_length=50, blank=True)
    mailing_status = models.IntegerField()
    e_mailing_status = models.IntegerField()
    forwarding_start_date = models.DateField(null=True, blank=True)
    forwarding_end_date = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_flow_t_address'

class AudConfTSnackPerson(models.Model):
    pk_snackbook_id = models.IntegerField()
    fk_item_id = models.IntegerField()
    fk_break_item_type_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    snack_person_date = models.DateField()
    fk_conference_id = models.IntegerField()
    fk_event_id = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    fk_order_id = models.IntegerField()
    sk_snack_order_id = models.CharField(max_length=20, blank=True)
    snack_person_servings = models.IntegerField()
    snack_person_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    snack_person_booked_by = models.CharField(max_length=30, blank=True)
    snack_person_billed = models.IntegerField()
    snack_person_billing_type = models.CharField(max_length=50)
    snack_notes = models.CharField(max_length=250, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    snack_person_master_booking = models.IntegerField(null=True, blank=True)
    snack_person_billed_up_to = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_snack_person'

class AudConfTQuoteSnacks(models.Model):
    pk_table_key = models.IntegerField()
    fk_quote_no = models.IntegerField()
    fk_item_id = models.IntegerField()
    fk_break_item_type_id = models.IntegerField()
    quote_snacks_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    quote_snacks_date = models.DateField(null=True, blank=True)
    quote_snacks_end_date = models.DateField(null=True, blank=True)
    quote_snacks_servings = models.IntegerField(null=True, blank=True)
    quote_snacks_hour = models.DateField()
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_snacks'

class AudConfTQuoteMiscellaneous(models.Model):
    pk_table_key = models.IntegerField()
    fk_miscellaneous_id = models.IntegerField()
    fk_quote_no = models.IntegerField()
    quote_miscellaneous_date = models.DateField(null=True, blank=True)
    quote_miscellaneous_end_date = models.DateField(null=True, blank=True)
    quote_miscellaneous_hour = models.DateField(null=True, blank=True)
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_miscellaneous_no_of_hour = models.DateField()
    units = models.IntegerField(null=True, blank=True)
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_miscellaneous'

class AudConfTQuoteMenus(models.Model):
    pk_table_key = models.IntegerField()
    fk_quote_no = models.IntegerField()
    pk_menu_id = models.IntegerField()
    quote_menus_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    quote_menus_servings = models.IntegerField(null=True, blank=True)
    quote_menus_date = models.DateField(null=True, blank=True)
    quote_menus_end_date = models.DateField(null=True, blank=True)
    quote_menus_hour = models.DateField()
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_menus'

class AudConfTQuoteFacilities(models.Model):
    pk_table_key = models.IntegerField()
    pk_facility_id = models.IntegerField()
    fk_quote_no = models.IntegerField()
    quote_facilities_hour = models.DateField()
    quote_faclities_date = models.DateField()
    quote_faclities_end_date = models.DateField()
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_facilities_no_of_hours = models.DecimalField(max_digits=5, decimal_places=2)
    fk_rate_code = models.CharField(max_length=10)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_facilities'

class AudConfTQuoteEquipment(models.Model):
    pk_table_key = models.IntegerField()
    fk_quote_equipment_type = models.CharField(max_length=6)
    fk_quote_no = models.IntegerField()
    quoted_rate = models.DecimalField(max_digits=18, decimal_places=5)
    quote_equipment_date = models.DateField(null=True, blank=True)
    quote_equipment_hour = models.DateField(null=True, blank=True)
    quote_equipment_end_date = models.DateField(null=True, blank=True)
    quote_equipment_no_of_hours = models.DecimalField(max_digits=5, decimal_places=2)
    fk_rate_code = models.CharField(max_length=10)
    fk_serial_no = models.CharField(max_length=20)
    fk_billing_type = models.CharField(max_length=50)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_equipment'

class AudConfTQuoteAccommodation(models.Model):
    pk_table_key = models.IntegerField()
    fk_quote_no = models.IntegerField()
    fk_room_type = models.CharField(max_length=15)
    quote_accommodation_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    beds = models.IntegerField()
    quote_move_in_date = models.DateField(null=True, blank=True)
    quote_move_out_date = models.DateField(null=True, blank=True)
    nightly_cost = models.DecimalField(max_digits=18, decimal_places=5)
    total_cost = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_quote_accommodation'

class AudConfTMiscPerson(models.Model):
    pk_miscbook_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    fk_miscellaneous_id = models.IntegerField()
    miscellaneous_person_date = models.DateField()
    fk_conference_id = models.IntegerField()
    fk_event_id = models.IntegerField()
    fk_order_id = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    sk_miscellaneous_order_id = models.CharField(max_length=20, blank=True)
    misc_person_move_out_date = models.DateField()
    miscellaneous_person_booked_by = models.CharField(max_length=30, blank=True)
    miscellaneous_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    miscellaneous_person_billed = models.IntegerField()
    misc_person_billing_type = models.CharField(max_length=50)
    miscellaneous_notes = models.CharField(max_length=250, blank=True)
    misc_person_master_booking = models.IntegerField(null=True, blank=True)
    misc_person_billed_up_to = models.DateField(null=True, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    units = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_misc_person'

class AudConfTMenuPerson(models.Model):
    pk_menubook_id = models.IntegerField()
    fk_menu_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    menu_person_date = models.DateField()
    fk_conference_id = models.IntegerField()
    fk_event_id = models.IntegerField()
    fk_order_id = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    sk_menu_order_id = models.CharField(max_length=20, blank=True)
    menu_person_servings = models.IntegerField(null=True, blank=True)
    menu_person_unit_cost = models.DecimalField(max_digits=18, decimal_places=5)
    menu_person_booked_by = models.CharField(max_length=30, blank=True)
    menu_person_billed = models.IntegerField()
    menu_notes = models.CharField(max_length=250, blank=True)
    menu_person_billing_type = models.CharField(max_length=50)
    recurring_id = models.IntegerField(null=True, blank=True)
    menu_person_master_booking = models.IntegerField(null=True, blank=True)
    menu_person_billed_up_to = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_menu_person'

class AudConfTFacilitiesPerson(models.Model):
    ck_facility_id = models.IntegerField()
    ck_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    ck_facility_config_no = models.IntegerField()
    fk_conference_id = models.IntegerField()
    fk_event_id = models.IntegerField()
    fk_order_id = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    sk_facility_order_id = models.CharField(max_length=20)
    fac_person_move_out_date = models.DateField(null=True, blank=True)
    facilities_person_booked_by = models.CharField(max_length=30, blank=True)
    facilities_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    facilities_person_billed = models.IntegerField()
    facilities_notes = models.CharField(max_length=250, blank=True)
    facilities_person_billing_type = models.CharField(max_length=50)
    recurring_id = models.IntegerField(null=True, blank=True)
    fac_person_master_booking = models.IntegerField(null=True, blank=True)
    facilities_person_billed_up_to = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    setup_time = models.DateField(null=True, blank=True)
    pull_down_time = models.DateField(null=True, blank=True)
    fk_style = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'aud_conf_t_facilities_person'

class AudConfTEquipmentPerson(models.Model):
    ck_serial_no = models.CharField(max_length=20)
    ck_rms_id = models.IntegerField()
    ck_move_in_date = models.DateField()
    fk_conference_id = models.IntegerField()
    fk_event_id = models.IntegerField()
    fk_order_id = models.IntegerField()
    fk_rate_code = models.CharField(max_length=10)
    fk_rate_config_no = models.IntegerField()
    sk_equipment_order_id = models.CharField(max_length=20)
    equipment_person_move_out_date = models.DateField(null=True, blank=True)
    equipment_person_booked_by = models.CharField(max_length=30, blank=True)
    equipment_person_rate = models.DecimalField(max_digits=18, decimal_places=5)
    equipment_person_billed = models.IntegerField()
    equipment_person_billing_type = models.CharField(max_length=50)
    equipment_notes = models.CharField(max_length=250, blank=True)
    recurring_id = models.IntegerField(null=True, blank=True)
    equip_person_master_booking = models.IntegerField(null=True, blank=True)
    equipment_person_billed_up_to = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_equipment_person'

class AudConfTBookedMenuitem(models.Model):
    ck_menubook_id = models.IntegerField()
    ck_item_id = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_conf_t_booked_menuitem'

class AudApplTRoomPreferences(models.Model):
    ck_application_no = models.IntegerField()
    ck_preference_no = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_room_preferences'

class AudApplTRoommatePref(models.Model):
    ck_application_no = models.IntegerField()
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_roommate_pref'

class AudApplTMatchingCriteria(models.Model):
    ck_priority_number = models.IntegerField()
    matching_criteria_description = models.CharField(max_length=50, blank=True)
    display_order = models.IntegerField(null=True, blank=True)
    critical = models.IntegerField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_matching_criteria'

class AudApplTEligCriteria(models.Model):
    ck_criteria_no = models.IntegerField()
    eligibility_criteria_desc = models.CharField(max_length=50, blank=True)
    criteria_value = models.CharField(max_length=30, blank=True)
    field_table = models.CharField(max_length=30, blank=True)
    field_name = models.CharField(max_length=50, blank=True)
    operator = models.CharField(max_length=4, blank=True)
    required = models.IntegerField(null=True, blank=True)
    value_type = models.CharField(max_length=10, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_appl_t_elig_criteria'

class AudApplTAppGroupMembers(models.Model):
    ck_rms_gid = models.IntegerField()
    ck_rms_id = models.IntegerField()
    fk_application_no = models.IntegerField()
    membership_type = models.CharField(max_length=10)
    member_status = models.IntegerField(null=True, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'aud_appl_t_app_group_members'

class AudApplTApplicationGroups(models.Model):
    pk_rms_gid = models.IntegerField()
    group_id = models.CharField(max_length=20, blank=True)
    group_alias = models.CharField(max_length=50, blank=True)
    group_name = models.CharField(max_length=50, blank=True)
    fk_group_type = models.CharField(max_length=50)
    group_closed = models.CharField(max_length=10, blank=True)
    group_app_status = models.CharField(max_length=10, blank=True)
    group_app_status_date = models.DateField(null=True, blank=True)
    group_total = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    group_preference_attribute_1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_10 = models.CharField(max_length=50, blank=True)
    group_letter_sent1 = models.DateField(null=True, blank=True)
    group_letter_sent2 = models.DateField(null=True, blank=True)
    group_letter_sent3 = models.DateField(null=True, blank=True)
    group_letter_sent4 = models.DateField(null=True, blank=True)
    group_letter_sent5 = models.DateField(null=True, blank=True)
    group_letter_sent6 = models.DateField(null=True, blank=True)
    group_letter_sent7 = models.DateField(null=True, blank=True)
    group_letter_sent8 = models.DateField(null=True, blank=True)
    group_letter_sent9 = models.DateField(null=True, blank=True)
    group_letter_sent10 = models.DateField(null=True, blank=True)
    group_letter_received1 = models.DateField(null=True, blank=True)
    group_letter_received2 = models.DateField(null=True, blank=True)
    group_letter_received3 = models.DateField(null=True, blank=True)
    group_letter_received4 = models.DateField(null=True, blank=True)
    group_letter_received5 = models.DateField(null=True, blank=True)
    group_letter_received6 = models.DateField(null=True, blank=True)
    group_letter_received7 = models.DateField(null=True, blank=True)
    group_letter_received8 = models.DateField(null=True, blank=True)
    group_letter_received9 = models.DateField(null=True, blank=True)
    group_letter_received10 = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField(null=True, blank=True)
    action = models.CharField(max_length=10, blank=True)
    updated_by = models.CharField(max_length=30, blank=True)
    group_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'aud_appl_t_application_groups'

class AudAcctTPostIdIncremental(models.Model):
    ck_posting_id = models.IntegerField()
    last_modified_table_name = models.CharField(max_length=50, blank=True)
    last_updated_datetime = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_post_id_incremental'

class AudAcctTPaymentDetails(models.Model):
    ck_posting_id = models.IntegerField()
    ck_payment_no = models.IntegerField()
    ck_invoice_no = models.CharField(max_length=10)
    ck_txid = models.CharField(max_length=20)
    fk_method_code = models.CharField(max_length=25, blank=True)
    fk_txtype = models.CharField(max_length=10)
    fk_dr_account = models.CharField(max_length=12)
    fk_cr_account = models.CharField(max_length=12)
    payment_type = models.CharField(max_length=8)
    payment_comments = models.CharField(max_length=250, blank=True)
    payment_ledger_amount = models.DecimalField(max_digits=18, decimal_places=5)
    payment_posting_id = models.IntegerField(null=True, blank=True)
    flag_reverse_transaction = models.IntegerField()
    entry_date = models.DateField()
    balance = models.DecimalField(max_digits=18, decimal_places=5)
    refersto = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    posted = models.DateField(null=True, blank=True)
    clbal = models.IntegerField()
    entered_by = models.CharField(max_length=50)
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'aud_acct_t_payment_details'

class AudAcctTPayment(models.Model):
    ck_payment_no = models.IntegerField()
    fk_rms_id = models.IntegerField()
    payment_date = models.DateField()
    total_amount_paid = models.DecimalField(max_digits=18, decimal_places=5)
    existing_unallocated_amount = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_payment'

class AudAcctTOrders(models.Model):
    ck_order_id = models.IntegerField()
    fk_rms_id = models.IntegerField()
    fk_invoice_no = models.CharField(max_length=10, blank=True)
    order_date = models.DateField()
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_orders'

class AudAcctTMisctransPerson(models.Model):
    ck_misctrans_id = models.IntegerField()
    ck_rms_id = models.IntegerField()
    ck_misctrans_person_date = models.DateField()
    fk_order_id = models.IntegerField()
    sk_misctrans_order_id = models.CharField(max_length=20)
    fk_misc_txtype = models.CharField(max_length=10)
    misctrans_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.CharField(max_length=10, blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.CharField(max_length=10, blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.CharField(max_length=10, blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.CharField(max_length=10, blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    term_id = models.CharField(max_length=8, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_misctrans_person'

class AudAcctTInvoiceDetails(models.Model):
    ck_posting_id = models.IntegerField()
    ck_invoice_no = models.CharField(max_length=10)
    ck_txid = models.CharField(max_length=20)
    order_type = models.CharField(max_length=25)
    invoice_description = models.CharField(max_length=250, blank=True)
    fk_txtype = models.CharField(max_length=10)
    fk_dr_account = models.CharField(max_length=12)
    fk_cr_account = models.CharField(max_length=12)
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.CharField(max_length=10, blank=True)
    fk_tax1_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax1_cr_account = models.CharField(max_length=12, blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.CharField(max_length=10, blank=True)
    fk_tax2_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax2_cr_account = models.CharField(max_length=12, blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.CharField(max_length=10, blank=True)
    fk_tax3_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax3_cr_account = models.CharField(max_length=12, blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.CharField(max_length=10, blank=True)
    fk_tax4_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax4_cr_account = models.CharField(max_length=12, blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    flag_reverse_transaction = models.IntegerField()
    amount_due = models.DecimalField(max_digits=18, decimal_places=5)
    entry_date = models.DateField()
    fiscal_year = models.CharField(max_length=4)
    entered_by = models.CharField(max_length=50)
    posted = models.DateField(null=True, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    balance = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    refersto = models.CharField(max_length=50, blank=True)
    clbal = models.IntegerField()
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'aud_acct_t_invoice_details'

class AudAcctTInvoice(models.Model):
    ck_invoice_no = models.CharField(max_length=10)
    fk_rms_id = models.IntegerField()
    open_date = models.DateField()
    closed_date = models.DateField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    date_printed = models.DateField(null=True, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_invoice'

class AudAcctTCreditInvoiceDtls(models.Model):
    ck_credit_posting_id = models.IntegerField()
    ck_invoice_no = models.CharField(max_length=10)
    ck_credit_txid = models.CharField(max_length=20)
    order_type = models.CharField(max_length=25)
    invoice_description = models.CharField(max_length=250, blank=True)
    fk_txtype = models.CharField(max_length=10)
    fk_dr_account = models.CharField(max_length=12)
    fk_cr_account = models.CharField(max_length=12)
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.CharField(max_length=10, blank=True)
    fk_tax1_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax1_cr_account = models.CharField(max_length=12, blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.CharField(max_length=10, blank=True)
    fk_tax2_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax2_cr_account = models.CharField(max_length=12, blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.CharField(max_length=10, blank=True)
    fk_tax3_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax3_cr_account = models.CharField(max_length=12, blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.CharField(max_length=10, blank=True)
    fk_tax4_dr_account = models.CharField(max_length=12, blank=True)
    fk_tax4_cr_account = models.CharField(max_length=12, blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    flag_reverse_transaction = models.IntegerField()
    amount_due = models.DecimalField(max_digits=18, decimal_places=5)
    entry_date = models.DateField()
    fiscal_year = models.CharField(max_length=4)
    entered_by = models.CharField(max_length=50)
    posted = models.DateField(null=True, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    balance = models.DecimalField(max_digits=18, decimal_places=5)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    refersto = models.CharField(max_length=50, blank=True)
    clbal = models.IntegerField()
    fk_term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'aud_acct_t_credit_invoice_dtls'

class AudAcctTChequePaid(models.Model):
    ck_payment_no = models.IntegerField()
    payee = models.CharField(max_length=25, blank=True)
    bank = models.CharField(max_length=20, blank=True)
    branch = models.CharField(max_length=20, blank=True)
    cheque_no = models.CharField(max_length=20)
    routing_number = models.CharField(max_length=50, blank=True)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_cheque_paid'

class AudAcctTCcardDetails(models.Model):
    ck_payment_no = models.IntegerField()
    card_type = models.CharField(max_length=10)
    expiry_date = models.CharField(max_length=5)
    name_on_card = models.CharField(max_length=25)
    account_number = models.CharField(max_length=50)
    ck_date_changed = models.DateField()
    updated_by = models.CharField(max_length=30)
    action = models.CharField(max_length=10)
    class Meta:
        db_table = u'aud_acct_t_ccard_details'

class ApplTWaitlist(models.Model):
    ck_waitlist = models.ForeignKey(LUTWaitlist, unique=True)
    ck_application_no = models.ForeignKey(PpleTApplication, unique=True, db_column='ck_application_no')
    position = models.IntegerField()
    notes = models.CharField(max_length=4000, blank=True)
    class Meta:
        db_table = u'appl_t_waitlist'

class ApplTRoomPreferencesPr(models.Model):
    ck_application_no = models.IntegerField()
    ck_preference_no = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'appl_t_room_preferences_pr'

class ApplTRoomPreferencesBkp(models.Model):
    ck_application_no = models.IntegerField()
    ck_preference_no = models.IntegerField()
    fk_bed_space = models.CharField(max_length=10, blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_room_type = models.CharField(max_length=15, blank=True)
    fk_section_id = models.CharField(max_length=8, blank=True)
    fk_floor_id = models.CharField(max_length=8, blank=True)
    fk_building_id = models.CharField(max_length=8, blank=True)
    fk_community = models.CharField(max_length=25, blank=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'appl_t_room_preferences_bkp'

class ApplTRoomPreferences(models.Model):
    ck_application_no = models.ForeignKey(PpleTApplication, unique=True, db_column='ck_application_no')
    ck_preference_no = models.IntegerField(unique=True)
    fk_bed_space = models.ForeignKey(RmgtTRooms, null=True, db_column='fk_bed_space', blank=True)
    fk_room_no = models.CharField(max_length=10, blank=True)
    fk_room_type = models.ForeignKey(RmgtTRoomType, null=True, db_column='fk_room_type', blank=True)
    fk_section = models.ForeignKey(RmgtTFloorSections, null=True, blank=True)
    fk_floor = models.ForeignKey(RmgtTFloors, null=True, blank=True)
    fk_building = models.ForeignKey(RmgtTBuildings, null=True, blank=True)
    fk_community = models.ForeignKey(RmgtTCommunity, null=True, db_column='fk_community', blank=True)
    critical = models.IntegerField(null=True, blank=True)
    valid = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'appl_t_room_preferences'

class ApplTRoommatePreferenceBkp(models.Model):
    pk_application_no = models.IntegerField()
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'appl_t_roommate_preference_bkp'

class ApplTRoommatePreferencesPr(models.Model):
    pk_application_no = models.IntegerField()
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'appl_t_roommate_preferences_pr'

class ApplTRoommatePreferences(models.Model):
    pk_application_no = models.ForeignKey(PpleTApplication, unique=True, db_column='pk_application_no')
    valid = models.IntegerField()
    roommate_nid_1 = models.CharField(max_length=15, blank=True)
    roommate_nid_2 = models.CharField(max_length=15, blank=True)
    roommate_nid_3 = models.CharField(max_length=15, blank=True)
    roommate_nid_4 = models.CharField(max_length=15, blank=True)
    roommate_nid_5 = models.CharField(max_length=15, blank=True)
    roommate_nid_6 = models.CharField(max_length=15, blank=True)
    roommate_nid_7 = models.CharField(max_length=15, blank=True)
    roommate_nid_8 = models.CharField(max_length=15, blank=True)
    roommate_nid_9 = models.CharField(max_length=15, blank=True)
    roommate_nid_10 = models.CharField(max_length=15, blank=True)
    roommate_nid_11 = models.CharField(max_length=15, blank=True)
    roommate_rms_1 = models.IntegerField(null=True, blank=True)
    roommate_rms_2 = models.IntegerField(null=True, blank=True)
    roommate_rms_3 = models.IntegerField(null=True, blank=True)
    roommate_rms_4 = models.IntegerField(null=True, blank=True)
    roommate_rms_5 = models.IntegerField(null=True, blank=True)
    roommate_rms_6 = models.IntegerField(null=True, blank=True)
    roommate_rms_7 = models.IntegerField(null=True, blank=True)
    roommate_rms_8 = models.IntegerField(null=True, blank=True)
    roommate_rms_9 = models.IntegerField(null=True, blank=True)
    roommate_rms_10 = models.IntegerField(null=True, blank=True)
    roommate_rms_11 = models.IntegerField(null=True, blank=True)
    roommate_name_1 = models.CharField(max_length=80, blank=True)
    roommate_name_2 = models.CharField(max_length=80, blank=True)
    roommate_name_3 = models.CharField(max_length=80, blank=True)
    roommate_name_4 = models.CharField(max_length=80, blank=True)
    roommate_name_5 = models.CharField(max_length=80, blank=True)
    roommate_name_6 = models.CharField(max_length=80, blank=True)
    roommate_name_7 = models.CharField(max_length=80, blank=True)
    roommate_name_8 = models.CharField(max_length=80, blank=True)
    roommate_name_9 = models.CharField(max_length=80, blank=True)
    roommate_name_10 = models.CharField(max_length=80, blank=True)
    roommate_name_11 = models.CharField(max_length=80, blank=True)
    roommate_sid_1 = models.CharField(max_length=20, blank=True)
    roommate_sid_2 = models.CharField(max_length=20, blank=True)
    roommate_sid_3 = models.CharField(max_length=20, blank=True)
    roommate_sid_4 = models.CharField(max_length=20, blank=True)
    roommate_sid_5 = models.CharField(max_length=20, blank=True)
    roommate_sid_6 = models.CharField(max_length=20, blank=True)
    roommate_sid_7 = models.CharField(max_length=20, blank=True)
    roommate_sid_8 = models.CharField(max_length=20, blank=True)
    roommate_sid_9 = models.CharField(max_length=20, blank=True)
    roommate_sid_10 = models.CharField(max_length=20, blank=True)
    roommate_sid_11 = models.CharField(max_length=20, blank=True)
    class Meta:
        db_table = u'appl_t_roommate_preferences'

class ApplTMatchingCriteria(models.Model):
    pk_priority_number = models.IntegerField(unique=True)
    matching_criteria_description = models.CharField(max_length=50, blank=True)
    display_order = models.IntegerField(null=True, blank=True)
    critical = models.IntegerField()
    class Meta:
        db_table = u'appl_t_matching_criteria'

class ApplTEligibilityCriteria(models.Model):
    pk_criteria_no = models.IntegerField(unique=True)
    criteria_value = models.CharField(max_length=30, blank=True)
    eligibility_criteria_desc = models.CharField(max_length=50, blank=True)
    field_name = models.CharField(max_length=50, blank=True)
    field_table = models.CharField(max_length=30, blank=True)
    operator = models.CharField(max_length=4, blank=True)
    required = models.IntegerField(null=True, blank=True)
    value_type = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'appl_t_eligibility_criteria'

class ApplTAppGroupMembers(models.Model):
    ck_rms_gid = models.ForeignKey(ApplTApplicationGroups, unique=True, db_column='ck_rms_gid')
    ck_rms = models.ForeignKey(PpleTPerson, unique=True)
    fk_application_no = models.ForeignKey(PpleTApplication, db_column='fk_application_no')
    membership_type = models.CharField(max_length=10)
    member_status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'appl_t_app_group_members'

class ApplTApplicationGroups(models.Model):
    pk_rms_gid = models.IntegerField(unique=True)
    group_id = models.CharField(max_length=20, blank=True)
    group_alias = models.CharField(max_length=50, blank=True)
    group_name = models.CharField(max_length=50, blank=True)
    fk_group_type = models.ForeignKey(LUTAppGroupTypes, db_column='fk_group_type')
    group_closed = models.CharField(max_length=10, blank=True)
    group_app_status = models.CharField(max_length=10, blank=True)
    group_app_status_date = models.DateField(null=True, blank=True)
    group_total = models.IntegerField(null=True, blank=True)
    application_type = models.CharField(max_length=50, blank=True)
    group_preference_attribute_1 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_2 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_3 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_4 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_5 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_6 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_7 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_8 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_9 = models.CharField(max_length=50, blank=True)
    group_preference_attribute_10 = models.CharField(max_length=50, blank=True)
    group_letter_sent1 = models.DateField(null=True, blank=True)
    group_letter_sent2 = models.DateField(null=True, blank=True)
    group_letter_sent3 = models.DateField(null=True, blank=True)
    group_letter_sent4 = models.DateField(null=True, blank=True)
    group_letter_sent5 = models.DateField(null=True, blank=True)
    group_letter_sent6 = models.DateField(null=True, blank=True)
    group_letter_sent7 = models.DateField(null=True, blank=True)
    group_letter_sent8 = models.DateField(null=True, blank=True)
    group_letter_sent9 = models.DateField(null=True, blank=True)
    group_letter_sent10 = models.DateField(null=True, blank=True)
    group_letter_received1 = models.DateField(null=True, blank=True)
    group_letter_received2 = models.DateField(null=True, blank=True)
    group_letter_received3 = models.DateField(null=True, blank=True)
    group_letter_received4 = models.DateField(null=True, blank=True)
    group_letter_received5 = models.DateField(null=True, blank=True)
    group_letter_received6 = models.DateField(null=True, blank=True)
    group_letter_received7 = models.DateField(null=True, blank=True)
    group_letter_received8 = models.DateField(null=True, blank=True)
    group_letter_received9 = models.DateField(null=True, blank=True)
    group_letter_received10 = models.DateField(null=True, blank=True)
    group_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'appl_t_application_groups'

class AcctTTransfer(models.Model):
    pk_posting_id = models.IntegerField(unique=True)
    tx_id = models.CharField(max_length=20, blank=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    fk_dr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_dr_account')
    fk_cr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_cr_account')
    transfer_amount = models.DecimalField(max_digits=18, decimal_places=5)
    entry_date = models.DateField()
    entered_by = models.CharField(max_length=50)
    narration = models.CharField(max_length=100, blank=True)
    balance = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    refersto = models.CharField(max_length=50, blank=True)
    flag_reverse_transaction = models.IntegerField(null=True, blank=True)
    amount_due = models.DecimalField(max_digits=18, decimal_places=5)
    posted = models.DateField(null=True, blank=True)
    clbal = models.IntegerField()
    ck_invoice_no = models.ForeignKey(AcctTInvoice, db_column='ck_invoice_no')
    fiscal_year = models.CharField(max_length=4)
    effective_date = models.DateField()
    term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    class Meta:
        db_table = u'acct_t_transfer'

class AcctTTransactionType(models.Model):
    pk_txtype = models.CharField(max_length=10, unique=True)
    transaction_type_default = models.IntegerField()
    charges = models.IntegerField()
    uploadable = models.IntegerField()
    transaction_type_description = models.CharField(max_length=50, blank=True)
    fk_debit_account = models.ForeignKey(AcctTAccountNames, db_column='fk_debit_account')
    secondary_code = models.CharField(max_length=50, blank=True)
    fk_credit_account = models.ForeignKey(AcctTAccountNames, db_column='fk_credit_account')
    fk_tax_txtype1 = models.CharField(max_length=10, blank=True)
    tax1_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_tax_txtype2 = models.CharField(max_length=10, blank=True)
    tax2_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_tax_txtype3 = models.CharField(max_length=10, blank=True)
    tax3_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    fk_tax_txtype4 = models.CharField(max_length=10, blank=True)
    tax4_percentage = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    min_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    max_tx = models.DecimalField(null=True, max_digits=18, decimal_places=5, blank=True)
    bb_close_acc = models.IntegerField(null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    credit_invoice = models.IntegerField(null=True, blank=True)
    pointofsale = models.IntegerField()
    transfer = models.IntegerField()
    bond = models.IntegerField(null=True, blank=True)
    refund = models.IntegerField(null=True, blank=True)
    payment = models.IntegerField(null=True, blank=True)
    paymentbond = models.IntegerField(null=True, blank=True)
    banktransfer = models.IntegerField(null=True, blank=True)
    it = models.IntegerField()
    pi = models.IntegerField()
    application = models.IntegerField()
    class Meta:
        db_table = u'acct_t_transaction_type'

class AcctTTaxTransactionType(models.Model):
    pk_tax_txtype = models.CharField(max_length=10, primary_key=True)
    tax_transaction_type_descript = models.CharField(max_length=30)
    fk_debit_account = models.ForeignKey(AcctTAccountNames, db_column='fk_debit_account')
    fk_credit_account = models.ForeignKey(AcctTAccountNames, db_column='fk_credit_account')
    percentage = models.DecimalField(max_digits=18, decimal_places=5)
    secondary_code = models.CharField(max_length=50, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'acct_t_tax_transaction_type'

class AcctTPostingidIncremental(models.Model):
    pk_posting_id = models.IntegerField(unique=True)
    last_modified_table_name = models.CharField(max_length=50, blank=True)
    last_updated_datetime = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'acct_t_postingid_incremental'

class AcctTPaymentDetails(models.Model):
    ck_posting_id = models.IntegerField(unique=True)
    ck_payment_no = models.ForeignKey(AcctTPayment, unique=True, db_column='ck_payment_no')
    ck_txid = models.CharField(max_length=20, unique=True)
    ck_invoice_no = models.CharField(max_length=10, unique=True)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    fk_method_code = models.ForeignKey(AcctTMethodOfPayment, null=True, db_column='fk_method_code', blank=True)
    payment_type = models.CharField(max_length=8)
    payment_comments = models.CharField(max_length=250, blank=True)
    fk_dr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_dr_account')
    fk_cr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_cr_account')
    payment_ledger_amount = models.DecimalField(max_digits=18, decimal_places=5)
    flag_reverse_transaction = models.IntegerField()
    entry_date = models.DateField()
    balance = models.DecimalField(max_digits=18, decimal_places=5)
    refersto = models.CharField(max_length=50, blank=True)
    payment_posting_id = models.IntegerField()
    posted = models.DateField(null=True, blank=True)
    clbal = models.IntegerField()
    entered_by = models.CharField(max_length=50)
    fk_term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    class Meta:
        db_table = u'acct_t_payment_details'

class AcctTPayment(models.Model):
    pk_payment_no = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    payment_date = models.DateField()
    total_amount_paid = models.DecimalField(max_digits=18, decimal_places=5)
    existing_unallocated_amount = models.DecimalField(max_digits=18, decimal_places=5)
    class Meta:
        db_table = u'acct_t_payment'

class AcctTOrders(models.Model):
    pk_order_id = models.IntegerField(unique=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_invoice_no = models.ForeignKey(AcctTInvoice, null=True, db_column='fk_invoice_no', blank=True)
    order_date = models.DateField()
    class Meta:
        db_table = u'acct_t_orders'

class AcctTMisctransPerson(models.Model):
    ck_misctrans_id = models.IntegerField(unique=True)
    ck_misctrans_person_date = models.DateField(unique=True)
    ck_rms = models.ForeignKey(PpleTPerson)
    fk_order = models.ForeignKey(AcctTOrders)
    sk_misctrans_order_id = models.CharField(max_length=20, unique=True)
    fk_misc_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_misc_txtype')
    misctrans_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.CharField(max_length=10, blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.CharField(max_length=10, blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.CharField(max_length=10, blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.CharField(max_length=10, blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    term_id = models.CharField(max_length=8, blank=True)
    class Meta:
        db_table = u'acct_t_misctrans_person'

class AcctTMethodOfPayment(models.Model):
    pk_method_code = models.CharField(max_length=25, unique=True)
    method_description = models.CharField(max_length=30)
    status = models.IntegerField()
    class Meta:
        db_table = u'acct_t_method_of_payment'

class AcctTLiabilityPerson(models.Model):
    ck_liability_id = models.IntegerField(unique=True)
    ck_liability_person_date = models.DateField(unique=True)
    ck_rms = models.ForeignKey(PpleTPerson)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    sk_liability_order_id = models.CharField(max_length=20)
    liability_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_tax_type1 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_tax_type1', blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_tax_type2 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_tax_type2', blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_tax_type3 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_tax_type3', blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_tax_type4 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_tax_type4', blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    term_id = models.CharField(max_length=8, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'acct_t_liability_person'

class AcctTInvoiceDetails(models.Model):
    ck_posting_id = models.IntegerField(unique=True)
    ck_invoice_no = models.ForeignKey(AcctTInvoice, unique=True, db_column='ck_invoice_no')
    ck_txid = models.CharField(max_length=20, unique=True)
    order_type = models.CharField(max_length=25)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    fk_dr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_dr_account')
    fk_cr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_cr_account')
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype1', blank=True)
    fk_tax1_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax1_dr_account', blank=True)
    fk_tax1_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax1_cr_account', blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype2', blank=True)
    fk_tax2_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax2_dr_account', blank=True)
    fk_tax2_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax2_cr_account', blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype3', blank=True)
    fk_tax3_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax3_dr_account', blank=True)
    fk_tax3_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax3_cr_account', blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype4', blank=True)
    fk_tax4_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax4_dr_account', blank=True)
    fk_tax4_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax4_cr_account', blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    flag_reverse_transaction = models.IntegerField()
    amount_due = models.DecimalField(max_digits=18, decimal_places=5)
    invoice_description = models.CharField(max_length=250, blank=True)
    entry_date = models.DateField()
    fiscal_year = models.CharField(max_length=4)
    entered_by = models.CharField(max_length=50)
    posted = models.DateField(null=True, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    balance = models.DecimalField(max_digits=18, decimal_places=5)
    refersto = models.CharField(max_length=50, blank=True)
    clbal = models.IntegerField()
    fk_term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    class Meta:
        db_table = u'acct_t_invoice_details'

class AcctTInvoice(models.Model):
    pk_invoice_no = models.CharField(max_length=10, primary_key=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    open_date = models.DateField()
    due_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    date_printed = models.DateField(null=True, blank=True)
    class Meta:
        db_table = u'acct_t_invoice'

class AcctTCreditInvoiceDetails(models.Model):
    ck_credit_posting_id = models.IntegerField(unique=True)
    ck_invoice_no = models.ForeignKey(AcctTInvoice, unique=True, db_column='ck_invoice_no')
    ck_credit_txid = models.CharField(max_length=20, unique=True)
    order_type = models.CharField(max_length=25)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    fk_dr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_dr_account')
    fk_cr_account = models.ForeignKey(AcctTAccountNames, db_column='fk_cr_account')
    basic_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype1', blank=True)
    fk_tax1_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax1_dr_account', blank=True)
    fk_tax1_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax1_cr_account', blank=True)
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype2 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype2', blank=True)
    fk_tax2_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax2_dr_account', blank=True)
    fk_tax2_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax2_cr_account', blank=True)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype3 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype3', blank=True)
    fk_tax3_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax3_dr_account', blank=True)
    fk_tax3_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax3_cr_account', blank=True)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype4 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype4', blank=True)
    fk_tax4_dr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax4_dr_account', blank=True)
    fk_tax4_cr_account = models.ForeignKey(AcctTAccountNames, null=True, db_column='fk_tax4_cr_account', blank=True)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    flag_reverse_transaction = models.IntegerField()
    amount_due = models.DecimalField(max_digits=18, decimal_places=5)
    invoice_description = models.CharField(max_length=250, blank=True)
    entry_date = models.DateField()
    fiscal_year = models.CharField(max_length=4)
    entered_by = models.CharField(max_length=50)
    posted = models.DateField(null=True, blank=True)
    effective_date = models.DateField(null=True, blank=True)
    balance = models.DecimalField(max_digits=18, decimal_places=5)
    refersto = models.CharField(max_length=50, blank=True)
    clbal = models.IntegerField()
    fk_term = models.ForeignKey(RmgtTTermDates, null=True, blank=True)
    class Meta:
        db_table = u'acct_t_credit_invoice_details'

class AcctTChequePaid(models.Model):
    pk_payment_no = models.ForeignKey(AcctTPayment, unique=True, db_column='pk_payment_no')
    payee = models.CharField(max_length=25, blank=True)
    bank = models.CharField(max_length=20, blank=True)
    branch = models.CharField(max_length=20, blank=True)
    cheque_no = models.CharField(max_length=20)
    routing_number = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'acct_t_cheque_paid'

class AcctTCcardTransactionLog(models.Model):
    transaction_log_id = models.IntegerField(unique=True)
    rms_id = models.IntegerField()
    result = models.IntegerField()
    respmsg = models.CharField(max_length=50)
    authcode = models.CharField(max_length=50, blank=True)
    avsaddr = models.CharField(max_length=50, blank=True)
    avszip = models.CharField(max_length=50, blank=True)
    iavs = models.CharField(max_length=50, blank=True)
    transaction_date = models.DateField()
    transaction_amount = models.DecimalField(max_digits=18, decimal_places=5)
    pnref = models.CharField(max_length=50, blank=True)
    resultcode = models.CharField(max_length=50, blank=True)
    reference = models.CharField(max_length=50, blank=True)
    batch_trans = models.CharField(max_length=50, blank=True)
    key1 = models.CharField(max_length=50, blank=True)
    key2 = models.CharField(max_length=50, blank=True)
    key3 = models.CharField(max_length=50, blank=True)
    udprof1 = models.CharField(max_length=50, blank=True)
    udprof2 = models.CharField(max_length=50, blank=True)
    udprof3 = models.CharField(max_length=50, blank=True)
    class Meta:
        db_table = u'acct_t_ccard_transaction_log'

class AcctTCcardDetails(models.Model):
    pk_payment_no = models.ForeignKey(AcctTPayment, unique=True, db_column='pk_payment_no')
    card_type = models.CharField(max_length=10)
    expiry_date = models.CharField(max_length=5)
    name_on_card = models.CharField(max_length=25)
    account_number = models.CharField(max_length=50)
    class Meta:
        db_table = u'acct_t_ccard_details'

class AcctTBillingType(models.Model):
    pk_billing_type = models.CharField(max_length=50, unique=True)
    billing_type_description = models.CharField(max_length=50)
    accom = models.IntegerField()
    pln = models.IntegerField()
    facility = models.IntegerField()
    equip = models.IntegerField()
    menu = models.IntegerField()
    snack = models.IntegerField()
    misc = models.IntegerField()
    class Meta:
        db_table = u'acct_t_billing_type'

class AcctTApplicationPerson(models.Model):
    pk_appl_id = models.IntegerField(unique=True)
    fk_application_no = models.ForeignKey(PpleTApplication, null=True, db_column='fk_application_no', blank=True)
    fk_rms = models.ForeignKey(PpleTPerson)
    fk_order = models.ForeignKey(AcctTOrders)
    fk_txtype = models.ForeignKey(AcctTTransactionType, db_column='fk_txtype')
    sk_app_order_id = models.CharField(max_length=20)
    app_date = models.DateField()
    tax1_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax2_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax3_amount = models.DecimalField(max_digits=18, decimal_places=5)
    tax4_amount = models.DecimalField(max_digits=18, decimal_places=5)
    application_amount = models.DecimalField(max_digits=18, decimal_places=5)
    fk_taxtype1 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype1', blank=True)
    fk_taxtype2 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype2', blank=True)
    fk_taxtype3 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype3', blank=True)
    fk_taxtype4 = models.ForeignKey(AcctTTaxTransactionType, null=True, db_column='fk_taxtype4', blank=True)
    class Meta:
        db_table = u'acct_t_application_person'

class AcctTAccountNames(models.Model):
    pk_account_code = models.CharField(max_length=12, unique=True)
    account_name = models.CharField(max_length=50)
    account_type = models.CharField(max_length=20)
    alias_code = models.CharField(max_length=30, blank=True)
    status = models.IntegerField()
    ix_receivable = models.IntegerField()
    class Meta:
        db_table = u'acct_t_account_names'

