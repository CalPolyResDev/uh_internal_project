# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#     * Rearrange models' order
#     * Make sure each model has one field with primary_key=True
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.

from django.db import models

class FloorSection(models.Model):
    pk_section_id = models.CharField(max_length=8, unique=True)
    fk_floor = models.ForeignKey(RmgtTFloors)
    floor_sections_name = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_floor_sections'

class Floor(models.Model):
    pk_floor_id = models.CharField(max_length=8, unique=True)
    fk_building = models.ForeignKey(RmgtTBuildings)
    floors_name = models.CharField(max_length=50)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_floors'

class Community(models.Model):
    pk_community = models.CharField(max_length=25, unique=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_community'

class Building(models.Model):
    pk_building_id = models.CharField(max_length=8, unique=True)
    fk_community = models.ForeignKey(RmgtTCommunity, db_column='fk_community')
    buildings_name = models.CharField(max_length=30)
    buildings_address_1 = models.CharField(max_length=50, blank=True)
    buildings_address_1b = models.CharField(max_length=50, blank=True)
    buildings_address_2 = models.CharField(max_length=50, blank=True)
    buildings_postcode = models.CharField(max_length=15, blank=True)
    buildings_state = models.CharField(max_length=15, blank=True)
    status = models.IntegerField()
    ud_hyperlink1 = models.CharField(max_length=200, blank=True)
    ud_hyperlink2 = models.CharField(max_length=200, blank=True)
    ud_hyperlink3 = models.CharField(max_length=200, blank=True)
    ud_hyperlink4 = models.CharField(max_length=200, blank=True)
    ud_hyperlink5 = models.CharField(max_length=200, blank=True)
    ud_hyperlink6 = models.CharField(max_length=200, blank=True)
    ud_hyperlink7 = models.CharField(max_length=200, blank=True)
    locking_system_buildingid = models.CharField(max_length=30, blank=True)
    class Meta:
        db_table = u'rmgt_t_buildings'

class ParkingPass(models.Model):
    fk_rms = models.ForeignKey(PpleTPerson)
    pk_vehicle_id = models.IntegerField(unique=True)
    make = models.CharField(max_length=50, blank=True)
    model = models.CharField(max_length=50, blank=True)
    parking_year = models.CharField(max_length=50, blank=True)
    color = models.CharField(max_length=50, blank=True)
    license_plate = models.CharField(max_length=50, blank=True)
    permit_number = models.CharField(max_length=20, blank=True)
    lot_number = models.CharField(max_length=50, blank=True)
    permit_expiration_date = models.CharField(max_length=50, blank=True)
    registered_owner = models.CharField(max_length=50, blank=True)
    parking_notes = models.CharField(max_length=250, blank=True)
    class Meta:
        db_table = u'pple_t_parking'

class PackageNotifications(models.Model):
    fk_package_number = models.IntegerField()
    fk_operator_that_notified = models.IntegerField()
    fk_rms_id = models.IntegerField()
    notification_sent_date = models.CharField(max_length=10, blank=True)
    class Meta:
        db_table = u'pple_t_package_notifications'

class Packages(models.Model):
    pk_package_number = models.IntegerField(unique=True)
    fk_rms_id = models.IntegerField()
    receive_date = models.DateField(null=True, blank=True)
    postal_carrier_code = models.CharField(max_length=50, blank=True)
    major_code = models.CharField(max_length=50, blank=True)
    detail_code = models.CharField(max_length=50, blank=True)
    number_of_notices_sent = models.IntegerField(null=True, blank=True)
    distributed_date = models.DateField(null=True, blank=True)
    tracking_number = models.CharField(max_length=50, blank=True)
    fk_receiving_operator_code = models.IntegerField()
    fk_distributing_operator_code = models.IntegerField()
    class Meta:
        db_table = u'pple_t_packages'

class RoomConfigs(models.Model):
    ck_bed_space = models.ForeignKey(RmgtTRooms, unique=True, db_column='ck_bed_space')
    ck_rooms_config_no = models.IntegerField(unique=True)
    fk_rooms_type = models.ForeignKey(RmgtTRoomType, db_column='fk_rooms_type')
    fk_section = models.ForeignKey(RmgtTFloorSections)
    rooms_start_date = models.DateField()
    rooms_end_date = models.DateField()
    gender = models.CharField(max_length=1)
    phone_equip_no = models.CharField(max_length=4, blank=True)
    phone_extension = models.CharField(max_length=16, blank=True)
    key_id = models.CharField(max_length=20, blank=True)
    operating_mode = models.CharField(max_length=1)
    rooms_capacity = models.IntegerField()
    rooms_address_1 = models.CharField(max_length=50, blank=True)
    eligibility_criteria = models.CharField(max_length=250)
    fk_use_1 = models.ForeignKey(LUTRmgtTUse1, null=True, db_column='fk_use_1', blank=True)
    fk_use_2 = models.ForeignKey(LUTRmgtTUse2, null=True, db_column='fk_use_2', blank=True)
    status = models.IntegerField()
    desirability = models.IntegerField()
    class Meta:
        db_table = u'rmgt_t_room_configs'